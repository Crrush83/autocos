// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosv4_client.proto

#include "cosv4_client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AclInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppAttrModifyReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppAttrQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppMsg_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_BucketCreateReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketCreateRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_COSTransToCASReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_COSTransToCASRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CamAtuhItem_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckObjAclReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckObjAclRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CorsRule_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<52> scc_info_CosReqMsg_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<52> scc_info_CosRspMsg_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CustomHeader_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DelExpireFileReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelExpireFileRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelNoHashFileReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DirCreateReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DirCreateRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorCodeReturned_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtraAttr_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileBatchDelReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileBatchDelRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileDelReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDelRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDelState_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDownToCASReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDownToCASRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketLockReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBucketLockRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketUinReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBucketUinRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjAclReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetObjAclRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectExtend_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyPair_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LFAttr_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListDirectReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListDirectRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListMutiobjReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListMutiobjRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListObjVerReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListObjVerRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LockInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateFinFileReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Migrateinfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MutiObjItem_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjExpireAttr_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ObjItem_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjTag_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Opinfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OwnerInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrefixReturned_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReservedAttr_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RoutingRule_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetBucketLockReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketLockRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetBucketUinReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketUinRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCamAttrReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCamAttrRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMigrateReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMigrateRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetObjAclReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetObjAclRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SseInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StorageTypeAttr_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Tag_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WebsiteInfo_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cosv4_5fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_delObj_cosv4_5fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cos_5fcomm_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_storeinfo_cos_5fcomm_2eproto;
namespace ClientCos {
class CosAppMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CosAppMsg> _instance;
} _CosAppMsg_default_instance_;
class AppMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppMsg> _instance;
} _AppMsg_default_instance_;
class CosReqMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CosReqMsg> _instance;
} _CosReqMsg_default_instance_;
class CosRspMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CosRspMsg> _instance;
} _CosRspMsg_default_instance_;
class MigrateinfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Migrateinfo> _instance;
} _Migrateinfo_default_instance_;
class ExtraAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExtraAttr> _instance;
} _ExtraAttr_default_instance_;
class ObjExpireAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjExpireAttr> _instance;
} _ObjExpireAttr_default_instance_;
class UploadAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadAttr> _instance;
} _UploadAttr_default_instance_;
class CasInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasInfo> _instance;
} _CasInfo_default_instance_;
class BucketCreateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketCreateReq> _instance;
} _BucketCreateReq_default_instance_;
class BucketCreateRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketCreateRsp> _instance;
} _BucketCreateRsp_default_instance_;
class BucketAttrModifyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketAttrModifyReq> _instance;
} _BucketAttrModifyReq_default_instance_;
class BucketAttrModifyRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketAttrModifyRsp> _instance;
} _BucketAttrModifyRsp_default_instance_;
class BucketAttrQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketAttrQueryReq> _instance;
} _BucketAttrQueryReq_default_instance_;
class BucketAttrQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketAttrQueryRsp> _instance;
} _BucketAttrQueryRsp_default_instance_;
class DirCreateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DirCreateReq> _instance;
} _DirCreateReq_default_instance_;
class DirCreateRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DirCreateRsp> _instance;
} _DirCreateRsp_default_instance_;
class ObjAttrModifyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjAttrModifyReq> _instance;
} _ObjAttrModifyReq_default_instance_;
class ObjAttrModifyRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjAttrModifyRsp> _instance;
} _ObjAttrModifyRsp_default_instance_;
class SpObjAttrModifyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpObjAttrModifyReq> _instance;
} _SpObjAttrModifyReq_default_instance_;
class SpObjAttrModifyRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpObjAttrModifyRsp> _instance;
} _SpObjAttrModifyRsp_default_instance_;
class ObjAttrQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjAttrQueryReq> _instance;
} _ObjAttrQueryReq_default_instance_;
class ObjAttrQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjAttrQueryRsp> _instance;
} _ObjAttrQueryRsp_default_instance_;
class DeleteReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteReq> _instance;
} _DeleteReq_default_instance_;
class DeleteRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRsp> _instance;
} _DeleteRsp_default_instance_;
class ListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListReq> _instance;
} _ListReq_default_instance_;
class ListRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListRsp> _instance;
} _ListRsp_default_instance_;
class ListMutiobjReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListMutiobjReq> _instance;
} _ListMutiobjReq_default_instance_;
class ListMutiobjRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListMutiobjRsp> _instance;
} _ListMutiobjRsp_default_instance_;
class ListObjVerReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListObjVerReq> _instance;
} _ListObjVerReq_default_instance_;
class ListObjVerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListObjVerRsp> _instance;
} _ListObjVerRsp_default_instance_;
class UnfinObjAttrModifyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnfinObjAttrModifyReq> _instance;
} _UnfinObjAttrModifyReq_default_instance_;
class UnfinObjAttrModifyRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnfinObjAttrModifyRsp> _instance;
} _UnfinObjAttrModifyRsp_default_instance_;
class AppAttrQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppAttrQueryReq> _instance;
} _AppAttrQueryReq_default_instance_;
class AppAttrQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppAttrQueryRsp> _instance;
} _AppAttrQueryRsp_default_instance_;
class AppAttrModifyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppAttrModifyReq> _instance;
} _AppAttrModifyReq_default_instance_;
class AppAttrModifyRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppAttrModifyRsp> _instance;
} _AppAttrModifyRsp_default_instance_;
class PreviewFileAttrQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewFileAttrQueryReq> _instance;
} _PreviewFileAttrQueryReq_default_instance_;
class PreviewFileAttrQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewFileAttrQueryRsp> _instance;
} _PreviewFileAttrQueryRsp_default_instance_;
class ObjModTimeStampReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjModTimeStampReq> _instance;
} _ObjModTimeStampReq_default_instance_;
class ObjModTimeStampRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjModTimeStampRsp> _instance;
} _ObjModTimeStampRsp_default_instance_;
class delObjDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delObj> _instance;
} _delObj_default_instance_;
class FileBatchDelReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileBatchDelReq> _instance;
} _FileBatchDelReq_default_instance_;
class FileDelStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileDelState> _instance;
} _FileDelState_default_instance_;
class FileBatchDelRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileBatchDelRsp> _instance;
} _FileBatchDelRsp_default_instance_;
class UploadDelmarkerReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadDelmarkerReq> _instance;
} _UploadDelmarkerReq_default_instance_;
class UploadDelmarkerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadDelmarkerRsp> _instance;
} _UploadDelmarkerRsp_default_instance_;
class FileUnfinishAttrQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileUnfinishAttrQueryReq> _instance;
} _FileUnfinishAttrQueryReq_default_instance_;
class FileUnfinishAttrQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileUnfinishAttrQueryRsp> _instance;
} _FileUnfinishAttrQueryRsp_default_instance_;
class ReduceLifecycleReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReduceLifecycleReq> _instance;
} _ReduceLifecycleReq_default_instance_;
class ReduceLifecycleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReduceLifecycleRsp> _instance;
} _ReduceLifecycleRsp_default_instance_;
class RetrieveLifecycleReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RetrieveLifecycleReq> _instance;
} _RetrieveLifecycleReq_default_instance_;
class RetrieveLifecycleRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RetrieveLifecycleRsp> _instance;
} _RetrieveLifecycleRsp_default_instance_;
class OpinfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Opinfo> _instance;
} _Opinfo_default_instance_;
class ReservedAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReservedAttr> _instance;
} _ReservedAttr_default_instance_;
class CustomHeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomHeader> _instance;
} _CustomHeader_default_instance_;
class CorsRuleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CorsRule> _instance;
} _CorsRule_default_instance_;
class TagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Tag> _instance;
} _Tag_default_instance_;
class ObjTagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjTag> _instance;
} _ObjTag_default_instance_;
class LockInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LockInfo> _instance;
} _LockInfo_default_instance_;
class AppAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppAttr> _instance;
} _AppAttr_default_instance_;
class KeyPairDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyPair> _instance;
} _KeyPair_default_instance_;
class ObjItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjItem> _instance;
} _ObjItem_default_instance_;
class MutiObjItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MutiObjItem> _instance;
} _MutiObjItem_default_instance_;
class DelObjExpireAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelObjExpireAttr> _instance;
} _DelObjExpireAttr_default_instance_;
class DelExpireFileReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelExpireFileReq> _instance;
} _DelExpireFileReq_default_instance_;
class DelExpireFileRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelExpireFileRsp> _instance;
} _DelExpireFileRsp_default_instance_;
class StorageTypeAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StorageTypeAttr> _instance;
} _StorageTypeAttr_default_instance_;
class LFAttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LFAttr> _instance;
} _LFAttr_default_instance_;
class FileDelReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileDelReq> _instance;
} _FileDelReq_default_instance_;
class FileDelRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileDelRsp> _instance;
} _FileDelRsp_default_instance_;
class ExpireFileDelNoVerReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpireFileDelNoVerReq> _instance;
} _ExpireFileDelNoVerReq_default_instance_;
class ExpireFileDelNoverRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpireFileDelNoverRsp> _instance;
} _ExpireFileDelNoverRsp_default_instance_;
class ExpireFileDelVerReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpireFileDelVerReq> _instance;
} _ExpireFileDelVerReq_default_instance_;
class ExpireFileDelVerRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpireFileDelVerRsp> _instance;
} _ExpireFileDelVerRsp_default_instance_;
class SetBucketPriAttrReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketPriAttrReq> _instance;
} _SetBucketPriAttrReq_default_instance_;
class SetBucketPriAttrRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketPriAttrRsp> _instance;
} _SetBucketPriAttrRsp_default_instance_;
class FileDownToCASReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileDownToCASReq> _instance;
} _FileDownToCASReq_default_instance_;
class FileDownToCASRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileDownToCASRsp> _instance;
} _FileDownToCASRsp_default_instance_;
class CasObjAttrModifyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasObjAttrModifyReq> _instance;
} _CasObjAttrModifyReq_default_instance_;
class CasObjAttrModifyRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasObjAttrModifyRsp> _instance;
} _CasObjAttrModifyRsp_default_instance_;
class CasFileRecoverDelReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasFileRecoverDelReq> _instance;
} _CasFileRecoverDelReq_default_instance_;
class CasFileRecoverDelRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasFileRecoverDelRsp> _instance;
} _CasFileRecoverDelRsp_default_instance_;
class CasObjRestoreErrReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasObjRestoreErrReq> _instance;
} _CasObjRestoreErrReq_default_instance_;
class CasObjRestoreErrRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasObjRestoreErrRsp> _instance;
} _CasObjRestoreErrRsp_default_instance_;
class CasObjRestoreFinReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasObjRestoreFinReq> _instance;
} _CasObjRestoreFinReq_default_instance_;
class CasObjRestoreFinRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CasObjRestoreFinRsp> _instance;
} _CasObjRestoreFinRsp_default_instance_;
class SpObjAttrQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpObjAttrQueryReq> _instance;
} _SpObjAttrQueryReq_default_instance_;
class SpObjAttrQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SpObjAttrQueryRsp> _instance;
} _SpObjAttrQueryRsp_default_instance_;
class ObjModStorageTypeReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjModStorageTypeReq> _instance;
} _ObjModStorageTypeReq_default_instance_;
class ObjModStorageTypeRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjModStorageTypeRsp> _instance;
} _ObjModStorageTypeRsp_default_instance_;
class SseInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SseInfo> _instance;
} _SseInfo_default_instance_;
class ErrorCodeReturnedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorCodeReturned> _instance;
} _ErrorCodeReturned_default_instance_;
class PrefixReturnedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrefixReturned> _instance;
} _PrefixReturned_default_instance_;
class PrefixAndErrcodeReturnedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrefixAndErrcodeReturned> _instance;
} _PrefixAndErrcodeReturned_default_instance_;
class RoutingRuleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RoutingRule> _instance;
} _RoutingRule_default_instance_;
class WebsiteInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WebsiteInfo> _instance;
} _WebsiteInfo_default_instance_;
class SetBucketWebsiteInfoReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketWebsiteInfoReq> _instance;
} _SetBucketWebsiteInfoReq_default_instance_;
class SetBucketWebsiteInfoRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketWebsiteInfoRsp> _instance;
} _SetBucketWebsiteInfoRsp_default_instance_;
class SetCamAttrReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCamAttrReq> _instance;
} _SetCamAttrReq_default_instance_;
class SetCamAttrRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCamAttrRsp> _instance;
} _SetCamAttrRsp_default_instance_;
class BucketCamAuthQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketCamAuthQueryReq> _instance;
} _BucketCamAuthQueryReq_default_instance_;
class BucketCamAuthQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BucketCamAuthQueryRsp> _instance;
} _BucketCamAuthQueryRsp_default_instance_;
class CamAtuhItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CamAtuhItem> _instance;
} _CamAtuhItem_default_instance_;
class AppCamAuthQueryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppCamAuthQueryReq> _instance;
} _AppCamAuthQueryReq_default_instance_;
class AppCamAuthQueryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppCamAuthQueryRsp> _instance;
} _AppCamAuthQueryRsp_default_instance_;
class CgiArgsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CgiArgs> _instance;
} _CgiArgs_default_instance_;
class CgiParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CgiParams> _instance;
} _CgiParams_default_instance_;
class GetObjectExtendDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectExtend> _instance;
} _GetObjectExtend_default_instance_;
class CompleteMultiUploadExtendDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompleteMultiUploadExtend> _instance;
} _CompleteMultiUploadExtend_default_instance_;
class TrsfArgsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrsfArgs> _instance;
} _TrsfArgs_default_instance_;
class AclInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AclInfo> _instance;
} _AclInfo_default_instance_;
class AuthInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthInfo> _instance;
} _AuthInfo_default_instance_;
class OwnerInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OwnerInfo> _instance;
} _OwnerInfo_default_instance_;
class CheckObjAclReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckObjAclReq> _instance;
} _CheckObjAclReq_default_instance_;
class CheckObjAclRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckObjAclRsp> _instance;
} _CheckObjAclRsp_default_instance_;
class SetObjAclReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetObjAclReq> _instance;
} _SetObjAclReq_default_instance_;
class SetObjAclRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetObjAclRsp> _instance;
} _SetObjAclRsp_default_instance_;
class GetObjAclReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjAclReq> _instance;
} _GetObjAclReq_default_instance_;
class GetObjAclRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjAclRsp> _instance;
} _GetObjAclRsp_default_instance_;
class SetBucketUinReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketUinReq> _instance;
} _SetBucketUinReq_default_instance_;
class SetBucketUinRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketUinRsp> _instance;
} _SetBucketUinRsp_default_instance_;
class GetBucketUinReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBucketUinReq> _instance;
} _GetBucketUinReq_default_instance_;
class GetBucketUinRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBucketUinRsp> _instance;
} _GetBucketUinRsp_default_instance_;
class SetBucketLockReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketLockReq> _instance;
} _SetBucketLockReq_default_instance_;
class SetBucketLockRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketLockRsp> _instance;
} _SetBucketLockRsp_default_instance_;
class GetBucketLockReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBucketLockReq> _instance;
} _GetBucketLockReq_default_instance_;
class GetBucketLockRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBucketLockRsp> _instance;
} _GetBucketLockRsp_default_instance_;
class SetBucketInventoryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketInventoryReq> _instance;
} _SetBucketInventoryReq_default_instance_;
class SetBucketInventoryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetBucketInventoryRsp> _instance;
} _SetBucketInventoryRsp_default_instance_;
class GetBucketInventoryReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBucketInventoryReq> _instance;
} _GetBucketInventoryReq_default_instance_;
class GetBucketInventoryRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBucketInventoryRsp> _instance;
} _GetBucketInventoryRsp_default_instance_;
class COSTransToCASReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<COSTransToCASReq> _instance;
} _COSTransToCASReq_default_instance_;
class COSTransToCASRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<COSTransToCASRsp> _instance;
} _COSTransToCASRsp_default_instance_;
class ListDirectReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListDirectReq> _instance;
} _ListDirectReq_default_instance_;
class ListDirectRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListDirectRsp> _instance;
} _ListDirectRsp_default_instance_;
class MigrateFinFileReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MigrateFinFileReq> _instance;
} _MigrateFinFileReq_default_instance_;
class MigrateFinFileRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MigrateFinFileRsp> _instance;
} _MigrateFinFileRsp_default_instance_;
class MigrateUnFinFileReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MigrateUnFinFileReq> _instance;
} _MigrateUnFinFileReq_default_instance_;
class MigrateUnFinFileRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MigrateUnFinFileRsp> _instance;
} _MigrateUnFinFileRsp_default_instance_;
class SetMigrateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetMigrateReq> _instance;
} _SetMigrateReq_default_instance_;
class SetMigrateRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetMigrateRsp> _instance;
} _SetMigrateRsp_default_instance_;
class DelNoHashFileReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelNoHashFileReq> _instance;
} _DelNoHashFileReq_default_instance_;
class DelNoHashFileRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DelNoHashFileRsp> _instance;
} _DelNoHashFileRsp_default_instance_;
}  // namespace ClientCos
static void InitDefaultsscc_info_AclInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AclInfo_default_instance_;
    new (ptr) ::ClientCos::AclInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AclInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AclInfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_AppAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppAttr_default_instance_;
    new (ptr) ::ClientCos::AppAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<16> scc_info_AppAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 16, 0, InitDefaultsscc_info_AppAttr_cosv4_5fclient_2eproto}, {
      &scc_info_KeyPair_cosv4_5fclient_2eproto.base,
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_CorsRule_cosv4_5fclient_2eproto.base,
      &scc_info_ExtraAttr_cosv4_5fclient_2eproto.base,
      &scc_info_Tag_cosv4_5fclient_2eproto.base,
      &scc_info_LFAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CasInfo_cosv4_5fclient_2eproto.base,
      &scc_info_SseInfo_cosv4_5fclient_2eproto.base,
      &scc_info_WebsiteInfo_cosv4_5fclient_2eproto.base,
      &scc_info_ObjTag_cosv4_5fclient_2eproto.base,
      &scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base,
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,
      &scc_info_AclInfo_cosv4_5fclient_2eproto.base,
      &scc_info_LockInfo_cosv4_5fclient_2eproto.base,
      &scc_info_Migrateinfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_AppAttrModifyReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppAttrModifyReq_default_instance_;
    new (ptr) ::ClientCos::AppAttrModifyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppAttrModifyReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AppAttrModifyReq_cosv4_5fclient_2eproto}, {
      &scc_info_KeyPair_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppAttrModifyRsp_default_instance_;
    new (ptr) ::ClientCos::AppAttrModifyRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_AppAttrQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppAttrQueryReq_default_instance_;
    new (ptr) ::ClientCos::AppAttrQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppAttrQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AppAttrQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppAttrQueryRsp_default_instance_;
    new (ptr) ::ClientCos::AppAttrQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto}, {
      &scc_info_KeyPair_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppCamAuthQueryReq_default_instance_;
    new (ptr) ::ClientCos::AppCamAuthQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppCamAuthQueryRsp_default_instance_;
    new (ptr) ::ClientCos::AppCamAuthQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto}, {
      &scc_info_CamAtuhItem_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_AppMsg_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AppMsg_default_instance_;
    new (ptr) ::ClientCos::AppMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppMsg_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AppMsg_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_AuthInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_AuthInfo_default_instance_;
    new (ptr) ::ClientCos::AuthInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthInfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketAttrModifyReq_default_instance_;
    new (ptr) ::ClientCos::BucketAttrModifyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CorsRule_cosv4_5fclient_2eproto.base,
      &scc_info_Tag_cosv4_5fclient_2eproto.base,
      &scc_info_LFAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketAttrModifyRsp_default_instance_;
    new (ptr) ::ClientCos::BucketAttrModifyRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketAttrQueryReq_default_instance_;
    new (ptr) ::ClientCos::BucketAttrQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketAttrQueryRsp_default_instance_;
    new (ptr) ::ClientCos::BucketAttrQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 8, 0, InitDefaultsscc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CorsRule_cosv4_5fclient_2eproto.base,
      &scc_info_ExtraAttr_cosv4_5fclient_2eproto.base,
      &scc_info_Tag_cosv4_5fclient_2eproto.base,
      &scc_info_LFAttr_cosv4_5fclient_2eproto.base,
      &scc_info_WebsiteInfo_cosv4_5fclient_2eproto.base,
      &scc_info_LockInfo_cosv4_5fclient_2eproto.base,
      &scc_info_Migrateinfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketCamAuthQueryReq_default_instance_;
    new (ptr) ::ClientCos::BucketCamAuthQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketCamAuthQueryRsp_default_instance_;
    new (ptr) ::ClientCos::BucketCamAuthQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_BucketCreateReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketCreateReq_default_instance_;
    new (ptr) ::ClientCos::BucketCreateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_BucketCreateReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_BucketCreateReq_cosv4_5fclient_2eproto}, {
      &scc_info_KeyPair_cosv4_5fclient_2eproto.base,
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CorsRule_cosv4_5fclient_2eproto.base,
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_BucketCreateRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_BucketCreateRsp_default_instance_;
    new (ptr) ::ClientCos::BucketCreateRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BucketCreateRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BucketCreateRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_COSTransToCASReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_COSTransToCASReq_default_instance_;
    new (ptr) ::ClientCos::COSTransToCASReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_COSTransToCASReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_COSTransToCASReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_COSTransToCASRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_COSTransToCASRsp_default_instance_;
    new (ptr) ::ClientCos::COSTransToCASRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_COSTransToCASRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_COSTransToCASRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CamAtuhItem_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CamAtuhItem_default_instance_;
    new (ptr) ::ClientCos::CamAtuhItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CamAtuhItem_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CamAtuhItem_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasFileRecoverDelReq_default_instance_;
    new (ptr) ::ClientCos::CasFileRecoverDelReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasFileRecoverDelRsp_default_instance_;
    new (ptr) ::ClientCos::CasFileRecoverDelRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasInfo_default_instance_;
    new (ptr) ::ClientCos::CasInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasInfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasObjAttrModifyReq_default_instance_;
    new (ptr) ::ClientCos::CasObjAttrModifyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasObjAttrModifyRsp_default_instance_;
    new (ptr) ::ClientCos::CasObjAttrModifyRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasObjRestoreErrReq_default_instance_;
    new (ptr) ::ClientCos::CasObjRestoreErrReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasObjRestoreErrRsp_default_instance_;
    new (ptr) ::ClientCos::CasObjRestoreErrRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasObjRestoreFinReq_default_instance_;
    new (ptr) ::ClientCos::CasObjRestoreFinReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CasObjRestoreFinRsp_default_instance_;
    new (ptr) ::ClientCos::CasObjRestoreFinRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CgiArgs_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CgiArgs_default_instance_;
    new (ptr) ::ClientCos::CgiArgs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CgiArgs_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CgiArgs_cosv4_5fclient_2eproto}, {
      &scc_info_AuthInfo_cosv4_5fclient_2eproto.base,
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,
      &scc_info_AclInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_CgiParams_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CgiParams_default_instance_;
    new (ptr) ::ClientCos::CgiParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CgiParams_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CgiParams_cosv4_5fclient_2eproto}, {
      &scc_info_GetObjectExtend_cosv4_5fclient_2eproto.base,
      &scc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_CheckObjAclReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CheckObjAclReq_default_instance_;
    new (ptr) ::ClientCos::CheckObjAclReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckObjAclReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckObjAclReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CheckObjAclRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CheckObjAclRsp_default_instance_;
    new (ptr) ::ClientCos::CheckObjAclRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckObjAclRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckObjAclRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CompleteMultiUploadExtend_default_instance_;
    new (ptr) ::ClientCos::CompleteMultiUploadExtend();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CorsRule_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CorsRule_default_instance_;
    new (ptr) ::ClientCos::CorsRule();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CorsRule_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CorsRule_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_CosAppMsg_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CosAppMsg_default_instance_;
    new (ptr) ::ClientCos::CosAppMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CosAppMsg_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CosAppMsg_cosv4_5fclient_2eproto}, {
      &scc_info_AppMsg_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_CosReqMsg_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CosReqMsg_default_instance_;
    new (ptr) ::ClientCos::CosReqMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<52> scc_info_CosReqMsg_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 52, 0, InitDefaultsscc_info_CosReqMsg_cosv4_5fclient_2eproto}, {
      &scc_info_BucketCreateReq_cosv4_5fclient_2eproto.base,
      &scc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto.base,
      &scc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_DirCreateReq_cosv4_5fclient_2eproto.base,
      &scc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto.base,
      &scc_info_DeleteReq_cosv4_5fclient_2eproto.base,
      &scc_info_ListReq_cosv4_5fclient_2eproto.base,
      &scc_info_AppAttrQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_AppAttrModifyReq_cosv4_5fclient_2eproto.base,
      &scc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto.base,
      &scc_info_ListMutiobjReq_cosv4_5fclient_2eproto.base,
      &scc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto.base,
      &scc_info_FileBatchDelReq_cosv4_5fclient_2eproto.base,
      &scc_info_ListObjVerReq_cosv4_5fclient_2eproto.base,
      &scc_info_DelExpireFileReq_cosv4_5fclient_2eproto.base,
      &scc_info_FileDelReq_cosv4_5fclient_2eproto.base,
      &scc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto.base,
      &scc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto.base,
      &scc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto.base,
      &scc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto.base,
      &scc_info_FileDownToCASReq_cosv4_5fclient_2eproto.base,
      &scc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto.base,
      &scc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto.base,
      &scc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto.base,
      &scc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetCamAttrReq_cosv4_5fclient_2eproto.base,
      &scc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto.base,
      &scc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto.base,
      &scc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetObjAclReq_cosv4_5fclient_2eproto.base,
      &scc_info_GetObjAclReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketUinReq_cosv4_5fclient_2eproto.base,
      &scc_info_GetBucketUinReq_cosv4_5fclient_2eproto.base,
      &scc_info_ListDirectReq_cosv4_5fclient_2eproto.base,
      &scc_info_CheckObjAclReq_cosv4_5fclient_2eproto.base,
      &scc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketLockReq_cosv4_5fclient_2eproto.base,
      &scc_info_GetBucketLockReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto.base,
      &scc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto.base,
      &scc_info_COSTransToCASReq_cosv4_5fclient_2eproto.base,
      &scc_info_SetMigrateReq_cosv4_5fclient_2eproto.base,
      &scc_info_DelNoHashFileReq_cosv4_5fclient_2eproto.base,
      &scc_info_MigrateFinFileReq_cosv4_5fclient_2eproto.base,
      &scc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_CosRspMsg_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CosRspMsg_default_instance_;
    new (ptr) ::ClientCos::CosRspMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<52> scc_info_CosRspMsg_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 52, 0, InitDefaultsscc_info_CosRspMsg_cosv4_5fclient_2eproto}, {
      &scc_info_BucketCreateRsp_cosv4_5fclient_2eproto.base,
      &scc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto.base,
      &scc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_DirCreateRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
      &scc_info_DeleteRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ListRsp_cosv4_5fclient_2eproto.base,
      &scc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto.base,
      &scc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ListMutiobjRsp_cosv4_5fclient_2eproto.base,
      &scc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
      &scc_info_FileBatchDelRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ListObjVerRsp_cosv4_5fclient_2eproto.base,
      &scc_info_DelExpireFileRsp_cosv4_5fclient_2eproto.base,
      &scc_info_FileDelRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
      &scc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto.base,
      &scc_info_FileDownToCASRsp_cosv4_5fclient_2eproto.base,
      &scc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
      &scc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto.base,
      &scc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetCamAttrRsp_cosv4_5fclient_2eproto.base,
      &scc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto.base,
      &scc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetObjAclRsp_cosv4_5fclient_2eproto.base,
      &scc_info_GetObjAclRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketUinRsp_cosv4_5fclient_2eproto.base,
      &scc_info_GetBucketUinRsp_cosv4_5fclient_2eproto.base,
      &scc_info_ListDirectRsp_cosv4_5fclient_2eproto.base,
      &scc_info_CheckObjAclRsp_cosv4_5fclient_2eproto.base,
      &scc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketLockRsp_cosv4_5fclient_2eproto.base,
      &scc_info_GetBucketLockRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto.base,
      &scc_info_COSTransToCASRsp_cosv4_5fclient_2eproto.base,
      &scc_info_SetMigrateRsp_cosv4_5fclient_2eproto.base,
      &scc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto.base,
      &scc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto.base,
      &scc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_CustomHeader_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_CustomHeader_default_instance_;
    new (ptr) ::ClientCos::CustomHeader();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CustomHeader_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CustomHeader_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DelExpireFileReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DelExpireFileReq_default_instance_;
    new (ptr) ::ClientCos::DelExpireFileReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DelExpireFileReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DelExpireFileReq_cosv4_5fclient_2eproto}, {
      &scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_DelExpireFileRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DelExpireFileRsp_default_instance_;
    new (ptr) ::ClientCos::DelExpireFileRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelExpireFileRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DelExpireFileRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DelNoHashFileReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DelNoHashFileReq_default_instance_;
    new (ptr) ::ClientCos::DelNoHashFileReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelNoHashFileReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DelNoHashFileReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DelNoHashFileRsp_default_instance_;
    new (ptr) ::ClientCos::DelNoHashFileRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DelObjExpireAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DelObjExpireAttr_default_instance_;
    new (ptr) ::ClientCos::DelObjExpireAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DelObjExpireAttr_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DeleteReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DeleteReq_default_instance_;
    new (ptr) ::ClientCos::DeleteReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DeleteRsp_default_instance_;
    new (ptr) ::ClientCos::DeleteRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DirCreateReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DirCreateReq_default_instance_;
    new (ptr) ::ClientCos::DirCreateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DirCreateReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DirCreateReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_DirCreateRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_DirCreateRsp_default_instance_;
    new (ptr) ::ClientCos::DirCreateRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DirCreateRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DirCreateRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ExtraAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ErrorCodeReturned_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ErrorCodeReturned_default_instance_;
    new (ptr) ::ClientCos::ErrorCodeReturned();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorCodeReturned_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ErrorCodeReturned_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ExpireFileDelNoVerReq_default_instance_;
    new (ptr) ::ClientCos::ExpireFileDelNoVerReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto}, {
      &scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ExpireFileDelNoverRsp_default_instance_;
    new (ptr) ::ClientCos::ExpireFileDelNoverRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ExpireFileDelVerReq_default_instance_;
    new (ptr) ::ClientCos::ExpireFileDelVerReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto}, {
      &scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ExpireFileDelVerRsp_default_instance_;
    new (ptr) ::ClientCos::ExpireFileDelVerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ExtraAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ExtraAttr_default_instance_;
    new (ptr) ::ClientCos::ExtraAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtraAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExtraAttr_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_FileBatchDelReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileBatchDelReq_default_instance_;
    new (ptr) ::ClientCos::FileBatchDelReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileBatchDelReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FileBatchDelReq_cosv4_5fclient_2eproto}, {
      &scc_info_delObj_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_FileBatchDelRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileBatchDelRsp_default_instance_;
    new (ptr) ::ClientCos::FileBatchDelRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileBatchDelRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FileBatchDelRsp_cosv4_5fclient_2eproto}, {
      &scc_info_FileDelState_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_FileDelReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileDelReq_default_instance_;
    new (ptr) ::ClientCos::FileDelReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileDelReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FileDelReq_cosv4_5fclient_2eproto}, {
      &scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_FileDelRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileDelRsp_default_instance_;
    new (ptr) ::ClientCos::FileDelRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDelRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileDelRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_FileDelState_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileDelState_default_instance_;
    new (ptr) ::ClientCos::FileDelState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDelState_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileDelState_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_FileDownToCASReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileDownToCASReq_default_instance_;
    new (ptr) ::ClientCos::FileDownToCASReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDownToCASReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileDownToCASReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_FileDownToCASRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileDownToCASRsp_default_instance_;
    new (ptr) ::ClientCos::FileDownToCASRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDownToCASRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileDownToCASRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileUnfinishAttrQueryReq_default_instance_;
    new (ptr) ::ClientCos::FileUnfinishAttrQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_FileUnfinishAttrQueryRsp_default_instance_;
    new (ptr) ::ClientCos::FileUnfinishAttrQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto}, {
      &scc_info_storeinfo_cos_5fcomm_2eproto.base,
      &scc_info_SseInfo_cosv4_5fclient_2eproto.base,
      &scc_info_CasInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetBucketInventoryReq_default_instance_;
    new (ptr) ::ClientCos::GetBucketInventoryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetBucketInventoryRsp_default_instance_;
    new (ptr) ::ClientCos::GetBucketInventoryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_GetBucketLockReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetBucketLockReq_default_instance_;
    new (ptr) ::ClientCos::GetBucketLockReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketLockReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBucketLockReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_GetBucketLockRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetBucketLockRsp_default_instance_;
    new (ptr) ::ClientCos::GetBucketLockRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBucketLockRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBucketLockRsp_cosv4_5fclient_2eproto}, {
      &scc_info_LockInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_GetBucketUinReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetBucketUinReq_default_instance_;
    new (ptr) ::ClientCos::GetBucketUinReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetBucketUinReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetBucketUinReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_GetBucketUinRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetBucketUinRsp_default_instance_;
    new (ptr) ::ClientCos::GetBucketUinRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBucketUinRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBucketUinRsp_cosv4_5fclient_2eproto}, {
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_GetObjAclReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetObjAclReq_default_instance_;
    new (ptr) ::ClientCos::GetObjAclReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjAclReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjAclReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_GetObjAclRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetObjAclRsp_default_instance_;
    new (ptr) ::ClientCos::GetObjAclRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetObjAclRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetObjAclRsp_cosv4_5fclient_2eproto}, {
      &scc_info_AclInfo_cosv4_5fclient_2eproto.base,
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectExtend_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_GetObjectExtend_default_instance_;
    new (ptr) ::ClientCos::GetObjectExtend();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectExtend_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectExtend_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_KeyPair_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_KeyPair_default_instance_;
    new (ptr) ::ClientCos::KeyPair();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyPair_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeyPair_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_LFAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_LFAttr_default_instance_;
    new (ptr) ::ClientCos::LFAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LFAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LFAttr_cosv4_5fclient_2eproto}, {
      &scc_info_StorageTypeAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ListDirectReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListDirectReq_default_instance_;
    new (ptr) ::ClientCos::ListDirectReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListDirectReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListDirectReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ListDirectRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListDirectRsp_default_instance_;
    new (ptr) ::ClientCos::ListDirectRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListDirectRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListDirectRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ListMutiobjReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListMutiobjReq_default_instance_;
    new (ptr) ::ClientCos::ListMutiobjReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListMutiobjReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListMutiobjReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ListMutiobjRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListMutiobjRsp_default_instance_;
    new (ptr) ::ClientCos::ListMutiobjRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListMutiobjRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListMutiobjRsp_cosv4_5fclient_2eproto}, {
      &scc_info_MutiObjItem_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ListObjVerReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListObjVerReq_default_instance_;
    new (ptr) ::ClientCos::ListObjVerReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListObjVerReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListObjVerReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ListObjVerRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListObjVerRsp_default_instance_;
    new (ptr) ::ClientCos::ListObjVerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListObjVerRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListObjVerRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ObjItem_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ListReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListReq_default_instance_;
    new (ptr) ::ClientCos::ListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ListRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ListRsp_default_instance_;
    new (ptr) ::ClientCos::ListRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ObjItem_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_LockInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_LockInfo_default_instance_;
    new (ptr) ::ClientCos::LockInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LockInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LockInfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_MigrateFinFileReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_MigrateFinFileReq_default_instance_;
    new (ptr) ::ClientCos::MigrateFinFileReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateFinFileReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MigrateFinFileReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_MigrateFinFileRsp_default_instance_;
    new (ptr) ::ClientCos::MigrateFinFileRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_MigrateUnFinFileReq_default_instance_;
    new (ptr) ::ClientCos::MigrateUnFinFileReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_MigrateUnFinFileRsp_default_instance_;
    new (ptr) ::ClientCos::MigrateUnFinFileRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_Migrateinfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_Migrateinfo_default_instance_;
    new (ptr) ::ClientCos::Migrateinfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Migrateinfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Migrateinfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_MutiObjItem_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_MutiObjItem_default_instance_;
    new (ptr) ::ClientCos::MutiObjItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MutiObjItem_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MutiObjItem_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjAttrModifyReq_default_instance_;
    new (ptr) ::ClientCos::ObjAttrModifyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjAttrModifyRsp_default_instance_;
    new (ptr) ::ClientCos::ObjAttrModifyRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ExtraAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjAttrQueryReq_default_instance_;
    new (ptr) ::ClientCos::ObjAttrQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjAttrQueryRsp_default_instance_;
    new (ptr) ::ClientCos::ObjAttrQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 8, 0, InitDefaultsscc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_CasInfo_cosv4_5fclient_2eproto.base,
      &scc_info_SseInfo_cosv4_5fclient_2eproto.base,
      &scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base,
      &scc_info_ObjTag_cosv4_5fclient_2eproto.base,
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,
      &scc_info_LockInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ObjExpireAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjExpireAttr_default_instance_;
    new (ptr) ::ClientCos::ObjExpireAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjExpireAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjExpireAttr_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjItem_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjItem_default_instance_;
    new (ptr) ::ClientCos::ObjItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ObjItem_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ObjItem_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_ObjTag_cosv4_5fclient_2eproto.base,
      &scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_SseInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjModStorageTypeReq_default_instance_;
    new (ptr) ::ClientCos::ObjModStorageTypeReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjModStorageTypeRsp_default_instance_;
    new (ptr) ::ClientCos::ObjModStorageTypeRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjModTimeStampReq_default_instance_;
    new (ptr) ::ClientCos::ObjModTimeStampReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjModTimeStampRsp_default_instance_;
    new (ptr) ::ClientCos::ObjModTimeStampRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ObjTag_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ObjTag_default_instance_;
    new (ptr) ::ClientCos::ObjTag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjTag_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjTag_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_Opinfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_Opinfo_default_instance_;
    new (ptr) ::ClientCos::Opinfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Opinfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Opinfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_OwnerInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_OwnerInfo_default_instance_;
    new (ptr) ::ClientCos::OwnerInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OwnerInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OwnerInfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_PrefixAndErrcodeReturned_default_instance_;
    new (ptr) ::ClientCos::PrefixAndErrcodeReturned();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_PrefixReturned_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_PrefixReturned_default_instance_;
    new (ptr) ::ClientCos::PrefixReturned();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrefixReturned_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrefixReturned_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_PreviewFileAttrQueryReq_default_instance_;
    new (ptr) ::ClientCos::PreviewFileAttrQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_PreviewFileAttrQueryRsp_default_instance_;
    new (ptr) ::ClientCos::PreviewFileAttrQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ReduceLifecycleReq_default_instance_;
    new (ptr) ::ClientCos::ReduceLifecycleReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto}, {
      &scc_info_Opinfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ReduceLifecycleRsp_default_instance_;
    new (ptr) ::ClientCos::ReduceLifecycleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_ReservedAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_ReservedAttr_default_instance_;
    new (ptr) ::ClientCos::ReservedAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReservedAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReservedAttr_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_RetrieveLifecycleReq_default_instance_;
    new (ptr) ::ClientCos::RetrieveLifecycleReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_RetrieveLifecycleRsp_default_instance_;
    new (ptr) ::ClientCos::RetrieveLifecycleRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_RoutingRule_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_RoutingRule_default_instance_;
    new (ptr) ::ClientCos::RoutingRule();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RoutingRule_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_RoutingRule_cosv4_5fclient_2eproto}, {
      &scc_info_ErrorCodeReturned_cosv4_5fclient_2eproto.base,
      &scc_info_PrefixReturned_cosv4_5fclient_2eproto.base,
      &scc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketInventoryReq_default_instance_;
    new (ptr) ::ClientCos::SetBucketInventoryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketInventoryRsp_default_instance_;
    new (ptr) ::ClientCos::SetBucketInventoryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetBucketLockReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketLockReq_default_instance_;
    new (ptr) ::ClientCos::SetBucketLockReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetBucketLockReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetBucketLockReq_cosv4_5fclient_2eproto}, {
      &scc_info_LockInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SetBucketLockRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketLockRsp_default_instance_;
    new (ptr) ::ClientCos::SetBucketLockRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketLockRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketLockRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketPriAttrReq_default_instance_;
    new (ptr) ::ClientCos::SetBucketPriAttrReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketPriAttrRsp_default_instance_;
    new (ptr) ::ClientCos::SetBucketPriAttrRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetBucketUinReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketUinReq_default_instance_;
    new (ptr) ::ClientCos::SetBucketUinReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetBucketUinReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetBucketUinReq_cosv4_5fclient_2eproto}, {
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SetBucketUinRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketUinRsp_default_instance_;
    new (ptr) ::ClientCos::SetBucketUinRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketUinRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketUinRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketWebsiteInfoReq_default_instance_;
    new (ptr) ::ClientCos::SetBucketWebsiteInfoReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto}, {
      &scc_info_WebsiteInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetBucketWebsiteInfoRsp_default_instance_;
    new (ptr) ::ClientCos::SetBucketWebsiteInfoRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetCamAttrReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetCamAttrReq_default_instance_;
    new (ptr) ::ClientCos::SetCamAttrReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCamAttrReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetCamAttrReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetCamAttrRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetCamAttrRsp_default_instance_;
    new (ptr) ::ClientCos::SetCamAttrRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCamAttrRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetCamAttrRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetMigrateReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetMigrateReq_default_instance_;
    new (ptr) ::ClientCos::SetMigrateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMigrateReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetMigrateReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetMigrateRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetMigrateRsp_default_instance_;
    new (ptr) ::ClientCos::SetMigrateRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetMigrateRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetMigrateRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SetObjAclReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetObjAclReq_default_instance_;
    new (ptr) ::ClientCos::SetObjAclReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetObjAclReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetObjAclReq_cosv4_5fclient_2eproto}, {
      &scc_info_AclInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SetObjAclRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SetObjAclRsp_default_instance_;
    new (ptr) ::ClientCos::SetObjAclRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetObjAclRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetObjAclRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SpObjAttrModifyReq_default_instance_;
    new (ptr) ::ClientCos::SpObjAttrModifyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_ObjTag_cosv4_5fclient_2eproto.base,
      &scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SpObjAttrModifyRsp_default_instance_;
    new (ptr) ::ClientCos::SpObjAttrModifyRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SpObjAttrQueryReq_default_instance_;
    new (ptr) ::ClientCos::SpObjAttrQueryReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SpObjAttrQueryRsp_default_instance_;
    new (ptr) ::ClientCos::SpObjAttrQueryRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 8, 0, InitDefaultsscc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_CasInfo_cosv4_5fclient_2eproto.base,
      &scc_info_SseInfo_cosv4_5fclient_2eproto.base,
      &scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base,
      &scc_info_ObjTag_cosv4_5fclient_2eproto.base,
      &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,
      &scc_info_AclInfo_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_SseInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_SseInfo_default_instance_;
    new (ptr) ::ClientCos::SseInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SseInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SseInfo_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_StorageTypeAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_StorageTypeAttr_default_instance_;
    new (ptr) ::ClientCos::StorageTypeAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StorageTypeAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StorageTypeAttr_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_Tag_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_Tag_default_instance_;
    new (ptr) ::ClientCos::Tag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Tag_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Tag_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_TrsfArgs_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_TrsfArgs_default_instance_;
    new (ptr) ::ClientCos::TrsfArgs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TrsfArgs_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TrsfArgs_cosv4_5fclient_2eproto}, {
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_UnfinObjAttrModifyReq_default_instance_;
    new (ptr) ::ClientCos::UnfinObjAttrModifyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto}, {
      &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_UnfinObjAttrModifyRsp_default_instance_;
    new (ptr) ::ClientCos::UnfinObjAttrModifyRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_UploadAttr_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_UploadAttr_default_instance_;
    new (ptr) ::ClientCos::UploadAttr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UploadAttr_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UploadAttr_cosv4_5fclient_2eproto}, {
      &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
      &scc_info_ObjTag_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_UploadDelmarkerReq_default_instance_;
    new (ptr) ::ClientCos::UploadDelmarkerReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_UploadDelmarkerRsp_default_instance_;
    new (ptr) ::ClientCos::UploadDelmarkerRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto}, {}};

static void InitDefaultsscc_info_WebsiteInfo_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_WebsiteInfo_default_instance_;
    new (ptr) ::ClientCos::WebsiteInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WebsiteInfo_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WebsiteInfo_cosv4_5fclient_2eproto}, {
      &scc_info_RoutingRule_cosv4_5fclient_2eproto.base,}};

static void InitDefaultsscc_info_delObj_cosv4_5fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ClientCos::_delObj_default_instance_;
    new (ptr) ::ClientCos::delObj();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_delObj_cosv4_5fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_delObj_cosv4_5fclient_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cosv4_5fclient_2eproto[144];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_cosv4_5fclient_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cosv4_5fclient_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cosv4_5fclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosAppMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosAppMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosAppMsg, seq_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosAppMsg, body_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppMsg, _internal_metadata_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppMsg, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppMsg, type_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, request_id_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, cgi_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, cgi_params_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, sub_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, bucketcreatereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, bucketattrmodifyreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, bucketattrqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, dircreatereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, objattrqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, objattrmodifyreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, deletereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, listreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, appattrqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, appattrmodifyreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, previewfileattrqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, objmodtimestampreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, listmutiobjreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, unfinobjattrmodifyreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, filebatchdelreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, listobjverreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, delexpirefilereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, filedelreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, spobjattrmodifyreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, uploaddelmarkerreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, expirefiledelverreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, expirefiledelnoverreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setbucketpriattrreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, filedowntocasreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, casobjattrmodifyreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, casfilerecoverdelreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, casobjrestoreerrreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, spobjattrqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, objmodstoragetypereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setbucketwebsiteinforeq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setcamattrreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, bucketcamauthqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, appcamauthqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, fileunfinishattrqueryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, reducelifecyclereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, retrievelifecyclereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setobjaclreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, getobjaclreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setbucketuinreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, getbucketuinreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, listdirectreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, checkobjaclreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, casobjrestorefinreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setbucketlockreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, getbucketlockreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setbucketinventoryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, getbucketinventoryreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, costranstocasreq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, setmigratereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, delnohashfilereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, migratefinfilereq_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosReqMsg, migrateunfinfilereq_body_),
  0,
  1,
  2,
  55,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  54,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, retcode_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, retmsg_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, sub_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, bucketcreatersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, bucketattrmodifyrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, bucketattrqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, dircreatersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, objattrqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, objattrmodifyrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, deletersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, listrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, appattrqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, appattrmodifyrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, previewfileattrqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, objmodtimestamprsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, listmutiobjrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, unfinobjattrmodifyrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, filebatchdelrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, listobjverrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, delexpirefilersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, filedelrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, spobjattrmodifyrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, uploaddelmarkerrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, expirefiledelverrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, expirefiledelnoverrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setbucketpriattrrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, filedowntocasrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, casobjattrmodifyrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, casfilerecoverdelrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, casobjrestoreerrrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, spobjattrqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, objmodstoragetypersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setbucketwebsiteinforsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setcamattrrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, bucketcamauthqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, appcamauthqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, fileunfinishattrqueryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, reducelifecyclersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, retrievelifecyclersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setobjaclrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, getobjaclrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setbucketuinrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, getbucketuinrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, listdirectrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, checkobjaclrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, casobjrestorefinrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setbucketlockrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, getbucketlockrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setbucketinventoryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, getbucketinventoryrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, costranstocasrsp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, setmigratersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, delnohashfilersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, migratefinfilersp_body_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CosRspMsg, migrateunfinfilersp_body_),
  53,
  0,
  54,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  PROTOBUF_FIELD_OFFSET(::ClientCos::Migrateinfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Migrateinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::Migrateinfo, status_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Migrateinfo, start_time_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Migrateinfo, fin_time_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExtraAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExtraAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExtraAttr, crossregional_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExtraAttr, ruleobj_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExtraAttr, rule_mtime_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjExpireAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjExpireAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjExpireAttr, expired_time_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjExpireAttr, rulename_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadAttr, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadAttr, taglist_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadAttr, real_sha_),
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, status_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, casfilekey_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, archive_id_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, expired_time_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, cas_status_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, cas_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, restore_ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasInfo, restore_tier_),
  2,
  0,
  1,
  4,
  3,
  6,
  5,
  7,
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, whiterefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, blackrefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, cname_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, corsrule_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, bucketowner_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateReq, is_slot_),
  0,
  1,
  4,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  5,
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCreateRsp, ctime_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, modflag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, whiterefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, blackrefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, cname_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, corsrule_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, crossregional_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, multi_version_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, tag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, ruleobj_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, lfattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, refer_able_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, emptyreferconfig_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyReq, cname_able_),
  0,
  4,
  5,
  1,
  6,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  7,
  ~0u,
  3,
  ~0u,
  8,
  9,
  10,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrModifyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryReq, flag_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, cname_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, whiterefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, blackrefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, corsrule_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, extraattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, multi_version_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, tag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, lfattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, refer_able_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, emptyreferconfig_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, cname_able_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, nofile_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, websiteinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, visit_v4_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, bucketuin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, nslot_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, lockinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, inventory_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketAttrQueryRsp, migrateinfo_),
  7,
  0,
  8,
  9,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  10,
  ~0u,
  3,
  11,
  ~0u,
  ~0u,
  12,
  13,
  14,
  15,
  4,
  16,
  1,
  17,
  5,
  2,
  6,
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateReq, biz_attr_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DirCreateRsp, extraattr_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, storagetype_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyReq, sk_),
  0,
  6,
  1,
  7,
  ~0u,
  ~0u,
  8,
  2,
  3,
  4,
  9,
  5,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrModifyRsp, extraattr_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, sk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, customheader_plat_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, taglist_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyReq, objexpireattr_),
  0,
  7,
  1,
  2,
  3,
  8,
  9,
  10,
  ~0u,
  11,
  ~0u,
  ~0u,
  4,
  5,
  ~0u,
  6,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrModifyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryReq, version_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, file_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, file_length_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, slicesize_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, delete_marker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, islatest_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, upload_source_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, casinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, sseinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, tagnum_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, objexpireattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, taglist_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, fast_upload_key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, owner_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, lock_expired_time_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, lockinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjAttrQueryRsp, is_v4_),
  0,
  12,
  13,
  14,
  15,
  1,
  16,
  ~0u,
  17,
  ~0u,
  2,
  18,
  19,
  3,
  4,
  20,
  21,
  5,
  7,
  8,
  23,
  9,
  ~0u,
  6,
  10,
  24,
  11,
  22,
  PROTOBUF_FIELD_OFFSET(::ClientCos::DeleteReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DeleteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DeleteReq, path_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DeleteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, prefix_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, offset_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, delimiter_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, count_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, need_x_cos_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListReq, need_tag_),
  0,
  1,
  2,
  6,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListRsp, objs_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListRsp, next_offset_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListRsp, listover_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, prefix_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, objnamemarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, uploadkeymarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, delimiter_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, count_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjReq, flag_),
  0,
  1,
  2,
  3,
  5,
  4,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjRsp, objs_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjRsp, next_objnamemarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjRsp, next_uploadkeymarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListMutiobjRsp, listover_),
  ~0u,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, prefix_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, objnamemarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, versionmarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, delimiter_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, count_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, need_x_cos_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerReq, need_tag_),
  0,
  1,
  2,
  3,
  7,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerRsp, objs_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerRsp, next_objnamemarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerRsp, next_versionmarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListObjVerRsp, listover_),
  ~0u,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, uploadid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyReq, auth_),
  0,
  1,
  3,
  2,
  4,
  ~0u,
  ~0u,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::UnfinObjAttrModifyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryReq, appid_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryRsp, keys_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrQueryRsp, mtime_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrModifyReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrModifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrModifyReq, appid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrModifyReq, keys_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttrModifyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryReq, sign_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryReq, refer_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, file_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, file_length_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PreviewFileAttrQueryRsp, preview_),
  0,
  2,
  3,
  1,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModTimeStampReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModTimeStampReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModTimeStampReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModTimeStampReq, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModTimeStampReq, mtime_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModTimeStampRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::delObj, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::delObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::delObj, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::delObj, version_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileBatchDelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileBatchDelReq, obj_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, retcode_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, retmsg_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, delete_marker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelState, add_delmarker_),
  0,
  3,
  1,
  2,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileBatchDelRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileBatchDelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileBatchDelRsp, delstate_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileBatchDelRsp, extraattr_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, is_ugc_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerReq, trsf_args_),
  0,
  1,
  2,
  4,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::UploadDelmarkerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryReq, uploadid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, uin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, usr_slice_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, real_slice_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, file_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, info_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, sseinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileUnfinishAttrQueryRsp, casinfo_),
  0,
  7,
  1,
  2,
  8,
  9,
  10,
  11,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReduceLifecycleReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReduceLifecycleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReduceLifecycleReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReduceLifecycleReq, ops_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReduceLifecycleReq, sk_),
  0,
  ~0u,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReduceLifecycleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, fsize_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, sk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, src_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, dst_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleReq, op_),
  0,
  4,
  1,
  2,
  3,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::RetrieveLifecycleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, op_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, file_count_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, storage_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, src_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Opinfo, dst_type_),
  4,
  2,
  3,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReservedAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReservedAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReservedAttr, key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ReservedAttr, value_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CustomHeader, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CustomHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CustomHeader, key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CustomHeader, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, origin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, methods_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, credentials_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, allow_headers_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, expose_headers_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, max_age_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CorsRule, id_),
  0,
  1,
  5,
  2,
  3,
  6,
  4,
  PROTOBUF_FIELD_OFFSET(::ClientCos::Tag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::Tag, key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::Tag, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjTag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjTag, key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjTag, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::LockInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::LockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::LockInfo, days_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, keys_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, cname_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, whiterefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, blackrefer_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, usr_slice_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, real_slice_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, corsrule_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, extraattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, ctime_ms_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, multi_version_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, multi_version_hisflag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, tag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, bucketnum_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, idcnum_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, lfattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, refer_able_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, emptyreferconfig_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, cname_able_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, upload_source_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, ctime_ms_temp_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, customheader_plat_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, uin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, nofile_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, casinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, sseinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, websiteinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, taglist_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, objexpireattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, camauth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, is_v4_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, visit_v4_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, is_chunk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, objowner_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, bucketowner_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, acls_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, nslot_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, is_ugc_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, lockinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, mtime_temp_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, inventory_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, inventory_mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppAttr, migrateinfo_),
  0,
  17,
  1,
  18,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  19,
  20,
  ~0u,
  21,
  ~0u,
  ~0u,
  3,
  8,
  23,
  4,
  22,
  24,
  ~0u,
  25,
  26,
  ~0u,
  27,
  28,
  29,
  5,
  31,
  ~0u,
  6,
  30,
  9,
  10,
  11,
  ~0u,
  12,
  32,
  33,
  34,
  35,
  13,
  14,
  ~0u,
  37,
  36,
  15,
  38,
  7,
  39,
  16,
  PROTOBUF_FIELD_OFFSET(::ClientCos::KeyPair, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::KeyPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::KeyPair, accesskey_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::KeyPair, secretkey_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, name_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, file_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, upload_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, ctime_ms_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, delete_marker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, islatest_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, taglist_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, objexpireattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, sseinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, x_cos_customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjItem, is_ugc_),
  0,
  8,
  9,
  10,
  11,
  1,
  2,
  13,
  ~0u,
  3,
  4,
  12,
  5,
  15,
  16,
  14,
  ~0u,
  6,
  ~0u,
  7,
  ~0u,
  18,
  17,
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, name_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, uploadkey_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, uin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MutiObjItem, file_size_),
  0,
  1,
  4,
  5,
  2,
  3,
  6,
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, op_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, islatest_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, isdeletemarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, next_version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, next_version_ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelObjExpireAttr, next_version_seed_),
  1,
  2,
  3,
  0,
  5,
  4,
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileReq, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileReq, switch_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileReq, expire_attr_),
  0,
  2,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelExpireFileRsp, mtime_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::StorageTypeAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::StorageTypeAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::StorageTypeAttr, min_del_days_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::StorageTypeAttr, min_file_size_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::LFAttr, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::LFAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::LFAttr, storagetype_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::LFAttr, storagetypeattr_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, uploadid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, switch_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, isexpirereq_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelReq, expire_attr_),
  0,
  1,
  3,
  4,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoVerReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoVerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoVerReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoVerReq, switch_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoVerReq, expire_attr_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoverRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoverRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoverRsp, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelNoverRsp, mtime_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, switch_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerReq, expire_attr_),
  0,
  1,
  3,
  4,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerRsp, delete_marker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ExpireFileDelVerRsp, mtime_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrReq, nofile_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrReq, visit_v4_),
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketPriAttrRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, archive_id_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, sk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, check_mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASReq, switch_flag_),
  0,
  1,
  2,
  4,
  3,
  5,
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::FileDownToCASRsp, casfilekey_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyReq, expired_time_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyReq, restore_tier_),
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjAttrModifyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelReq, version_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasFileRecoverDelRsp, expired_time_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreErrReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreErrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreErrReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreErrReq, version_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreErrRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinReq, sk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinReq, storage_type_),
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CasObjRestoreFinRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryReq, version_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, biz_attr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, file_size_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, file_length_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, auth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, customheader_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, real_sha_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, slicesize_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, storage_type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, delete_marker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, islatest_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, upload_source_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, casinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, sseinfo_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, tagnum_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, objexpireattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, taglist_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, version_seed_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, is_ugc_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, owner_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, is_cas_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, acls_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, lock_expired_time_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SpObjAttrQueryRsp, is_v4_),
  0,
  10,
  11,
  12,
  13,
  1,
  14,
  ~0u,
  15,
  ~0u,
  2,
  16,
  17,
  3,
  4,
  19,
  20,
  5,
  6,
  7,
  18,
  8,
  ~0u,
  23,
  21,
  9,
  22,
  ~0u,
  24,
  25,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, storagetype_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, switch_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, sk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeReq, check_mtime_),
  0,
  1,
  2,
  4,
  3,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ObjModStorageTypeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, ssetype_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, algorithm_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, ssec_key_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, ssec_key_md5_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, kms_id_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, kms_context_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, kms_datakey_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, kms_datakey_encryp_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SseInfo, sse_etag_),
  8,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ErrorCodeReturned, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ErrorCodeReturned, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ErrorCodeReturned, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ErrorCodeReturned, protocol_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ErrorCodeReturned, replacekeywith_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ErrorCodeReturned, hostname_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, keyprefix_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, protocol_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, replacekeyprefixwith_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, replacekeywith_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, hostname_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixReturned, httpredirectcode_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, keyprefix_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, protocol_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, hostname_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, replacekeyprefixwith_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, replacekeywith_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::PrefixAndErrcodeReturned, httpredirectcode_),
  6,
  0,
  1,
  2,
  3,
  4,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::RoutingRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::RoutingRule, errorcodereturned_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RoutingRule, prefixreturned_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::RoutingRule, prefixanderrcodereturned_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, indexdocument_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, protocol_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, errordocument_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, routingrule_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::WebsiteInfo, hostname_),
  0,
  1,
  2,
  4,
  3,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketWebsiteInfoReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketWebsiteInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketWebsiteInfoReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketWebsiteInfoReq, setflag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketWebsiteInfoReq, websiteinfo_),
  0,
  2,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketWebsiteInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetCamAttrReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetCamAttrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetCamAttrReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetCamAttrReq, camauth_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetCamAttrRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCamAuthQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCamAuthQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCamAuthQueryReq, path_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCamAuthQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCamAuthQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::BucketCamAuthQueryRsp, iscamauth_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CamAtuhItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CamAtuhItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CamAtuhItem, bucketpath_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CamAtuhItem, iscamauth_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryReq, appid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryReq, next_bucket_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryRsp, camauth_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryRsp, next_bucket_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryRsp, item_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AppCamAuthQueryRsp, isover_),
  1,
  0,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiArgs, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiArgs, auth_info_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiArgs, owner_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiArgs, acls_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiParams, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiParams, get_object_extend_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CgiParams, complete_multi_upload_extend_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjectExtend, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjectExtend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjectExtend, check_refer_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CompleteMultiUploadExtend, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CompleteMultiUploadExtend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CompleteMultiUploadExtend, min_part_size_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, customheader_plat_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, src_ctime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, mtime_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, forbid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, reservedattr_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::TrsfArgs, auth_),
  ~0u,
  0,
  1,
  2,
  ~0u,
  3,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AclInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AclInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AclInfo, uin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AclInfo, perm_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::AuthInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AuthInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::AuthInfo, requin_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AuthInfo, contextpass_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::AuthInfo, needacl_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::OwnerInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::OwnerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::OwnerInfo, uin_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::CheckObjAclReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CheckObjAclReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CheckObjAclReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CheckObjAclReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::CheckObjAclReq, perm_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::CheckObjAclRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetObjAclReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetObjAclReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetObjAclReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetObjAclReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetObjAclReq, acls_),
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetObjAclRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclReq, version_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclRsp, acls_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetObjAclRsp, owner_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketUinReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketUinReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketUinReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketUinReq, bucketowner_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketUinRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketUinReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketUinReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketUinReq, path_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketUinRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketUinRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketUinRsp, bucketowner_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketLockReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketLockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketLockReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketLockReq, lockinfo_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketLockRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketLockReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketLockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketLockReq, path_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketLockRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketLockRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketLockRsp, lockinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketInventoryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketInventoryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketInventoryReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketInventoryReq, inventory_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetBucketInventoryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketInventoryReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketInventoryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketInventoryReq, path_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketInventoryRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketInventoryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::GetBucketInventoryRsp, inventory_),
  0,
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, version_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, switch_flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, sk_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASReq, check_mtime_),
  0,
  1,
  3,
  2,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::COSTransToCASRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, prefix_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, marker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, submarker_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, delimiter_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, count_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, flag_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, type_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, bad_ip_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectReq, bad_port_),
  0,
  1,
  2,
  3,
  8,
  5,
  6,
  4,
  7,
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectRsp, ip_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectRsp, port_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::ListDirectRsp, term_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileReq, version_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileRsp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileRsp, filekey_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileRsp, uuid_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateFinFileRsp, filetype_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateUnFinFileReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateUnFinFileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateUnFinFileReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateUnFinFileReq, uploadid_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::MigrateUnFinFileRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetMigrateReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetMigrateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetMigrateReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetMigrateReq, status_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::SetMigrateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelNoHashFileReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelNoHashFileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelNoHashFileReq, path_),
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelNoHashFileReq, uuid_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientCos::DelNoHashFileRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::ClientCos::CosAppMsg)},
  { 9, 15, sizeof(::ClientCos::AppMsg)},
  { 16, 77, sizeof(::ClientCos::CosReqMsg)},
  { 133, 193, sizeof(::ClientCos::CosRspMsg)},
  { 248, 256, sizeof(::ClientCos::Migrateinfo)},
  { 259, 267, sizeof(::ClientCos::ExtraAttr)},
  { 270, 277, sizeof(::ClientCos::ObjExpireAttr)},
  { 279, 287, sizeof(::ClientCos::UploadAttr)},
  { 290, 303, sizeof(::ClientCos::CasInfo)},
  { 311, 327, sizeof(::ClientCos::BucketCreateReq)},
  { 338, 344, sizeof(::ClientCos::BucketCreateRsp)},
  { 345, 368, sizeof(::ClientCos::BucketAttrModifyReq)},
  { 386, -1, sizeof(::ClientCos::BucketAttrModifyRsp)},
  { 391, 398, sizeof(::ClientCos::BucketAttrQueryReq)},
  { 400, 430, sizeof(::ClientCos::BucketAttrQueryRsp)},
  { 455, 462, sizeof(::ClientCos::DirCreateReq)},
  { 464, 471, sizeof(::ClientCos::DirCreateRsp)},
  { 473, 490, sizeof(::ClientCos::ObjAttrModifyReq)},
  { 502, 508, sizeof(::ClientCos::ObjAttrModifyRsp)},
  { 509, 530, sizeof(::ClientCos::SpObjAttrModifyReq)},
  { 546, -1, sizeof(::ClientCos::SpObjAttrModifyRsp)},
  { 551, 558, sizeof(::ClientCos::ObjAttrQueryReq)},
  { 560, 593, sizeof(::ClientCos::ObjAttrQueryRsp)},
  { 621, 627, sizeof(::ClientCos::DeleteReq)},
  { 628, -1, sizeof(::ClientCos::DeleteRsp)},
  { 633, 645, sizeof(::ClientCos::ListReq)},
  { 652, 660, sizeof(::ClientCos::ListRsp)},
  { 663, 674, sizeof(::ClientCos::ListMutiobjReq)},
  { 680, 689, sizeof(::ClientCos::ListMutiobjRsp)},
  { 693, 706, sizeof(::ClientCos::ListObjVerReq)},
  { 714, 723, sizeof(::ClientCos::ListObjVerRsp)},
  { 727, 740, sizeof(::ClientCos::UnfinObjAttrModifyReq)},
  { 748, -1, sizeof(::ClientCos::UnfinObjAttrModifyRsp)},
  { 753, 759, sizeof(::ClientCos::AppAttrQueryReq)},
  { 760, 768, sizeof(::ClientCos::AppAttrQueryRsp)},
  { 771, 778, sizeof(::ClientCos::AppAttrModifyReq)},
  { 780, -1, sizeof(::ClientCos::AppAttrModifyRsp)},
  { 785, 793, sizeof(::ClientCos::PreviewFileAttrQueryReq)},
  { 796, 809, sizeof(::ClientCos::PreviewFileAttrQueryRsp)},
  { 817, 825, sizeof(::ClientCos::ObjModTimeStampReq)},
  { 828, -1, sizeof(::ClientCos::ObjModTimeStampRsp)},
  { 833, 840, sizeof(::ClientCos::delObj)},
  { 842, -1, sizeof(::ClientCos::FileBatchDelReq)},
  { 848, 859, sizeof(::ClientCos::FileDelState)},
  { 865, 872, sizeof(::ClientCos::FileBatchDelRsp)},
  { 874, 884, sizeof(::ClientCos::UploadDelmarkerReq)},
  { 889, -1, sizeof(::ClientCos::UploadDelmarkerRsp)},
  { 894, 901, sizeof(::ClientCos::FileUnfinishAttrQueryReq)},
  { 903, 920, sizeof(::ClientCos::FileUnfinishAttrQueryRsp)},
  { 932, 940, sizeof(::ClientCos::ReduceLifecycleReq)},
  { 943, -1, sizeof(::ClientCos::ReduceLifecycleRsp)},
  { 948, 959, sizeof(::ClientCos::RetrieveLifecycleReq)},
  { 965, -1, sizeof(::ClientCos::RetrieveLifecycleRsp)},
  { 970, 980, sizeof(::ClientCos::Opinfo)},
  { 985, 992, sizeof(::ClientCos::ReservedAttr)},
  { 994, 1001, sizeof(::ClientCos::CustomHeader)},
  { 1003, 1015, sizeof(::ClientCos::CorsRule)},
  { 1022, 1029, sizeof(::ClientCos::Tag)},
  { 1031, 1038, sizeof(::ClientCos::ObjTag)},
  { 1040, 1046, sizeof(::ClientCos::LockInfo)},
  { 1047, 1104, sizeof(::ClientCos::AppAttr)},
  { 1156, 1163, sizeof(::ClientCos::KeyPair)},
  { 1165, 1193, sizeof(::ClientCos::ObjItem)},
  { 1216, 1228, sizeof(::ClientCos::MutiObjItem)},
  { 1235, 1246, sizeof(::ClientCos::DelObjExpireAttr)},
  { 1252, 1261, sizeof(::ClientCos::DelExpireFileReq)},
  { 1265, 1271, sizeof(::ClientCos::DelExpireFileRsp)},
  { 1272, 1279, sizeof(::ClientCos::StorageTypeAttr)},
  { 1281, 1288, sizeof(::ClientCos::LFAttr)},
  { 1290, 1300, sizeof(::ClientCos::FileDelReq)},
  { 1305, -1, sizeof(::ClientCos::FileDelRsp)},
  { 1310, 1318, sizeof(::ClientCos::ExpireFileDelNoVerReq)},
  { 1321, 1328, sizeof(::ClientCos::ExpireFileDelNoverRsp)},
  { 1330, 1340, sizeof(::ClientCos::ExpireFileDelVerReq)},
  { 1345, 1352, sizeof(::ClientCos::ExpireFileDelVerRsp)},
  { 1354, 1363, sizeof(::ClientCos::SetBucketPriAttrReq)},
  { 1367, -1, sizeof(::ClientCos::SetBucketPriAttrRsp)},
  { 1372, 1383, sizeof(::ClientCos::FileDownToCASReq)},
  { 1389, 1395, sizeof(::ClientCos::FileDownToCASRsp)},
  { 1396, 1405, sizeof(::ClientCos::CasObjAttrModifyReq)},
  { 1409, -1, sizeof(::ClientCos::CasObjAttrModifyRsp)},
  { 1414, 1421, sizeof(::ClientCos::CasFileRecoverDelReq)},
  { 1423, 1429, sizeof(::ClientCos::CasFileRecoverDelRsp)},
  { 1430, 1437, sizeof(::ClientCos::CasObjRestoreErrReq)},
  { 1439, -1, sizeof(::ClientCos::CasObjRestoreErrRsp)},
  { 1444, 1453, sizeof(::ClientCos::CasObjRestoreFinReq)},
  { 1457, -1, sizeof(::ClientCos::CasObjRestoreFinRsp)},
  { 1462, 1469, sizeof(::ClientCos::SpObjAttrQueryReq)},
  { 1471, 1506, sizeof(::ClientCos::SpObjAttrQueryRsp)},
  { 1536, 1547, sizeof(::ClientCos::ObjModStorageTypeReq)},
  { 1553, -1, sizeof(::ClientCos::ObjModStorageTypeRsp)},
  { 1558, 1572, sizeof(::ClientCos::SseInfo)},
  { 1581, 1590, sizeof(::ClientCos::ErrorCodeReturned)},
  { 1594, 1605, sizeof(::ClientCos::PrefixReturned)},
  { 1611, 1623, sizeof(::ClientCos::PrefixAndErrcodeReturned)},
  { 1630, -1, sizeof(::ClientCos::RoutingRule)},
  { 1638, 1648, sizeof(::ClientCos::WebsiteInfo)},
  { 1653, 1661, sizeof(::ClientCos::SetBucketWebsiteInfoReq)},
  { 1664, -1, sizeof(::ClientCos::SetBucketWebsiteInfoRsp)},
  { 1669, 1676, sizeof(::ClientCos::SetCamAttrReq)},
  { 1678, -1, sizeof(::ClientCos::SetCamAttrRsp)},
  { 1683, 1689, sizeof(::ClientCos::BucketCamAuthQueryReq)},
  { 1690, 1696, sizeof(::ClientCos::BucketCamAuthQueryRsp)},
  { 1697, 1704, sizeof(::ClientCos::CamAtuhItem)},
  { 1706, 1713, sizeof(::ClientCos::AppCamAuthQueryReq)},
  { 1715, 1724, sizeof(::ClientCos::AppCamAuthQueryRsp)},
  { 1728, 1736, sizeof(::ClientCos::CgiArgs)},
  { 1739, 1746, sizeof(::ClientCos::CgiParams)},
  { 1748, 1754, sizeof(::ClientCos::GetObjectExtend)},
  { 1755, 1761, sizeof(::ClientCos::CompleteMultiUploadExtend)},
  { 1762, 1773, sizeof(::ClientCos::TrsfArgs)},
  { 1779, 1786, sizeof(::ClientCos::AclInfo)},
  { 1788, 1796, sizeof(::ClientCos::AuthInfo)},
  { 1799, 1805, sizeof(::ClientCos::OwnerInfo)},
  { 1806, 1814, sizeof(::ClientCos::CheckObjAclReq)},
  { 1817, -1, sizeof(::ClientCos::CheckObjAclRsp)},
  { 1822, 1830, sizeof(::ClientCos::SetObjAclReq)},
  { 1833, -1, sizeof(::ClientCos::SetObjAclRsp)},
  { 1838, 1845, sizeof(::ClientCos::GetObjAclReq)},
  { 1847, 1854, sizeof(::ClientCos::GetObjAclRsp)},
  { 1856, 1863, sizeof(::ClientCos::SetBucketUinReq)},
  { 1865, -1, sizeof(::ClientCos::SetBucketUinRsp)},
  { 1870, 1876, sizeof(::ClientCos::GetBucketUinReq)},
  { 1877, 1883, sizeof(::ClientCos::GetBucketUinRsp)},
  { 1884, 1891, sizeof(::ClientCos::SetBucketLockReq)},
  { 1893, -1, sizeof(::ClientCos::SetBucketLockRsp)},
  { 1898, 1904, sizeof(::ClientCos::GetBucketLockReq)},
  { 1905, 1911, sizeof(::ClientCos::GetBucketLockRsp)},
  { 1912, 1919, sizeof(::ClientCos::SetBucketInventoryReq)},
  { 1921, -1, sizeof(::ClientCos::SetBucketInventoryRsp)},
  { 1926, 1932, sizeof(::ClientCos::GetBucketInventoryReq)},
  { 1933, 1939, sizeof(::ClientCos::GetBucketInventoryRsp)},
  { 1940, 1950, sizeof(::ClientCos::COSTransToCASReq)},
  { 1955, -1, sizeof(::ClientCos::COSTransToCASRsp)},
  { 1960, 1974, sizeof(::ClientCos::ListDirectReq)},
  { 1983, 1991, sizeof(::ClientCos::ListDirectRsp)},
  { 1994, 2001, sizeof(::ClientCos::MigrateFinFileReq)},
  { 2003, 2011, sizeof(::ClientCos::MigrateFinFileRsp)},
  { 2014, 2021, sizeof(::ClientCos::MigrateUnFinFileReq)},
  { 2023, -1, sizeof(::ClientCos::MigrateUnFinFileRsp)},
  { 2028, 2035, sizeof(::ClientCos::SetMigrateReq)},
  { 2037, -1, sizeof(::ClientCos::SetMigrateRsp)},
  { 2042, 2049, sizeof(::ClientCos::DelNoHashFileReq)},
  { 2051, -1, sizeof(::ClientCos::DelNoHashFileRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CosAppMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CosReqMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CosRspMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_Migrateinfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ExtraAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjExpireAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_UploadAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketCreateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketCreateRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketAttrModifyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketAttrModifyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketAttrQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketAttrQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DirCreateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DirCreateRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjAttrModifyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjAttrModifyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SpObjAttrModifyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SpObjAttrModifyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjAttrQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjAttrQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DeleteReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DeleteRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListMutiobjReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListMutiobjRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListObjVerReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListObjVerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_UnfinObjAttrModifyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_UnfinObjAttrModifyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppAttrQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppAttrQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppAttrModifyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppAttrModifyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_PreviewFileAttrQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_PreviewFileAttrQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjModTimeStampReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjModTimeStampRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_delObj_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileBatchDelReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileDelState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileBatchDelRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_UploadDelmarkerReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_UploadDelmarkerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileUnfinishAttrQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileUnfinishAttrQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ReduceLifecycleReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ReduceLifecycleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_RetrieveLifecycleReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_RetrieveLifecycleRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_Opinfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ReservedAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CustomHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CorsRule_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_Tag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_LockInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_KeyPair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_MutiObjItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DelObjExpireAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DelExpireFileReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DelExpireFileRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_StorageTypeAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_LFAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileDelReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileDelRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ExpireFileDelNoVerReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ExpireFileDelNoverRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ExpireFileDelVerReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ExpireFileDelVerRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketPriAttrReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketPriAttrRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileDownToCASReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_FileDownToCASRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasObjAttrModifyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasObjAttrModifyRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasFileRecoverDelReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasFileRecoverDelRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasObjRestoreErrReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasObjRestoreErrRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasObjRestoreFinReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CasObjRestoreFinRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SpObjAttrQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SpObjAttrQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjModStorageTypeReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ObjModStorageTypeRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SseInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ErrorCodeReturned_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_PrefixReturned_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_PrefixAndErrcodeReturned_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_RoutingRule_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_WebsiteInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketWebsiteInfoReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketWebsiteInfoRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetCamAttrReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetCamAttrRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketCamAuthQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_BucketCamAuthQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CamAtuhItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppCamAuthQueryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AppCamAuthQueryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CgiArgs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CgiParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetObjectExtend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CompleteMultiUploadExtend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_TrsfArgs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AclInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_AuthInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_OwnerInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CheckObjAclReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_CheckObjAclRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetObjAclReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetObjAclRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetObjAclReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetObjAclRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketUinReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketUinRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetBucketUinReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetBucketUinRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketLockReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketLockRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetBucketLockReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetBucketLockRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketInventoryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetBucketInventoryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetBucketInventoryReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_GetBucketInventoryRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_COSTransToCASReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_COSTransToCASRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListDirectReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_ListDirectRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_MigrateFinFileReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_MigrateFinFileRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_MigrateUnFinFileReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_MigrateUnFinFileRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetMigrateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_SetMigrateRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DelNoHashFileReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ClientCos::_DelNoHashFileRsp_default_instance_),
};

const char descriptor_table_protodef_cosv4_5fclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022cosv4_client.proto\022\tClientCos\032\016cos_com"
  "m.proto\"9\n\tCosAppMsg\022\013\n\003seq\030\001 \002(\r\022\037\n\004bod"
  "y\030\002 \002(\0132\021.ClientCos.AppMsg\"[\n\006AppMsg\022$\n\004"
  "type\030\001 \002(\0162\026.ClientCos.AppMsg.Type\"$\n\004Ty"
  "pe\022\r\n\tCosReqMsg\020\001\022\r\n\tCosRspMsg\020\002*\005\010d\020\221N\""
  "\250#\n\tCosReqMsg\022\022\n\nrequest_id\030\001 \001(\014\022\020\n\010cgi"
  "_attr\030\002 \001(\014\022\022\n\ncgi_params\030\003 \001(\014\022.\n\010sub_t"
  "ype\030\n \002(\0162\034.ClientCos.CosReqMsg.SubType\022"
  "8\n\024BucketCreateReq_body\030\025 \001(\0132\032.ClientCo"
  "s.BucketCreateReq\022@\n\030BucketAttrModifyReq"
  "_body\030\026 \001(\0132\036.ClientCos.BucketAttrModify"
  "Req\022>\n\027BucketAttrQueryReq_body\030\027 \001(\0132\035.C"
  "lientCos.BucketAttrQueryReq\0222\n\021DirCreate"
  "Req_body\030\030 \001(\0132\027.ClientCos.DirCreateReq\022"
  "8\n\024ObjAttrQueryReq_body\030\031 \001(\0132\032.ClientCo"
  "s.ObjAttrQueryReq\022:\n\025ObjAttrModifyReq_bo"
  "dy\030\032 \001(\0132\033.ClientCos.ObjAttrModifyReq\022,\n"
  "\016DeleteReq_body\030\033 \001(\0132\024.ClientCos.Delete"
  "Req\022(\n\014ListReq_body\030\034 \001(\0132\022.ClientCos.Li"
  "stReq\0228\n\024AppAttrQueryReq_body\030\035 \001(\0132\032.Cl"
  "ientCos.AppAttrQueryReq\022:\n\025AppAttrModify"
  "Req_body\030\036 \001(\0132\033.ClientCos.AppAttrModify"
  "Req\022H\n\034PreviewFileAttrQueryReq_body\030\037 \001("
  "\0132\".ClientCos.PreviewFileAttrQueryReq\022>\n"
  "\027ObjModTimeStampReq_body\030  \001(\0132\035.ClientC"
  "os.ObjModTimeStampReq\0226\n\023ListMutiobjReq_"
  "body\030! \001(\0132\031.ClientCos.ListMutiobjReq\022D\n"
  "\032UnfinObjAttrModifyReq_body\030\" \001(\0132 .Clie"
  "ntCos.UnfinObjAttrModifyReq\0228\n\024FileBatch"
  "DelReq_body\030# \001(\0132\032.ClientCos.FileBatchD"
  "elReq\0224\n\022ListObjVerReq_body\030$ \001(\0132\030.Clie"
  "ntCos.ListObjVerReq\022:\n\025DelExpireFileReq_"
  "body\030% \001(\0132\033.ClientCos.DelExpireFileReq\022"
  ".\n\017FileDelReq_body\030& \001(\0132\025.ClientCos.Fil"
  "eDelReq\022>\n\027SpObjAttrModifyReq_body\030\' \001(\013"
  "2\035.ClientCos.SpObjAttrModifyReq\022>\n\027Uploa"
  "dDelmarkerReq_body\030( \001(\0132\035.ClientCos.Upl"
  "oadDelmarkerReq\022@\n\030ExpireFileDelVerReq_b"
  "ody\030) \001(\0132\036.ClientCos.ExpireFileDelVerRe"
  "q\022D\n\032ExpireFileDelNoverReq_body\030* \001(\0132 ."
  "ClientCos.ExpireFileDelNoVerReq\022@\n\030SetBu"
  "cketPriAttrReq_body\030+ \001(\0132\036.ClientCos.Se"
  "tBucketPriAttrReq\022:\n\025FileDownToCASReq_bo"
  "dy\030, \001(\0132\033.ClientCos.FileDownToCASReq\022@\n"
  "\030CasObjAttrModifyReq_body\030- \001(\0132\036.Client"
  "Cos.CasObjAttrModifyReq\022B\n\031CasFileRecove"
  "rDelReq_body\030. \001(\0132\037.ClientCos.CasFileRe"
  "coverDelReq\022@\n\030CasObjRestoreErrReq_body\030"
  "/ \001(\0132\036.ClientCos.CasObjRestoreErrReq\022<\n"
  "\026SpObjAttrQueryReq_body\0300 \001(\0132\034.ClientCo"
  "s.SpObjAttrQueryReq\022B\n\031ObjModStorageType"
  "Req_body\0301 \001(\0132\037.ClientCos.ObjModStorage"
  "TypeReq\022H\n\034SetBucketWebsiteInfoReq_body\030"
  "2 \001(\0132\".ClientCos.SetBucketWebsiteInfoRe"
  "q\0224\n\022SetCamAttrReq_body\0303 \001(\0132\030.ClientCo"
  "s.SetCamAttrReq\022D\n\032BucketCamAuthQueryReq"
  "_body\0304 \001(\0132 .ClientCos.BucketCamAuthQue"
  "ryReq\022>\n\027AppCamAuthQueryReq_body\0305 \001(\0132\035"
  ".ClientCos.AppCamAuthQueryReq\022J\n\035FileUnf"
  "inishAttrQueryReq_body\0306 \001(\0132#.ClientCos"
  ".FileUnfinishAttrQueryReq\022>\n\027ReduceLifec"
  "ycleReq_body\0307 \001(\0132\035.ClientCos.ReduceLif"
  "ecycleReq\022B\n\031RetrieveLifecycleReq_body\0308"
  " \001(\0132\037.ClientCos.RetrieveLifecycleReq\0222\n"
  "\021SetObjAclReq_body\0309 \001(\0132\027.ClientCos.Set"
  "ObjAclReq\0222\n\021GetObjAclReq_body\030: \001(\0132\027.C"
  "lientCos.GetObjAclReq\0228\n\024SetBucketUinReq"
  "_body\030; \001(\0132\032.ClientCos.SetBucketUinReq\022"
  "8\n\024GetBucketUinReq_body\030< \001(\0132\032.ClientCo"
  "s.GetBucketUinReq\0224\n\022ListDirectReq_body\030"
  "= \001(\0132\030.ClientCos.ListDirectReq\0226\n\023Check"
  "ObjAclReq_body\030> \001(\0132\031.ClientCos.CheckOb"
  "jAclReq\022@\n\030CasObjRestoreFinReq_body\030\? \001("
  "\0132\036.ClientCos.CasObjRestoreFinReq\022:\n\025Set"
  "BucketLockReq_body\030@ \001(\0132\033.ClientCos.Set"
  "BucketLockReq\022:\n\025GetBucketLockReq_body\030A"
  " \001(\0132\033.ClientCos.GetBucketLockReq\022D\n\032Set"
  "BucketInventoryReq_body\030B \001(\0132 .ClientCo"
  "s.SetBucketInventoryReq\022D\n\032GetBucketInve"
  "ntoryReq_body\030C \001(\0132 .ClientCos.GetBucke"
  "tInventoryReq\022:\n\025COSTransToCASReq_body\030D"
  " \001(\0132\033.ClientCos.COSTransToCASReq\0224\n\022Set"
  "MigrateReq_body\030Z \001(\0132\030.ClientCos.SetMig"
  "rateReq\022:\n\025DelNoHashFileReq_body\030[ \001(\0132\033"
  ".ClientCos.DelNoHashFileReq\022<\n\026MigrateFi"
  "nFileReq_body\030\\ \001(\0132\034.ClientCos.MigrateF"
  "inFileReq\022@\n\030MigrateUnFinFileReq_body\030] "
  "\001(\0132\036.ClientCos.MigrateUnFinFileReq\"\264\t\n\007"
  "SubType\022\013\n\007Invalid\020\000\022\023\n\017BucketCreateReq\020"
  "\n\022\027\n\023BucketAttrModifyReq\020\013\022\026\n\022BucketAttr"
  "QueryReq\020\014\022\020\n\014DirCreateReq\020\r\022\023\n\017ObjAttrQ"
  "ueryReq\020\016\022\024\n\020ObjAttrModifyReq\020\017\022\r\n\tDelet"
  "eReq\020\020\022\013\n\007ListReq\020\021\022\023\n\017AppAttrQueryReq\020\022"
  "\022\024\n\020AppAttrModifyReq\020\023\022\033\n\027PreviewFileAtt"
  "rQueryReq\020\024\022\026\n\022ObjModTimeStampReq\020\025\022\022\n\016L"
  "istMutiobjReq\020\026\022\031\n\025UnfinObjAttrModifyReq"
  "\020\027\022\023\n\017FileBatchDelReq\020\030\022\021\n\rListObjVerReq"
  "\020\031\022\024\n\020DelExpireFileReq\020\032\022\016\n\nFileDelReq\020\033"
  "\022\026\n\022SpObjAttrModifyReq\020\034\022\026\n\022UploadDelmar"
  "kerReq\020\035\022\027\n\023ExpireFileDelVerReq\020\036\022\031\n\025Exp"
  "ireFileDelNoVerReq\020\037\022\027\n\023SetBucketPriAttr"
  "Req\020 \022\024\n\020FileDownToCASReq\020!\022\027\n\023CasObjAtt"
  "rModifyReq\020\"\022\030\n\024CasFileRecoverDelReq\020#\022\027"
  "\n\023CasObjRestoreErrReq\020$\022\025\n\021SpObjAttrQuer"
  "yReq\020%\022\030\n\024ObjModStorageTypeReq\020&\022\033\n\027SetB"
  "ucketWebsiteInfoReq\020\'\022\021\n\rSetCamAttrReq\020("
  "\022\031\n\025BucketCamAuthQueryReq\020)\022\026\n\022AppCamAut"
  "hQueryReq\020*\022\034\n\030FileUnfinishAttrQueryReq\020"
  "+\022\026\n\022ReduceLifecycleReq\020,\022\030\n\024RetrieveLif"
  "ecycleReq\020-\022\020\n\014SetObjAclReq\020.\022\020\n\014GetObjA"
  "clReq\020/\022\023\n\017SetBucketUinReq\0200\022\023\n\017GetBucke"
  "tUinReq\0201\022\021\n\rListDirectReq\0202\022\022\n\016CheckObj"
  "AclReq\0203\022\027\n\023CasObjRestoreFinReq\0204\022\024\n\020Set"
  "BucketLockReq\0205\022\024\n\020GetBucketLockReq\0206\022\031\n"
  "\025SetBucketInventoryReq\0207\022\031\n\025GetBucketInv"
  "entoryReq\0208\022\024\n\020COSTransToCASReq\0209\022\021\n\rSet"
  "MigrateReq\020Z\022\024\n\020DelNoHashFileReq\020[\022\025\n\021Mi"
  "grateFinFileReq\020\\\022\027\n\023MigrateUnFinFileReq"
  "\020]\"\220#\n\tCosRspMsg\022\017\n\007retcode\030\001 \002(\005\022\016\n\006ret"
  "msg\030\002 \002(\t\022.\n\010sub_type\030\n \001(\0162\034.ClientCos."
  "CosRspMsg.SubType\0228\n\024BucketCreateRsp_bod"
  "y\030\025 \001(\0132\032.ClientCos.BucketCreateRsp\022@\n\030B"
  "ucketAttrModifyRsp_body\030\026 \001(\0132\036.ClientCo"
  "s.BucketAttrModifyRsp\022>\n\027BucketAttrQuery"
  "Rsp_body\030\027 \001(\0132\035.ClientCos.BucketAttrQue"
  "ryRsp\0222\n\021DirCreateRsp_body\030\030 \001(\0132\027.Clien"
  "tCos.DirCreateRsp\0228\n\024ObjAttrQueryRsp_bod"
  "y\030\031 \001(\0132\032.ClientCos.ObjAttrQueryRsp\022:\n\025O"
  "bjAttrModifyRsp_body\030\032 \001(\0132\033.ClientCos.O"
  "bjAttrModifyRsp\022,\n\016DeleteRsp_body\030\033 \001(\0132"
  "\024.ClientCos.DeleteRsp\022(\n\014ListRsp_body\030\034 "
  "\001(\0132\022.ClientCos.ListRsp\0228\n\024AppAttrQueryR"
  "sp_body\030\035 \001(\0132\032.ClientCos.AppAttrQueryRs"
  "p\022:\n\025AppAttrModifyRsp_body\030\036 \001(\0132\033.Clien"
  "tCos.AppAttrModifyRsp\022H\n\034PreviewFileAttr"
  "QueryRsp_body\030\037 \001(\0132\".ClientCos.PreviewF"
  "ileAttrQueryRsp\022>\n\027ObjModTimeStampRsp_bo"
  "dy\030  \001(\0132\035.ClientCos.ObjModTimeStampRsp\022"
  "6\n\023ListMutiobjRsp_body\030! \001(\0132\031.ClientCos"
  ".ListMutiobjRsp\022D\n\032UnfinObjAttrModifyRsp"
  "_body\030\" \001(\0132 .ClientCos.UnfinObjAttrModi"
  "fyRsp\0228\n\024FileBatchDelRsp_body\030# \001(\0132\032.Cl"
  "ientCos.FileBatchDelRsp\0224\n\022ListObjVerRsp"
  "_body\030$ \001(\0132\030.ClientCos.ListObjVerRsp\022:\n"
  "\025DelExpireFileRsp_body\030% \001(\0132\033.ClientCos"
  ".DelExpireFileRsp\022.\n\017FileDelRsp_body\030& \001"
  "(\0132\025.ClientCos.FileDelRsp\022>\n\027SpObjAttrMo"
  "difyRsp_body\030\' \001(\0132\035.ClientCos.SpObjAttr"
  "ModifyRsp\022>\n\027UploadDelmarkerRsp_body\030( \001"
  "(\0132\035.ClientCos.UploadDelmarkerRsp\022@\n\030Exp"
  "ireFileDelVerRsp_body\030) \001(\0132\036.ClientCos."
  "ExpireFileDelVerRsp\022D\n\032ExpireFileDelNove"
  "rRsp_body\030* \001(\0132 .ClientCos.ExpireFileDe"
  "lNoverRsp\022@\n\030SetBucketPriAttrRsp_body\030+ "
  "\001(\0132\036.ClientCos.SetBucketPriAttrRsp\022:\n\025F"
  "ileDownToCASRsp_body\030, \001(\0132\033.ClientCos.F"
  "ileDownToCASRsp\022@\n\030CasObjAttrModifyRsp_b"
  "ody\030- \001(\0132\036.ClientCos.CasObjAttrModifyRs"
  "p\022B\n\031CasFileRecoverDelRsp_body\030. \001(\0132\037.C"
  "lientCos.CasFileRecoverDelRsp\022@\n\030CasObjR"
  "estoreErrRsp_body\030/ \001(\0132\036.ClientCos.CasO"
  "bjRestoreErrRsp\022<\n\026SpObjAttrQueryRsp_bod"
  "y\0300 \001(\0132\034.ClientCos.SpObjAttrQueryRsp\022B\n"
  "\031ObjModStorageTypeRsp_body\0301 \001(\0132\037.Clien"
  "tCos.ObjModStorageTypeRsp\022H\n\034SetBucketWe"
  "bsiteInfoRsp_body\0302 \001(\0132\".ClientCos.SetB"
  "ucketWebsiteInfoRsp\0224\n\022SetCamAttrRsp_bod"
  "y\0303 \001(\0132\030.ClientCos.SetCamAttrRsp\022D\n\032Buc"
  "ketCamAuthQueryRsp_body\0304 \001(\0132 .ClientCo"
  "s.BucketCamAuthQueryRsp\022>\n\027AppCamAuthQue"
  "ryRsp_body\0305 \001(\0132\035.ClientCos.AppCamAuthQ"
  "ueryRsp\022J\n\035FileUnfinishAttrQueryRsp_body"
  "\0306 \001(\0132#.ClientCos.FileUnfinishAttrQuery"
  "Rsp\022>\n\027ReduceLifecycleRsp_body\0307 \001(\0132\035.C"
  "lientCos.ReduceLifecycleRsp\022B\n\031RetrieveL"
  "ifecycleRsp_body\0308 \001(\0132\037.ClientCos.Retri"
  "eveLifecycleRsp\0222\n\021SetObjAclRsp_body\0309 \001"
  "(\0132\027.ClientCos.SetObjAclRsp\0222\n\021GetObjAcl"
  "Rsp_body\030: \001(\0132\027.ClientCos.GetObjAclRsp\022"
  "8\n\024SetBucketUinRsp_body\030; \001(\0132\032.ClientCo"
  "s.SetBucketUinRsp\0228\n\024GetBucketUinRsp_bod"
  "y\030< \001(\0132\032.ClientCos.GetBucketUinRsp\0224\n\022L"
  "istDirectRsp_body\030= \001(\0132\030.ClientCos.List"
  "DirectRsp\0226\n\023CheckObjAclRsp_body\030> \001(\0132\031"
  ".ClientCos.CheckObjAclRsp\022@\n\030CasObjResto"
  "reFinRsp_body\030\? \001(\0132\036.ClientCos.CasObjRe"
  "storeFinRsp\022:\n\025SetBucketLockRsp_body\030@ \001"
  "(\0132\033.ClientCos.SetBucketLockRsp\022:\n\025GetBu"
  "cketLockRsp_body\030A \001(\0132\033.ClientCos.GetBu"
  "cketLockRsp\022D\n\032SetBucketInventoryRsp_bod"
  "y\030B \001(\0132 .ClientCos.SetBucketInventoryRs"
  "p\022D\n\032GetBucketInventoryRsp_body\030C \001(\0132 ."
  "ClientCos.GetBucketInventoryRsp\022:\n\025COSTr"
  "ansToCASRsp_body\030D \001(\0132\033.ClientCos.COSTr"
  "ansToCASRsp\0224\n\022SetMigrateRsp_body\030Z \001(\0132"
  "\030.ClientCos.SetMigrateRsp\022:\n\025DelNoHashFi"
  "leRsp_body\030[ \001(\0132\033.ClientCos.DelNoHashFi"
  "leRsp\022<\n\026MigrateFinFileRsp_body\030\\ \001(\0132\034."
  "ClientCos.MigrateFinFileRsp\022@\n\030MigrateUn"
  "FinFileRsp_body\030] \001(\0132\036.ClientCos.Migrat"
  "eUnFinFileRsp\"\265\t\n\007SubType\022\013\n\007Invalid\020\000\022\023"
  "\n\017BucketCreateRsp\020\n\022\027\n\023BucketAttrModifyR"
  "sp\020\013\022\026\n\022BucketAttrQueryRsp\020\014\022\020\n\014DirCreat"
  "eRsp\020\r\022\023\n\017ObjAttrQueryRsp\020\016\022\024\n\020ObjAttrMo"
  "difyRsp\020\017\022\r\n\tDeleteRsp\020\020\022\013\n\007ListRsp\020\021\022\023\n"
  "\017AppAttrQueryRsp\020\022\022\024\n\020AppAttrModifyRsp\020\023"
  "\022\033\n\027PreviewFileAttrQueryRsp\020\024\022\026\n\022ObjModT"
  "imeStampRsp\020\025\022\022\n\016ListMutiobjRsp\020\026\022\031\n\025Unf"
  "inObjAttrModifyRsp\020\027\022\023\n\017FileBatchDelRsp\020"
  "\030\022\021\n\rListObjVerRsp\020\031\022\024\n\020DelExpireFileRsp"
  "\020\032\022\016\n\nFileDelRsp\020\033\022\027\n\023ObjAttrModifyRsp_s"
  "p\020\034\022\026\n\022UploadDelmarkerRsp\020\035\022\027\n\023ExpireFil"
  "eDelVerRsp\020\036\022\031\n\025ExpireFileDelNoverRsp\020\037\022"
  "\027\n\023SetBucketPriAttrRsp\020 \022\024\n\020FileDownToCA"
  "SRsp\020!\022\027\n\023CasObjAttrModifyRsp\020\"\022\030\n\024CasFi"
  "leRecoverDelRsp\020#\022\027\n\023CasObjRestoreErrRsp"
  "\020$\022\025\n\021SpObjAttrQueryRsp\020%\022\030\n\024ObjModStora"
  "geTypeRsp\020&\022\033\n\027SetBucketWebsiteInfoRsp\020\'"
  "\022\021\n\rSetCamAttrRsp\020(\022\031\n\025BucketCamAuthQuer"
  "yRsp\020)\022\026\n\022AppCamAuthQueryRsp\020*\022\034\n\030FileUn"
  "finishAttrQueryRsp\020+\022\026\n\022ReduceLifecycleR"
  "sp\020,\022\030\n\024RetrieveLifecycleRsp\020-\022\020\n\014SetObj"
  "AclRsp\020.\022\020\n\014GetObjAclRsp\020/\022\023\n\017SetBucketU"
  "inRsp\0200\022\023\n\017GetBucketUinRsp\0201\022\021\n\rListDire"
  "ctRsp\0202\022\022\n\016CheckObjAclRsp\0203\022\027\n\023CasObjRes"
  "toreFinRsp\0204\022\024\n\020SetBucketLockRsp\0205\022\024\n\020Ge"
  "tBucketLockRsp\0206\022\031\n\025SetBucketInventoryRs"
  "p\0207\022\031\n\025GetBucketInventoryRsp\0208\022\024\n\020COSTra"
  "nsToCASRsp\0209\022\021\n\rSetMigrateRsp\020Z\022\024\n\020DelNo"
  "HashFileRsp\020[\022\025\n\021MigrateFinFileRsp\020\\\022\027\n\023"
  "MigrateUnFinFileRsp\020]\"]\n\013Migrateinfo\022(\n\006"
  "status\030\001 \001(\0162\030.ClientCos.MigrateStatus\022\022"
  "\n\nstart_time\030\002 \001(\r\022\020\n\010fin_time\030\003 \001(\r\"G\n\t"
  "ExtraAttr\022\025\n\rcrossregional\030\001 \001(\014\022\017\n\007rule"
  "obj\030\002 \001(\014\022\022\n\nrule_mtime\030\003 \001(\r\":\n\rObjExpi"
  "reAttr\022\027\n\014expired_time\030\001 \001(\r:\0010\022\020\n\010rulen"
  "ame\030\002 \001(\014\"q\n\nUploadAttr\022-\n\014customheader\030"
  "\001 \003(\0132\027.ClientCos.CustomHeader\022\"\n\007taglis"
  "t\030\002 \003(\0132\021.ClientCos.ObjTag\022\020\n\010real_sha\030\003"
  " \001(\014\"\305\001\n\007CasInfo\022\016\n\006status\030\001 \001(\r\022\022\n\ncasf"
  "ilekey\030\002 \001(\014\022\022\n\narchive_id\030\003 \001(\014\022\024\n\014expi"
  "red_time\030\004 \001(\004\022\022\n\ncas_status\030\005 \001(\r\022\020\n\010ca"
  "s_type\030\006 \001(\r\022\025\n\rrestore_ctime\030\007 \001(\004\022/\n\014r"
  "estore_tier\030\010 \001(\0162\031.ClientCos.CASRestore"
  "Tier\"\277\002\n\017BucketCreateReq\022\014\n\004path\030\001 \001(\014\022\020"
  "\n\010biz_attr\030\002 \001(\014\022\"\n\004auth\030\003 \001(\0162\024.ClientC"
  "os.Authority\022\037\n\003key\030\004 \001(\0132\022.ClientCos.Ke"
  "yPair\022\022\n\nwhiterefer\030\005 \003(\t\022\022\n\nblackrefer\030"
  "\006 \003(\t\022\r\n\005cname\030\007 \003(\t\022-\n\014reservedattr\030\010 \003"
  "(\0132\027.ClientCos.ReservedAttr\022%\n\010corsrule\030"
  "\t \003(\0132\023.ClientCos.CorsRule\022)\n\013bucketOwne"
  "r\030\n \001(\0132\024.ClientCos.OwnerInfo\022\017\n\007is_slot"
  "\030\013 \001(\010\" \n\017BucketCreateRsp\022\r\n\005ctime\030\001 \001(\004"
  "\"\315\003\n\023BucketAttrModifyReq\022\014\n\004path\030\001 \001(\014\022\017"
  "\n\007modflag\030\002 \001(\r\022\"\n\004auth\030\003 \001(\0162\024.ClientCo"
  "s.Authority\022\020\n\010biz_attr\030\004 \001(\014\022\016\n\006forbid\030"
  "\005 \001(\r\022\022\n\nwhiterefer\030\006 \003(\t\022\022\n\nblackrefer\030"
  "\007 \003(\t\022\r\n\005cname\030\010 \003(\t\022-\n\014reservedattr\030\t \003"
  "(\0132\027.ClientCos.ReservedAttr\022%\n\010corsrule\030"
  "\n \003(\0132\023.ClientCos.CorsRule\022\025\n\rcrossregio"
  "nal\030\013 \001(\014\022\032\n\022multi_version_flag\030\014 \001(\r\022\033\n"
  "\003tag\030\r \003(\0132\016.ClientCos.Tag\022\017\n\007ruleobj\030\016 "
  "\001(\014\022!\n\006lfattr\030\017 \003(\0132\021.ClientCos.LFAttr\022\022"
  "\n\nrefer_able\030\020 \001(\010\022\030\n\020emptyreferconfig\030\021"
  " \001(\010\022\022\n\ncname_able\030\022 \001(\010\"\025\n\023BucketAttrMo"
  "difyRsp\"0\n\022BucketAttrQueryReq\022\014\n\004path\030\001 "
  "\001(\014\022\014\n\004flag\030\002 \001(\r\"\266\005\n\022BucketAttrQueryRsp"
  "\022\"\n\004auth\030\001 \001(\0162\024.ClientCos.Authority\022\020\n\010"
  "biz_attr\030\002 \001(\014\022\r\n\005ctime\030\003 \001(\r\022\r\n\005mtime\030\004"
  " \001(\r\022\r\n\005cname\030\005 \003(\t\022\022\n\nwhiterefer\030\006 \003(\t\022"
  "\022\n\nblackrefer\030\007 \003(\t\022-\n\014reservedattr\030\010 \003("
  "\0132\027.ClientCos.ReservedAttr\022\016\n\006forbid\030\t \001"
  "(\r\022%\n\010corsrule\030\n \003(\0132\023.ClientCos.CorsRul"
  "e\022\'\n\textraattr\030\013 \001(\0132\024.ClientCos.ExtraAt"
  "tr\022\032\n\022multi_version_flag\030\014 \001(\r\022\033\n\003tag\030\r "
  "\003(\0132\016.ClientCos.Tag\022!\n\006lfattr\030\016 \003(\0132\021.Cl"
  "ientCos.LFAttr\022\022\n\nrefer_able\030\017 \001(\010\022\030\n\020em"
  "ptyreferconfig\030\020 \001(\010\022\022\n\ncname_able\030\021 \001(\010"
  "\022\016\n\006nofile\030\022 \001(\010\022+\n\013websiteinfo\030\023 \001(\0132\026."
  "ClientCos.WebsiteInfo\022\020\n\010visit_v4\030\024 \001(\010\022"
  "\021\n\tbucketUin\030\025 \001(\014\022\037\n\005nslot\030\026 \001(\0162\020.Clie"
  "ntCos.NSlot\022%\n\010lockinfo\030\027 \001(\0132\023.ClientCo"
  "s.LockInfo\022\021\n\tinventory\030\030 \001(\014\022+\n\013migrate"
  "info\030\031 \001(\0132\026.ClientCos.Migrateinfo\".\n\014Di"
  "rCreateReq\022\014\n\004path\030\001 \002(\014\022\020\n\010biz_attr\030\002 \001"
  "(\014\"F\n\014DirCreateRsp\022\r\n\005ctime\030\001 \002(\004\022\'\n\text"
  "raattr\030\002 \001(\0132\024.ClientCos.ExtraAttr\"\245\002\n\020O"
  "bjAttrModifyReq\022\014\n\004path\030\001 \002(\014\022\014\n\004flag\030\002 "
  "\002(\r\022\020\n\010biz_attr\030\003 \001(\014\022\016\n\006forbid\030\004 \001(\r\022-\n"
  "\014reservedattr\030\005 \003(\0132\027.ClientCos.Reserved"
  "Attr\022-\n\014customheader\030\006 \003(\0132\027.ClientCos.C"
  "ustomHeader\022\"\n\004auth\030\007 \001(\0162\024.ClientCos.Au"
  "thority\022\020\n\010real_sha\030\010 \001(\014\022\017\n\007version\030\t \001"
  "(\014\022\023\n\013storagetype\030\n \001(\014\022\r\n\005mtime\030\013 \001(\r\022\n"
  "\n\002sk\030\014 \001(\014\";\n\020ObjAttrModifyRsp\022\'\n\textraa"
  "ttr\030\001 \001(\0132\024.ClientCos.ExtraAttr\"\306\003\n\022SpOb"
  "jAttrModifyReq\022\014\n\004path\030\001 \002(\014\022\014\n\004flag\030\002 \002"
  "(\r\022\n\n\002sk\030\003 \002(\014\022\017\n\007version\030\004 \001(\014\022\020\n\010biz_a"
  "ttr\030\005 \001(\014\022\020\n\005ctime\030\006 \001(\r:\0010\022\020\n\005mtime\030\007 \001"
  "(\r:\0010\022\016\n\006forbid\030\010 \001(\r\022-\n\014reservedattr\030\t "
  "\003(\0132\027.ClientCos.ReservedAttr\022\"\n\004auth\030\n \001"
  "(\0162\024.ClientCos.Authority\022-\n\014customheader"
  "\030\013 \003(\0132\027.ClientCos.CustomHeader\0222\n\021custo"
  "mheader_plat\030\014 \003(\0132\027.ClientCos.CustomHea"
  "der\022\020\n\010real_sha\030\r \001(\014\022\024\n\014storage_type\030\016 "
  "\001(\014\022\"\n\007taglist\030\017 \003(\0132\021.ClientCos.ObjTag\022"
  "/\n\robjexpireattr\030\020 \001(\0132\030.ClientCos.ObjEx"
  "pireAttr\"\024\n\022SpObjAttrModifyRsp\"0\n\017ObjAtt"
  "rQueryReq\022\014\n\004path\030\001 \001(\014\022\017\n\007version\030\002 \001(\014"
  "\"\350\005\n\017ObjAttrQueryRsp\022\022\n\010biz_attr\030\001 \002(\014:\000"
  "\022\020\n\005ctime\030\002 \002(\r:\0010\022\020\n\005mtime\030\003 \002(\r:\0010\022\021\n\t"
  "file_size\030\004 \001(\004\022\023\n\013file_length\030\005 \001(\004\022\013\n\003"
  "sha\030\006 \001(\014\022\016\n\006forbid\030\007 \001(\r\022-\n\014reservedatt"
  "r\030\010 \003(\0132\027.ClientCos.ReservedAttr\022\"\n\004auth"
  "\030\t \001(\0162\024.ClientCos.Authority\022-\n\014customhe"
  "ader\030\n \003(\0132\027.ClientCos.CustomHeader\022\020\n\010r"
  "eal_sha\030\013 \001(\014\022\021\n\tslicesize\030\014 \001(\r\022\014\n\004type"
  "\030\r \001(\r\022\024\n\014storage_type\030\016 \001(\014\022\017\n\007version\030"
  "\017 \001(\014\022\025\n\rdelete_marker\030\020 \001(\010\022\020\n\010islatest"
  "\030\021 \001(\010\022\025\n\rupload_source\030\022 \001(\014\022#\n\007casinfo"
  "\030\023 \001(\0132\022.ClientCos.CasInfo\022#\n\007sseinfo\030\024 "
  "\001(\0132\022.ClientCos.SseInfo\022\016\n\006tagnum\030\025 \001(\r\022"
  "/\n\robjexpireattr\030\026 \001(\0132\030.ClientCos.ObjEx"
  "pireAttr\022\"\n\007taglist\030\027 \003(\0132\021.ClientCos.Ob"
  "jTag\022\027\n\017fast_upload_key\030\030 \001(\t\022#\n\005owner\030\031"
  " \001(\0132\024.ClientCos.OwnerInfo\022\031\n\021lock_expir"
  "ed_time\030\032 \001(\004\022%\n\010lockinfo\030\033 \001(\0132\023.Client"
  "Cos.LockInfo\022\r\n\005is_v4\030\034 \001(\010\"\031\n\tDeleteReq"
  "\022\014\n\004path\030\001 \002(\014\"\013\n\tDeleteRsp\"\236\001\n\007ListReq\022"
  "\016\n\006prefix\030\001 \002(\014\022\020\n\006offset\030\002 \002(\014:\000\022\024\n\tdel"
  "imiter\030\003 \002(\014:\001/\022\022\n\005count\030\004 \002(\r:\003200\022\023\n\004f"
  "lag\030\005 \002(\010:\005false\022\031\n\nneed_x_cos\030\006 \001(\010:\005fa"
  "lse\022\027\n\010need_tag\030\007 \001(\010:\005false\"[\n\007ListRsp\022"
  " \n\004objs\030\001 \003(\0132\022.ClientCos.ObjItem\022\025\n\013nex"
  "t_offset\030\002 \001(\014:\000\022\027\n\010listover\030\003 \001(\010:\005fals"
  "e\"\213\001\n\016ListMutiobjReq\022\016\n\006prefix\030\001 \002(\014\022\027\n\r"
  "objnamemarker\030\002 \002(\014:\000\022\031\n\017uploadkeymarker"
  "\030\003 \002(\014:\000\022\023\n\tdelimiter\030\004 \002(\014:\000\022\022\n\005count\030\005"
  " \002(\r:\003200\022\014\n\004flag\030\006 \001(\010\"\215\001\n\016ListMutiobjR"
  "sp\022$\n\004objs\030\001 \003(\0132\026.ClientCos.MutiObjItem"
  "\022\034\n\022next_objnamemarker\030\002 \001(\014:\000\022\036\n\024next_u"
  "ploadkeymarker\030\003 \001(\014:\000\022\027\n\010listover\030\004 \001(\010"
  ":\005false\"\303\001\n\rListObjVerReq\022\016\n\006prefix\030\001 \002("
  "\014\022\027\n\robjnamemarker\030\002 \002(\014:\000\022\027\n\rversionmar"
  "ker\030\003 \002(\014:\000\022\023\n\tdelimiter\030\004 \002(\014:\000\022\022\n\005coun"
  "t\030\005 \002(\r:\003200\022\023\n\004flag\030\006 \002(\010:\005false\022\031\n\nnee"
  "d_x_cos\030\007 \001(\010:\005false\022\027\n\010need_tag\030\010 \001(\010:\005"
  "false\"\206\001\n\rListObjVerRsp\022 \n\004objs\030\001 \003(\0132\022."
  "ClientCos.ObjItem\022\034\n\022next_objnamemarker\030"
  "\002 \001(\014:\000\022\034\n\022next_versionmarker\030\003 \001(\014:\000\022\027\n"
  "\010listover\030\004 \001(\010:\005false\"\351\001\n\025UnfinObjAttrM"
  "odifyReq\022\014\n\004path\030\001 \002(\014\022\020\n\010uploadid\030\002 \002(\014"
  "\022\014\n\004flag\030\003 \002(\r\022\020\n\010biz_attr\030\004 \001(\014\022\016\n\006forb"
  "id\030\005 \001(\r\022-\n\014reservedattr\030\006 \003(\0132\027.ClientC"
  "os.ReservedAttr\022-\n\014customheader\030\007 \003(\0132\027."
  "ClientCos.CustomHeader\022\"\n\004auth\030\010 \001(\0162\024.C"
  "lientCos.Authority\"\027\n\025UnfinObjAttrModify"
  "Rsp\" \n\017AppAttrQueryReq\022\r\n\005appid\030\001 \002(\014\"Q\n"
  "\017AppAttrQueryRsp\022 \n\004keys\030\001 \003(\0132\022.ClientC"
  "os.KeyPair\022\r\n\005ctime\030\002 \001(\r\022\r\n\005mtime\030\003 \001(\r"
  "\"C\n\020AppAttrModifyReq\022\r\n\005appid\030\001 \002(\014\022 \n\004k"
  "eys\030\002 \003(\0132\022.ClientCos.KeyPair\"\022\n\020AppAttr"
  "ModifyRsp\"H\n\027PreviewFileAttrQueryReq\022\014\n\004"
  "path\030\001 \002(\014\022\016\n\004sign\030\002 \001(\t:\000\022\017\n\005refer\030\003 \001("
  "\t:\000\"\263\001\n\027PreviewFileAttrQueryRsp\022\020\n\010biz_a"
  "ttr\030\001 \001(\014\022\021\n\tfile_size\030\002 \001(\004\022\023\n\013file_len"
  "gth\030\003 \001(\004\022\013\n\003sha\030\004 \001(\014\022\r\n\005ctime\030\005 \001(\r\022\r\n"
  "\005mtime\030\006 \001(\r\022\"\n\004auth\030\007 \001(\0162\024.ClientCos.A"
  "uthority\022\017\n\007preview\030\010 \001(\010\"@\n\022ObjModTimeS"
  "tampReq\022\014\n\004path\030\001 \002(\014\022\r\n\005ctime\030\002 \001(\r\022\r\n\005"
  "mtime\030\003 \001(\r\"\024\n\022ObjModTimeStampRsp\"\'\n\006del"
  "Obj\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\"1\n\017Fi"
  "leBatchDelReq\022\036\n\003obj\030\001 \003(\0132\021.ClientCos.d"
  "elObj\"\203\001\n\014FileDelState\022\014\n\004path\030\001 \002(\014\022\017\n\007"
  "retcode\030\002 \002(\005\022\016\n\006retmsg\030\003 \002(\t\022\017\n\007version"
  "\030\004 \001(\014\022\025\n\rdelete_marker\030\005 \001(\010\022\034\n\radd_del"
  "marker\030\006 \001(\010:\005false\"O\n\017FileBatchDelRsp\022)"
  "\n\010delstate\030\001 \003(\0132\027.ClientCos.FileDelStat"
  "e\022\021\n\textraattr\030\002 \001(\014\"v\n\022UploadDelmarkerR"
  "eq\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \002(\014\022\036\n\014sto"
  "rage_type\030\003 \001(\014:\010Standard\022\016\n\006is_ugc\030\004 \001("
  "\010\022\021\n\ttrsf_args\030\005 \001(\014\"\024\n\022UploadDelmarkerR"
  "sp\":\n\030FileUnfinishAttrQueryReq\022\014\n\004path\030\001"
  " \002(\014\022\020\n\010uploadid\030\002 \001(\014\"\242\002\n\030FileUnfinishA"
  "ttrQueryRsp\022\013\n\003sha\030\001 \002(\014\022\r\n\005mtime\030\002 \002(\r\022"
  "\024\n\014storage_type\030\003 \001(\014\022\013\n\003uin\030\004 \001(\014\022\r\n\005ct"
  "ime\030\005 \001(\r\022\026\n\016usr_slice_size\030\006 \001(\r\022\027\n\017rea"
  "l_slice_size\030\007 \001(\r\022\021\n\tfile_size\030\010 \001(\004\022\020\n"
  "\010real_sha\030\t \001(\014\022\030\n\004info\030\n \001(\0132\n.storeinf"
  "o\022#\n\007sseinfo\030\013 \001(\0132\022.ClientCos.SseInfo\022#"
  "\n\007casinfo\030\014 \001(\0132\022.ClientCos.CasInfo\"N\n\022R"
  "educeLifecycleReq\022\014\n\004path\030\001 \002(\014\022\036\n\003ops\030\002"
  " \003(\0132\021.ClientCos.Opinfo\022\n\n\002sk\030\003 \002(\014\"\024\n\022R"
  "educeLifecycleRsp\"\202\001\n\024RetrieveLifecycleR"
  "eq\022\014\n\004path\030\001 \002(\014\022\r\n\005fsize\030\002 \002(\004\022\n\n\002sk\030\003 "
  "\002(\014\022\020\n\010src_type\030\004 \002(\014\022\020\n\010dst_type\030\005 \001(\014\022"
  "\035\n\002op\030\006 \002(\0162\021.ClientCos.Action\"\026\n\024Retrie"
  "veLifecycleRsp\"p\n\006Opinfo\022\035\n\002op\030\001 \002(\0162\021.C"
  "lientCos.Action\022\022\n\nfile_count\030\002 \001(\004\022\017\n\007s"
  "torage\030\003 \001(\004\022\020\n\010src_type\030\004 \001(\014\022\020\n\010dst_ty"
  "pe\030\005 \001(\014\"H\n\014ReservedAttr\022\'\n\003key\030\001 \002(\0162\032."
  "ClientCos.ReservedAttrKey\022\017\n\005value\030\002 \002(\014"
  ":\000\"*\n\014CustomHeader\022\013\n\003key\030\001 \002(\014\022\r\n\005value"
  "\030\002 \002(\014\"\214\001\n\010CorsRule\022\016\n\006origin\030\001 \002(\014\022\017\n\007m"
  "ethods\030\002 \002(\014\022\023\n\013credentials\030\003 \001(\010\022\025\n\rall"
  "ow_headers\030\004 \001(\014\022\026\n\016expose_headers\030\005 \001(\014"
  "\022\017\n\007max_age\030\006 \001(\005\022\n\n\002id\030\007 \001(\014\"!\n\003Tag\022\013\n\003"
  "key\030\001 \002(\014\022\r\n\005value\030\002 \002(\014\"$\n\006ObjTag\022\013\n\003ke"
  "y\030\001 \002(\014\022\r\n\005value\030\002 \001(\014\"\030\n\010LockInfo\022\014\n\004da"
  "ys\030\001 \001(\r\"\253\013\n\007AppAttr\022\020\n\010biz_attr\030\001 \001(\014\022\014"
  "\n\004type\030\002 \001(\r\022\013\n\003sha\030\003 \001(\014\022\"\n\004auth\030\004 \001(\0162"
  "\024.ClientCos.Authority\022\014\n\004path\030\005 \001(\014\022 \n\004k"
  "eys\030\006 \003(\0132\022.ClientCos.KeyPair\022\r\n\005cname\030\007"
  " \003(\t\022\022\n\nwhiterefer\030\010 \003(\t\022\022\n\nblackrefer\030\t"
  " \003(\t\022\031\n\016usr_slice_size\030\n \001(\r:\0010\022\021\n\006forbi"
  "d\030\013 \001(\r:\0010\022-\n\014reservedattr\030\014 \003(\0132\027.Clien"
  "tCos.ReservedAttr\022\032\n\017real_slice_size\030\r \001"
  "(\r:\0010\022-\n\014customheader\030\016 \003(\0132\027.ClientCos."
  "CustomHeader\022%\n\010corsrule\030\017 \003(\0132\023.ClientC"
  "os.CorsRule\022\020\n\010real_sha\030\020 \001(\014\022\'\n\textraat"
  "tr\030\021 \001(\0132\024.ClientCos.ExtraAttr\022\020\n\010ctime_"
  "ms\030\022 \001(\004\022\017\n\007version\030\023 \001(\014\022\032\n\022multi_versi"
  "on_flag\030\024 \001(\r\022\035\n\025multi_version_hisflag\030\025"
  " \001(\r\022\033\n\003tag\030\026 \003(\0132\016.ClientCos.Tag\022\021\n\tbuc"
  "ketnum\030\027 \001(\r\022\016\n\006idcnum\030\030 \001(\r\022!\n\006lfattr\030\031"
  " \003(\0132\021.ClientCos.LFAttr\022\022\n\nrefer_able\030\032 "
  "\001(\010\022\030\n\020emptyreferconfig\030\033 \001(\010\022\022\n\ncname_a"
  "ble\030\034 \001(\010\022\025\n\rupload_source\030\035 \001(\014\022\025\n\rctim"
  "e_ms_temp\030\036 \001(\004\0222\n\021customheader_plat\030\037 \003"
  "(\0132\027.ClientCos.CustomHeader\022\013\n\003uin\030  \001(\014"
  "\022\016\n\006nofile\030! \001(\010\022#\n\007casinfo\030\" \001(\0132\022.Clie"
  "ntCos.CasInfo\022#\n\007sseinfo\030# \001(\0132\022.ClientC"
  "os.SseInfo\022+\n\013websiteinfo\030$ \001(\0132\026.Client"
  "Cos.WebsiteInfo\022\"\n\007taglist\030% \003(\0132\021.Clien"
  "tCos.ObjTag\022/\n\robjexpireattr\030& \001(\0132\030.Cli"
  "entCos.ObjExpireAttr\022#\n\007camauth\030\' \001(\0162\022."
  "ClientCos.CamAuth\022\r\n\005is_v4\030( \001(\010\022\020\n\010visi"
  "t_v4\030) \001(\010\022\020\n\010is_chunk\030* \001(\010\022&\n\010objOwner"
  "\030+ \001(\0132\024.ClientCos.OwnerInfo\022)\n\013bucketOw"
  "ner\030, \001(\0132\024.ClientCos.OwnerInfo\022 \n\004acls\030"
  "- \003(\0132\022.ClientCos.AclInfo\022\037\n\005nslot\030. \001(\016"
  "2\020.ClientCos.NSlot\022\016\n\006is_ugc\030/ \001(\010\022%\n\010lo"
  "ckinfo\0300 \001(\0132\023.ClientCos.LockInfo\022\022\n\nmti"
  "me_temp\0301 \001(\r\022\021\n\tinventory\0302 \001(\014\022\027\n\017inve"
  "ntory_mtime\0303 \001(\r\022+\n\013migrateinfo\0304 \001(\0132\026"
  ".ClientCos.Migrateinfo\"/\n\007KeyPair\022\021\n\tacc"
  "esskey\030\001 \001(\t\022\021\n\tsecretkey\030\002 \001(\t\"\317\004\n\007ObjI"
  "tem\022\014\n\004name\030\001 \001(\014\022\021\n\tfile_size\030\003 \001(\004\022\023\n\013"
  "upload_size\030\004 \001(\004\022\r\n\005ctime\030\005 \001(\004\022\r\n\005mtim"
  "e\030\006 \001(\004\022\020\n\010biz_attr\030\007 \001(\014\022\013\n\003sha\030\010 \001(\014\022\""
  "\n\004auth\030\t \001(\0162\024.ClientCos.Authority\022-\n\014re"
  "servedattr\030\n \003(\0132\027.ClientCos.ReservedAtt"
  "r\022\020\n\010real_sha\030\013 \001(\014\022\017\n\007version\030\014 \001(\014\022\020\n\010"
  "ctime_ms\030\r \001(\004\022\024\n\014storage_type\030\016 \001(\014\022\025\n\r"
  "delete_marker\030\017 \001(\010\022\020\n\010islatest\030\020 \001(\010\022\014\n"
  "\004type\030\021 \001(\r\022\"\n\007taglist\030\022 \003(\0132\021.ClientCos"
  ".ObjTag\022/\n\robjexpireattr\030\023 \001(\0132\030.ClientC"
  "os.ObjExpireAttr\022-\n\014customheader\030\024 \003(\0132\027"
  ".ClientCos.CustomHeader\022#\n\007sseinfo\030\025 \001(\013"
  "2\022.ClientCos.SseInfo\0223\n\022x_cos_customhead"
  "er\030\026 \003(\0132\027.ClientCos.CustomHeader\022\016\n\006for"
  "bid\030\027 \001(\r\022\016\n\006is_ugc\030\030 \001(\010\"\202\001\n\013MutiObjIte"
  "m\022\014\n\004name\030\001 \001(\014\022\021\n\tuploadkey\030\003 \001(\014\022\r\n\005ct"
  "ime\030\004 \001(\r\022\r\n\005mtime\030\005 \001(\r\022\024\n\014storage_type"
  "\030\006 \001(\014\022\013\n\003uin\030\007 \001(\014\022\021\n\tfile_size\030\010 \001(\004\"\225"
  "\001\n\020DelObjExpireAttr\022\n\n\002op\030\001 \002(\r\022\020\n\010isLat"
  "est\030\002 \001(\010\022\026\n\016isDeleteMarker\030\003 \001(\010\022\024\n\014nex"
  "t_version\030\004 \001(\014\022\032\n\022next_version_ctime\030\005 "
  "\001(\r\022\031\n\021next_version_seed\030\006 \001(\004\"v\n\020DelExp"
  "ireFileReq\022\014\n\004path\030\001 \002(\014\022\r\n\005mtime\030\002 \002(\r\022"
  "\023\n\013switch_flag\030\003 \001(\010\0220\n\013expire_attr\030\004 \001("
  "\0132\033.ClientCos.DelObjExpireAttr\"!\n\020DelExp"
  "ireFileRsp\022\r\n\005mtime\030\001 \001(\r\"E\n\017StorageType"
  "Attr\022\024\n\014min_del_days\030\001 \002(\r\022\034\n\rmin_file_s"
  "ize\030\002 \001(\r:\00564000\"R\n\006LFAttr\022\023\n\013storagetyp"
  "e\030\001 \002(\014\0223\n\017storagetypeattr\030\002 \002(\0132\032.Clien"
  "tCos.StorageTypeAttr\"\210\001\n\nFileDelReq\022\014\n\004p"
  "ath\030\001 \002(\014\022\020\n\010uploadid\030\002 \001(\014\022\023\n\013switch_fl"
  "ag\030\003 \001(\010\022\023\n\013isExpireReq\030\004 \001(\010\0220\n\013expire_"
  "attr\030\005 \001(\0132\033.ClientCos.DelObjExpireAttr\""
  "\014\n\nFileDelRsp\"l\n\025ExpireFileDelNoVerReq\022\014"
  "\n\004path\030\001 \002(\014\022\023\n\013switch_flag\030\002 \001(\010\0220\n\013exp"
  "ire_attr\030\003 \001(\0132\033.ClientCos.DelObjExpireA"
  "ttr\"7\n\025ExpireFileDelNoverRsp\022\017\n\007version\030"
  "\001 \002(\014\022\r\n\005mtime\030\002 \002(\r\"\212\001\n\023ExpireFileDelVe"
  "rReq\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \002(\014\022\r\n\005m"
  "time\030\003 \002(\r\022\023\n\013switch_flag\030\004 \001(\010\0220\n\013expir"
  "e_attr\030\005 \001(\0132\033.ClientCos.DelObjExpireAtt"
  "r\";\n\023ExpireFileDelVerRsp\022\025\n\rdelete_marke"
  "r\030\001 \002(\010\022\r\n\005mtime\030\002 \002(\r\"S\n\023SetBucketPriAt"
  "trReq\022\014\n\004path\030\001 \002(\014\022\014\n\004flag\030\002 \002(\r\022\016\n\006nof"
  "ile\030\003 \001(\010\022\020\n\010visit_v4\030\004 \001(\010\"\025\n\023SetBucket"
  "PriAttrRsp\"{\n\020FileDownToCASReq\022\014\n\004path\030\001"
  " \002(\014\022\022\n\narchive_id\030\002 \002(\014\022\n\n\002sk\030\003 \002(\014\022\023\n\013"
  "check_mtime\030\004 \002(\r\022\017\n\007version\030\005 \001(\014\022\023\n\013sw"
  "itch_flag\030\006 \001(\010\"&\n\020FileDownToCASRsp\022\022\n\nc"
  "asfilekey\030\001 \001(\014\"{\n\023CasObjAttrModifyReq\022\014"
  "\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\022\024\n\014expired"
  "_time\030\003 \002(\004\022/\n\014restore_tier\030\004 \001(\0162\031.Clie"
  "ntCos.CASRestoreTier\"\025\n\023CasObjAttrModify"
  "Rsp\"5\n\024CasFileRecoverDelReq\022\014\n\004path\030\001 \002("
  "\014\022\017\n\007version\030\002 \001(\014\",\n\024CasFileRecoverDelR"
  "sp\022\024\n\014expired_time\030\001 \002(\004\"4\n\023CasObjRestor"
  "eErrReq\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\"\025"
  "\n\023CasObjRestoreErrRsp\"V\n\023CasObjRestoreFi"
  "nReq\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\022\n\n\002s"
  "k\030\003 \001(\014\022\024\n\014storage_type\030\004 \001(\014\"\025\n\023CasObjR"
  "estoreFinRsp\"2\n\021SpObjAttrQueryReq\022\014\n\004pat"
  "h\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\"\202\006\n\021SpObjAttrQu"
  "eryRsp\022\022\n\010biz_attr\030\001 \002(\014:\000\022\020\n\005ctime\030\002 \002("
  "\r:\0010\022\020\n\005mtime\030\003 \002(\r:\0010\022\021\n\tfile_size\030\004 \001("
  "\004\022\023\n\013file_length\030\005 \001(\004\022\013\n\003sha\030\006 \001(\014\022\016\n\006f"
  "orbid\030\007 \001(\r\022-\n\014reservedattr\030\010 \003(\0132\027.Clie"
  "ntCos.ReservedAttr\022\"\n\004auth\030\t \001(\0162\024.Clien"
  "tCos.Authority\022-\n\014customheader\030\n \003(\0132\027.C"
  "lientCos.CustomHeader\022\020\n\010real_sha\030\013 \001(\014\022"
  "\021\n\tslicesize\030\014 \001(\r\022\014\n\004type\030\r \001(\r\022\024\n\014stor"
  "age_type\030\016 \001(\014\022\017\n\007version\030\017 \001(\014\022\025\n\rdelet"
  "e_marker\030\020 \001(\010\022\020\n\010islatest\030\021 \001(\010\022\025\n\ruplo"
  "ad_source\030\022 \001(\014\022#\n\007casinfo\030\023 \001(\0132\022.Clien"
  "tCos.CasInfo\022#\n\007sseinfo\030\024 \001(\0132\022.ClientCo"
  "s.SseInfo\022\016\n\006tagnum\030\025 \001(\r\022/\n\robjexpireat"
  "tr\030\026 \001(\0132\030.ClientCos.ObjExpireAttr\022\"\n\007ta"
  "glist\030\027 \003(\0132\021.ClientCos.ObjTag\022\024\n\014versio"
  "n_seed\030\030 \001(\004\022\016\n\006is_ugc\030\031 \001(\010\022#\n\005owner\030\032 "
  "\001(\0132\024.ClientCos.OwnerInfo\022\016\n\006is_cas\030\033 \001("
  "\010\022 \n\004acls\030\034 \003(\0132\022.ClientCos.AclInfo\022\031\n\021l"
  "ock_expired_time\030\035 \001(\004\022\r\n\005is_v4\030\036 \001(\010\"\200\001"
  "\n\024ObjModStorageTypeReq\022\014\n\004path\030\001 \002(\014\022\023\n\013"
  "storagetype\030\002 \002(\014\022\017\n\007version\030\003 \001(\014\022\023\n\013sw"
  "itch_flag\030\004 \001(\010\022\n\n\002sk\030\005 \001(\014\022\023\n\013check_mti"
  "me\030\006 \001(\r\"\026\n\024ObjModStorageTypeRsp\"\321\001\n\007Sse"
  "Info\022#\n\007ssetype\030\001 \001(\0162\022.ClientCos.SseTyp"
  "e\022\021\n\talgorithm\030\002 \001(\014\022\020\n\010ssec_key\030\003 \001(\014\022\024"
  "\n\014ssec_key_md5\030\004 \001(\014\022\016\n\006kms_id\030\005 \001(\014\022\023\n\013"
  "kms_context\030\006 \001(\014\022\023\n\013kms_datakey\030\007 \001(\014\022\032"
  "\n\022kms_datakey_encryp\030\010 \001(\014\022\020\n\010sse_etag\030\t"
  " \001(\014\"b\n\021ErrorCodeReturned\022\021\n\terrorcode\030\001"
  " \002(\r\022\020\n\010protocol\030\002 \001(\014\022\026\n\016replacekeywith"
  "\030\003 \001(\014\022\020\n\010hostname\030\004 \001(\014\"\227\001\n\016PrefixRetur"
  "ned\022\021\n\tkeyprefix\030\001 \002(\014\022\020\n\010protocol\030\002 \001(\014"
  "\022\034\n\024replacekeyprefixwith\030\003 \001(\014\022\026\n\016replac"
  "ekeywith\030\004 \001(\014\022\020\n\010hostname\030\005 \001(\014\022\030\n\020http"
  "redirectcode\030\006 \001(\014\"\264\001\n\030PrefixAndErrcodeR"
  "eturned\022\021\n\terrorcode\030\001 \001(\r\022\021\n\tkeyprefix\030"
  "\002 \001(\014\022\020\n\010protocol\030\003 \001(\014\022\020\n\010hostname\030\004 \001("
  "\014\022\034\n\024replacekeyprefixwith\030\005 \001(\014\022\026\n\016repla"
  "cekeywith\030\006 \001(\014\022\030\n\020httpredirectcode\030\007 \001("
  "\014\"\300\001\n\013RoutingRule\0227\n\021errorcodereturned\030\001"
  " \003(\0132\034.ClientCos.ErrorCodeReturned\0221\n\016pr"
  "efixreturned\030\002 \003(\0132\031.ClientCos.PrefixRet"
  "urned\022E\n\030prefixanderrcodereturned\030\003 \003(\0132"
  "#.ClientCos.PrefixAndErrcodeReturned\"\214\001\n"
  "\013WebsiteInfo\022\025\n\rindexdocument\030\001 \002(\014\022\020\n\010p"
  "rotocol\030\002 \001(\014\022\025\n\rerrordocument\030\003 \001(\014\022+\n\013"
  "routingrule\030\004 \001(\0132\026.ClientCos.RoutingRul"
  "e\022\020\n\010hostname\030\005 \001(\014\"e\n\027SetBucketWebsiteI"
  "nfoReq\022\014\n\004path\030\001 \002(\014\022\017\n\007setflag\030\002 \002(\r\022+\n"
  "\013websiteinfo\030\003 \001(\0132\026.ClientCos.WebsiteIn"
  "fo\"\031\n\027SetBucketWebsiteInfoRsp\"B\n\rSetCamA"
  "ttrReq\022\014\n\004path\030\001 \002(\014\022#\n\007camauth\030\002 \002(\0162\022."
  "ClientCos.CamAuth\"\017\n\rSetCamAttrRsp\"%\n\025Bu"
  "cketCamAuthQueryReq\022\014\n\004path\030\001 \002(\014\"*\n\025Buc"
  "ketCamAuthQueryRsp\022\021\n\tiscamauth\030\001 \002(\010\"4\n"
  "\013CamAtuhItem\022\022\n\nbucketpath\030\001 \002(\014\022\021\n\tisca"
  "mauth\030\002 \002(\010\"8\n\022AppCamAuthQueryReq\022\r\n\005app"
  "id\030\001 \002(\014\022\023\n\013next_bucket\030\002 \002(\014\"\213\001\n\022AppCam"
  "AuthQueryRsp\022#\n\007camauth\030\001 \002(\0162\022.ClientCo"
  "s.CamAuth\022\023\n\013next_bucket\030\002 \002(\014\022$\n\004item\030\003"
  " \003(\0132\026.ClientCos.CamAtuhItem\022\025\n\006isover\030\004"
  " \002(\010:\005false\"x\n\007CgiArgs\022&\n\tauth_info\030\001 \001("
  "\0132\023.ClientCos.AuthInfo\022#\n\005owner\030\002 \001(\0132\024."
  "ClientCos.OwnerInfo\022 \n\004acls\030\003 \003(\0132\022.Clie"
  "ntCos.AclInfo\"\216\001\n\tCgiParams\0225\n\021get_objec"
  "t_extend\030\001 \001(\0132\032.ClientCos.GetObjectExte"
  "nd\022J\n\034complete_multi_upload_extend\030\002 \001(\013"
  "2$.ClientCos.CompleteMultiUploadExtend\","
  "\n\017GetObjectExtend\022\031\n\013check_refer\030\001 \001(\010:\004"
  "true\"2\n\031CompleteMultiUploadExtend\022\025\n\rmin"
  "_part_size\030\001 \001(\005\"\306\001\n\010TrsfArgs\0222\n\021customh"
  "eader_plat\030\001 \003(\0132\027.ClientCos.CustomHeade"
  "r\022\021\n\tsrc_ctime\030\002 \001(\r\022\020\n\005mtime\030\003 \001(\r:\0010\022\016"
  "\n\006forbid\030\004 \001(\r\022-\n\014reservedattr\030\005 \003(\0132\027.C"
  "lientCos.ReservedAttr\022\"\n\004auth\030\006 \001(\0162\024.Cl"
  "ientCos.Authority\"$\n\007AclInfo\022\013\n\003uin\030\001 \001("
  "\014\022\014\n\004perm\030\002 \001(\005\"@\n\010AuthInfo\022\016\n\006reqUin\030\001 "
  "\001(\014\022\023\n\013contextPass\030\002 \001(\010\022\017\n\007needAcl\030\003 \001("
  "\010\"\030\n\tOwnerInfo\022\013\n\003uin\030\001 \001(\014\"=\n\016CheckObjA"
  "clReq\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\022\014\n\004"
  "perm\030\003 \001(\005\"\020\n\016CheckObjAclRsp\"O\n\014SetObjAc"
  "lReq\022\014\n\004path\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\022 \n\004a"
  "cls\030\003 \003(\0132\022.ClientCos.AclInfo\"\016\n\014SetObjA"
  "clRsp\"-\n\014GetObjAclReq\022\014\n\004path\030\001 \002(\014\022\017\n\007v"
  "ersion\030\002 \001(\014\"U\n\014GetObjAclRsp\022 \n\004acls\030\001 \003"
  "(\0132\022.ClientCos.AclInfo\022#\n\005owner\030\002 \001(\0132\024."
  "ClientCos.OwnerInfo\"J\n\017SetBucketUinReq\022\014"
  "\n\004path\030\001 \002(\014\022)\n\013bucketOwner\030\002 \001(\0132\024.Clie"
  "ntCos.OwnerInfo\"\021\n\017SetBucketUinRsp\"\037\n\017Ge"
  "tBucketUinReq\022\014\n\004path\030\001 \002(\014\"<\n\017GetBucket"
  "UinRsp\022)\n\013bucketOwner\030\002 \001(\0132\024.ClientCos."
  "OwnerInfo\"G\n\020SetBucketLockReq\022\014\n\004path\030\001 "
  "\002(\014\022%\n\010lockinfo\030\002 \001(\0132\023.ClientCos.LockIn"
  "fo\"\022\n\020SetBucketLockRsp\" \n\020GetBucketLockR"
  "eq\022\014\n\004path\030\001 \002(\014\"9\n\020GetBucketLockRsp\022%\n\010"
  "lockinfo\030\001 \001(\0132\023.ClientCos.LockInfo\"8\n\025S"
  "etBucketInventoryReq\022\014\n\004path\030\001 \002(\014\022\021\n\tin"
  "ventory\030\002 \001(\014\"\027\n\025SetBucketInventoryRsp\"%"
  "\n\025GetBucketInventoryReq\022\014\n\004path\030\001 \002(\014\"*\n"
  "\025GetBucketInventoryRsp\022\021\n\tinventory\030\001 \001("
  "\014\"g\n\020COSTransToCASReq\022\014\n\004path\030\001 \002(\014\022\017\n\007v"
  "ersion\030\002 \001(\014\022\023\n\013switch_flag\030\003 \001(\010\022\n\n\002sk\030"
  "\004 \001(\014\022\023\n\013check_mtime\030\005 \001(\r\"\022\n\020COSTransTo"
  "CASRsp\"\214\002\n\rListDirectReq\022\016\n\006prefix\030\001 \001(\t"
  "\022\020\n\006marker\030\002 \001(\t:\000\022\023\n\tsubmarker\030\003 \001(\t:\000\022"
  "\023\n\tdelimiter\030\004 \001(\t:\000\022\022\n\005count\030\005 \001(\r:\003200"
  "\022\023\n\004flag\030\006 \001(\010:\005false\0225\n\004type\030\007 \001(\0162!.Cl"
  "ientCos.ListDirectReq.ListType:\004LIST\022\016\n\006"
  "bad_ip\030\n \001(\t\022\020\n\010bad_port\030\013 \001(\r\"-\n\010ListTy"
  "pe\022\010\n\004LIST\020\000\022\013\n\007LISTVER\020\001\022\n\n\006LISTUF\020\002\"7\n"
  "\rListDirectRsp\022\n\n\002ip\030\001 \002(\t\022\014\n\004port\030\002 \001(\r"
  "\022\014\n\004term\030\003 \001(\005\"2\n\021MigrateFinFileReq\022\014\n\004p"
  "ath\030\001 \002(\014\022\017\n\007version\030\002 \001(\014\"D\n\021MigrateFin"
  "FileRsp\022\017\n\007filekey\030\001 \001(\014\022\014\n\004uuid\030\002 \001(\014\022\020"
  "\n\010filetype\030\003 \001(\r\"5\n\023MigrateUnFinFileReq\022"
  "\014\n\004path\030\001 \002(\014\022\020\n\010uploadid\030\002 \001(\014\"\025\n\023Migra"
  "teUnFinFileRsp\"G\n\rSetMigrateReq\022\014\n\004path\030"
  "\001 \001(\014\022(\n\006status\030\002 \001(\0162\030.ClientCos.Migrat"
  "eStatus\"\017\n\rSetMigrateRsp\".\n\020DelNoHashFil"
  "eReq\022\014\n\004path\030\001 \002(\014\022\014\n\004uuid\030\002 \001(\014\"\022\n\020DelN"
  "oHashFileRsp*J\n\rMigrateStatus\022\023\n\017Migrate"
  "_Unknown\020\000\022\023\n\017Migrate_started\020\001\022\017\n\013Migra"
  "te_fin\020\002*X\n\016CASRestoreTier\022\020\n\014Tier_Unkno"
  "wn\020\000\022\r\n\tTier_Bulk\020\001\022\022\n\016Tier_Expedited\020\002\022"
  "\021\n\rTier_Standard\020\003*\233\001\n\006Action\022\013\n\007INVALID"
  "\020\000\022\016\n\nExpiration\020\001\022\016\n\nTransition\020\002\022\"\n\036Ab"
  "ortIncompleteMultipartUpload\020\003\022\037\n\033Noncur"
  "rentVersionExpiration\020\004\022\037\n\033NoncurrentVer"
  "sionTransition\020\005*<\n\tAuthority\022\013\n\007Invalid"
  "\020\000\022\r\n\tWRPrivate\020\001\022\023\n\017WPrivateRPublic\020\002*\204"
  "\002\n\017ReservedAttrKey\022\016\n\ninvalidkey\020\000\022\025\n\021ou"
  "tsidesourcehost\020\001\022\013\n\007preview\020\002\022\016\n\nbrower"
  "exec\020\003\022\021\n\rcustom404flag\020\004\022\021\n\rcustom404pa"
  "ge\020\005\022\021\n\rcustom403flag\020\006\022\021\n\rcustom403page"
  "\020\007\022\021\n\rindexpageflag\020\010\022\014\n\010file_md5\020\t\022\r\n\tc"
  "ors_flag\020\n\022\026\n\022outsidesource_flag\020\013\022\031\n\025ou"
  "tsidesourcehost_bak\020\014*F\n\005NSlot\022\020\n\014TYPE_I"
  "NVALID\020\000\022\020\n\014TYPE_DEFAULT\020\001\022\013\n\007TYPE_32\020\002\022"
  "\014\n\010TYPE_256\020\003*>\n\007SseType\022\017\n\013SSE_DEFAULT\020"
  "\000\022\n\n\006SSE_S3\020\001\022\013\n\007SSE_KMS\020\002\022\t\n\005SSE_C\020\003*2\n"
  "\007CamAuth\022\t\n\005NoUse\020\000\022\r\n\tIsCamAuth\020\001\022\r\n\tNo"
  "CamAuth\020\002:\?\n\016CosReqMsg_body\022\021.ClientCos."
  "AppMsg\030d \001(\0132\024.ClientCos.CosReqMsg:\?\n\016Co"
  "sRspMsg_body\022\021.ClientCos.AppMsg\030e \001(\0132\024."
  "ClientCos.CosRspMsg"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cosv4_5fclient_2eproto_deps[1] = {
  &::descriptor_table_cos_5fcomm_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cosv4_5fclient_2eproto_sccs[144] = {
  &scc_info_AclInfo_cosv4_5fclient_2eproto.base,
  &scc_info_AppAttr_cosv4_5fclient_2eproto.base,
  &scc_info_AppAttrModifyReq_cosv4_5fclient_2eproto.base,
  &scc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto.base,
  &scc_info_AppAttrQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_AppMsg_cosv4_5fclient_2eproto.base,
  &scc_info_AuthInfo_cosv4_5fclient_2eproto.base,
  &scc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto.base,
  &scc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto.base,
  &scc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_BucketCreateReq_cosv4_5fclient_2eproto.base,
  &scc_info_BucketCreateRsp_cosv4_5fclient_2eproto.base,
  &scc_info_COSTransToCASReq_cosv4_5fclient_2eproto.base,
  &scc_info_COSTransToCASRsp_cosv4_5fclient_2eproto.base,
  &scc_info_CamAtuhItem_cosv4_5fclient_2eproto.base,
  &scc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto.base,
  &scc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto.base,
  &scc_info_CasInfo_cosv4_5fclient_2eproto.base,
  &scc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto.base,
  &scc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
  &scc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto.base,
  &scc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto.base,
  &scc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto.base,
  &scc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto.base,
  &scc_info_CgiArgs_cosv4_5fclient_2eproto.base,
  &scc_info_CgiParams_cosv4_5fclient_2eproto.base,
  &scc_info_CheckObjAclReq_cosv4_5fclient_2eproto.base,
  &scc_info_CheckObjAclRsp_cosv4_5fclient_2eproto.base,
  &scc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto.base,
  &scc_info_CorsRule_cosv4_5fclient_2eproto.base,
  &scc_info_CosAppMsg_cosv4_5fclient_2eproto.base,
  &scc_info_CosReqMsg_cosv4_5fclient_2eproto.base,
  &scc_info_CosRspMsg_cosv4_5fclient_2eproto.base,
  &scc_info_CustomHeader_cosv4_5fclient_2eproto.base,
  &scc_info_DelExpireFileReq_cosv4_5fclient_2eproto.base,
  &scc_info_DelExpireFileRsp_cosv4_5fclient_2eproto.base,
  &scc_info_DelNoHashFileReq_cosv4_5fclient_2eproto.base,
  &scc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto.base,
  &scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base,
  &scc_info_DeleteReq_cosv4_5fclient_2eproto.base,
  &scc_info_DeleteRsp_cosv4_5fclient_2eproto.base,
  &scc_info_DirCreateReq_cosv4_5fclient_2eproto.base,
  &scc_info_DirCreateRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ErrorCodeReturned_cosv4_5fclient_2eproto.base,
  &scc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto.base,
  &scc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto.base,
  &scc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ExtraAttr_cosv4_5fclient_2eproto.base,
  &scc_info_FileBatchDelReq_cosv4_5fclient_2eproto.base,
  &scc_info_FileBatchDelRsp_cosv4_5fclient_2eproto.base,
  &scc_info_FileDelReq_cosv4_5fclient_2eproto.base,
  &scc_info_FileDelRsp_cosv4_5fclient_2eproto.base,
  &scc_info_FileDelState_cosv4_5fclient_2eproto.base,
  &scc_info_FileDownToCASReq_cosv4_5fclient_2eproto.base,
  &scc_info_FileDownToCASRsp_cosv4_5fclient_2eproto.base,
  &scc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto.base,
  &scc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_GetBucketLockReq_cosv4_5fclient_2eproto.base,
  &scc_info_GetBucketLockRsp_cosv4_5fclient_2eproto.base,
  &scc_info_GetBucketUinReq_cosv4_5fclient_2eproto.base,
  &scc_info_GetBucketUinRsp_cosv4_5fclient_2eproto.base,
  &scc_info_GetObjAclReq_cosv4_5fclient_2eproto.base,
  &scc_info_GetObjAclRsp_cosv4_5fclient_2eproto.base,
  &scc_info_GetObjectExtend_cosv4_5fclient_2eproto.base,
  &scc_info_KeyPair_cosv4_5fclient_2eproto.base,
  &scc_info_LFAttr_cosv4_5fclient_2eproto.base,
  &scc_info_ListDirectReq_cosv4_5fclient_2eproto.base,
  &scc_info_ListDirectRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ListMutiobjReq_cosv4_5fclient_2eproto.base,
  &scc_info_ListMutiobjRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ListObjVerReq_cosv4_5fclient_2eproto.base,
  &scc_info_ListObjVerRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ListReq_cosv4_5fclient_2eproto.base,
  &scc_info_ListRsp_cosv4_5fclient_2eproto.base,
  &scc_info_LockInfo_cosv4_5fclient_2eproto.base,
  &scc_info_MigrateFinFileReq_cosv4_5fclient_2eproto.base,
  &scc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto.base,
  &scc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto.base,
  &scc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto.base,
  &scc_info_Migrateinfo_cosv4_5fclient_2eproto.base,
  &scc_info_MutiObjItem_cosv4_5fclient_2eproto.base,
  &scc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto.base,
  &scc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base,
  &scc_info_ObjItem_cosv4_5fclient_2eproto.base,
  &scc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto.base,
  &scc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto.base,
  &scc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ObjTag_cosv4_5fclient_2eproto.base,
  &scc_info_Opinfo_cosv4_5fclient_2eproto.base,
  &scc_info_OwnerInfo_cosv4_5fclient_2eproto.base,
  &scc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto.base,
  &scc_info_PrefixReturned_cosv4_5fclient_2eproto.base,
  &scc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto.base,
  &scc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto.base,
  &scc_info_ReservedAttr_cosv4_5fclient_2eproto.base,
  &scc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto.base,
  &scc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto.base,
  &scc_info_RoutingRule_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketLockReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketLockRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketUinReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketUinRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetCamAttrReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetCamAttrRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetMigrateReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetMigrateRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SetObjAclReq_cosv4_5fclient_2eproto.base,
  &scc_info_SetObjAclRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto.base,
  &scc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto.base,
  &scc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto.base,
  &scc_info_SseInfo_cosv4_5fclient_2eproto.base,
  &scc_info_StorageTypeAttr_cosv4_5fclient_2eproto.base,
  &scc_info_Tag_cosv4_5fclient_2eproto.base,
  &scc_info_TrsfArgs_cosv4_5fclient_2eproto.base,
  &scc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto.base,
  &scc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto.base,
  &scc_info_UploadAttr_cosv4_5fclient_2eproto.base,
  &scc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto.base,
  &scc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto.base,
  &scc_info_WebsiteInfo_cosv4_5fclient_2eproto.base,
  &scc_info_delObj_cosv4_5fclient_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cosv4_5fclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cosv4_5fclient_2eproto = {
  false, false, descriptor_table_protodef_cosv4_5fclient_2eproto, "cosv4_client.proto", 26139,
  &descriptor_table_cosv4_5fclient_2eproto_once, descriptor_table_cosv4_5fclient_2eproto_sccs, descriptor_table_cosv4_5fclient_2eproto_deps, 144, 1,
  schemas, file_default_instances, TableStruct_cosv4_5fclient_2eproto::offsets,
  file_level_metadata_cosv4_5fclient_2eproto, 144, file_level_enum_descriptors_cosv4_5fclient_2eproto, file_level_service_descriptors_cosv4_5fclient_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_cosv4_5fclient_2eproto(&descriptor_table_cosv4_5fclient_2eproto);
namespace ClientCos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AppMsg_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[0];
}
bool AppMsg_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AppMsg_Type AppMsg::CosReqMsg;
constexpr AppMsg_Type AppMsg::CosRspMsg;
constexpr AppMsg_Type AppMsg::Type_MIN;
constexpr AppMsg_Type AppMsg::Type_MAX;
constexpr int AppMsg::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CosReqMsg_SubType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[1];
}
bool CosReqMsg_SubType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 90:
    case 91:
    case 92:
    case 93:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CosReqMsg_SubType CosReqMsg::Invalid;
constexpr CosReqMsg_SubType CosReqMsg::BucketCreateReq;
constexpr CosReqMsg_SubType CosReqMsg::BucketAttrModifyReq;
constexpr CosReqMsg_SubType CosReqMsg::BucketAttrQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::DirCreateReq;
constexpr CosReqMsg_SubType CosReqMsg::ObjAttrQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::ObjAttrModifyReq;
constexpr CosReqMsg_SubType CosReqMsg::DeleteReq;
constexpr CosReqMsg_SubType CosReqMsg::ListReq;
constexpr CosReqMsg_SubType CosReqMsg::AppAttrQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::AppAttrModifyReq;
constexpr CosReqMsg_SubType CosReqMsg::PreviewFileAttrQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::ObjModTimeStampReq;
constexpr CosReqMsg_SubType CosReqMsg::ListMutiobjReq;
constexpr CosReqMsg_SubType CosReqMsg::UnfinObjAttrModifyReq;
constexpr CosReqMsg_SubType CosReqMsg::FileBatchDelReq;
constexpr CosReqMsg_SubType CosReqMsg::ListObjVerReq;
constexpr CosReqMsg_SubType CosReqMsg::DelExpireFileReq;
constexpr CosReqMsg_SubType CosReqMsg::FileDelReq;
constexpr CosReqMsg_SubType CosReqMsg::SpObjAttrModifyReq;
constexpr CosReqMsg_SubType CosReqMsg::UploadDelmarkerReq;
constexpr CosReqMsg_SubType CosReqMsg::ExpireFileDelVerReq;
constexpr CosReqMsg_SubType CosReqMsg::ExpireFileDelNoVerReq;
constexpr CosReqMsg_SubType CosReqMsg::SetBucketPriAttrReq;
constexpr CosReqMsg_SubType CosReqMsg::FileDownToCASReq;
constexpr CosReqMsg_SubType CosReqMsg::CasObjAttrModifyReq;
constexpr CosReqMsg_SubType CosReqMsg::CasFileRecoverDelReq;
constexpr CosReqMsg_SubType CosReqMsg::CasObjRestoreErrReq;
constexpr CosReqMsg_SubType CosReqMsg::SpObjAttrQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::ObjModStorageTypeReq;
constexpr CosReqMsg_SubType CosReqMsg::SetBucketWebsiteInfoReq;
constexpr CosReqMsg_SubType CosReqMsg::SetCamAttrReq;
constexpr CosReqMsg_SubType CosReqMsg::BucketCamAuthQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::AppCamAuthQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::FileUnfinishAttrQueryReq;
constexpr CosReqMsg_SubType CosReqMsg::ReduceLifecycleReq;
constexpr CosReqMsg_SubType CosReqMsg::RetrieveLifecycleReq;
constexpr CosReqMsg_SubType CosReqMsg::SetObjAclReq;
constexpr CosReqMsg_SubType CosReqMsg::GetObjAclReq;
constexpr CosReqMsg_SubType CosReqMsg::SetBucketUinReq;
constexpr CosReqMsg_SubType CosReqMsg::GetBucketUinReq;
constexpr CosReqMsg_SubType CosReqMsg::ListDirectReq;
constexpr CosReqMsg_SubType CosReqMsg::CheckObjAclReq;
constexpr CosReqMsg_SubType CosReqMsg::CasObjRestoreFinReq;
constexpr CosReqMsg_SubType CosReqMsg::SetBucketLockReq;
constexpr CosReqMsg_SubType CosReqMsg::GetBucketLockReq;
constexpr CosReqMsg_SubType CosReqMsg::SetBucketInventoryReq;
constexpr CosReqMsg_SubType CosReqMsg::GetBucketInventoryReq;
constexpr CosReqMsg_SubType CosReqMsg::COSTransToCASReq;
constexpr CosReqMsg_SubType CosReqMsg::SetMigrateReq;
constexpr CosReqMsg_SubType CosReqMsg::DelNoHashFileReq;
constexpr CosReqMsg_SubType CosReqMsg::MigrateFinFileReq;
constexpr CosReqMsg_SubType CosReqMsg::MigrateUnFinFileReq;
constexpr CosReqMsg_SubType CosReqMsg::SubType_MIN;
constexpr CosReqMsg_SubType CosReqMsg::SubType_MAX;
constexpr int CosReqMsg::SubType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CosRspMsg_SubType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[2];
}
bool CosRspMsg_SubType_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 90:
    case 91:
    case 92:
    case 93:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CosRspMsg_SubType CosRspMsg::Invalid;
constexpr CosRspMsg_SubType CosRspMsg::BucketCreateRsp;
constexpr CosRspMsg_SubType CosRspMsg::BucketAttrModifyRsp;
constexpr CosRspMsg_SubType CosRspMsg::BucketAttrQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::DirCreateRsp;
constexpr CosRspMsg_SubType CosRspMsg::ObjAttrQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::ObjAttrModifyRsp;
constexpr CosRspMsg_SubType CosRspMsg::DeleteRsp;
constexpr CosRspMsg_SubType CosRspMsg::ListRsp;
constexpr CosRspMsg_SubType CosRspMsg::AppAttrQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::AppAttrModifyRsp;
constexpr CosRspMsg_SubType CosRspMsg::PreviewFileAttrQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::ObjModTimeStampRsp;
constexpr CosRspMsg_SubType CosRspMsg::ListMutiobjRsp;
constexpr CosRspMsg_SubType CosRspMsg::UnfinObjAttrModifyRsp;
constexpr CosRspMsg_SubType CosRspMsg::FileBatchDelRsp;
constexpr CosRspMsg_SubType CosRspMsg::ListObjVerRsp;
constexpr CosRspMsg_SubType CosRspMsg::DelExpireFileRsp;
constexpr CosRspMsg_SubType CosRspMsg::FileDelRsp;
constexpr CosRspMsg_SubType CosRspMsg::ObjAttrModifyRsp_sp;
constexpr CosRspMsg_SubType CosRspMsg::UploadDelmarkerRsp;
constexpr CosRspMsg_SubType CosRspMsg::ExpireFileDelVerRsp;
constexpr CosRspMsg_SubType CosRspMsg::ExpireFileDelNoverRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetBucketPriAttrRsp;
constexpr CosRspMsg_SubType CosRspMsg::FileDownToCASRsp;
constexpr CosRspMsg_SubType CosRspMsg::CasObjAttrModifyRsp;
constexpr CosRspMsg_SubType CosRspMsg::CasFileRecoverDelRsp;
constexpr CosRspMsg_SubType CosRspMsg::CasObjRestoreErrRsp;
constexpr CosRspMsg_SubType CosRspMsg::SpObjAttrQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::ObjModStorageTypeRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetBucketWebsiteInfoRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetCamAttrRsp;
constexpr CosRspMsg_SubType CosRspMsg::BucketCamAuthQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::AppCamAuthQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::FileUnfinishAttrQueryRsp;
constexpr CosRspMsg_SubType CosRspMsg::ReduceLifecycleRsp;
constexpr CosRspMsg_SubType CosRspMsg::RetrieveLifecycleRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetObjAclRsp;
constexpr CosRspMsg_SubType CosRspMsg::GetObjAclRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetBucketUinRsp;
constexpr CosRspMsg_SubType CosRspMsg::GetBucketUinRsp;
constexpr CosRspMsg_SubType CosRspMsg::ListDirectRsp;
constexpr CosRspMsg_SubType CosRspMsg::CheckObjAclRsp;
constexpr CosRspMsg_SubType CosRspMsg::CasObjRestoreFinRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetBucketLockRsp;
constexpr CosRspMsg_SubType CosRspMsg::GetBucketLockRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetBucketInventoryRsp;
constexpr CosRspMsg_SubType CosRspMsg::GetBucketInventoryRsp;
constexpr CosRspMsg_SubType CosRspMsg::COSTransToCASRsp;
constexpr CosRspMsg_SubType CosRspMsg::SetMigrateRsp;
constexpr CosRspMsg_SubType CosRspMsg::DelNoHashFileRsp;
constexpr CosRspMsg_SubType CosRspMsg::MigrateFinFileRsp;
constexpr CosRspMsg_SubType CosRspMsg::MigrateUnFinFileRsp;
constexpr CosRspMsg_SubType CosRspMsg::SubType_MIN;
constexpr CosRspMsg_SubType CosRspMsg::SubType_MAX;
constexpr int CosRspMsg::SubType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ListDirectReq_ListType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[3];
}
bool ListDirectReq_ListType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ListDirectReq_ListType ListDirectReq::LIST;
constexpr ListDirectReq_ListType ListDirectReq::LISTVER;
constexpr ListDirectReq_ListType ListDirectReq::LISTUF;
constexpr ListDirectReq_ListType ListDirectReq::ListType_MIN;
constexpr ListDirectReq_ListType ListDirectReq::ListType_MAX;
constexpr int ListDirectReq::ListType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MigrateStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[4];
}
bool MigrateStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CASRestoreTier_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[5];
}
bool CASRestoreTier_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Action_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[6];
}
bool Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Authority_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[7];
}
bool Authority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ReservedAttrKey_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[8];
}
bool ReservedAttrKey_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NSlot_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[9];
}
bool NSlot_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SseType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[10];
}
bool SseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CamAuth_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosv4_5fclient_2eproto);
  return file_level_enum_descriptors_cosv4_5fclient_2eproto[11];
}
bool CamAuth_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CosAppMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<CosAppMsg>()._has_bits_);
  static void set_has_seq(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ClientCos::AppMsg& body(const CosAppMsg* msg);
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ClientCos::AppMsg&
CosAppMsg::_Internal::body(const CosAppMsg* msg) {
  return *msg->body_;
}
CosAppMsg::CosAppMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CosAppMsg)
}
CosAppMsg::CosAppMsg(const CosAppMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_body()) {
    body_ = new ::ClientCos::AppMsg(*from.body_);
  } else {
    body_ = nullptr;
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.CosAppMsg)
}

void CosAppMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CosAppMsg_cosv4_5fclient_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&body_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&seq_) -
      reinterpret_cast<char*>(&body_)) + sizeof(seq_));
}

CosAppMsg::~CosAppMsg() {
  // @@protoc_insertion_point(destructor:ClientCos.CosAppMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CosAppMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete body_;
}

void CosAppMsg::ArenaDtor(void* object) {
  CosAppMsg* _this = reinterpret_cast< CosAppMsg* >(object);
  (void)_this;
}
void CosAppMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CosAppMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CosAppMsg& CosAppMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CosAppMsg_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CosAppMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CosAppMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(body_ != nullptr);
    body_->Clear();
  }
  seq_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CosAppMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_seq(&has_bits);
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ClientCos.AppMsg body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CosAppMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CosAppMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 seq = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_seq(), target);
  }

  // required .ClientCos.AppMsg body = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CosAppMsg)
  return target;
}

size_t CosAppMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.CosAppMsg)
  size_t total_size = 0;

  if (_internal_has_body()) {
    // required .ClientCos.AppMsg body = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);
  }

  if (_internal_has_seq()) {
    // required uint32 seq = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_seq());
  }

  return total_size;
}
size_t CosAppMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CosAppMsg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ClientCos.AppMsg body = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);

    // required uint32 seq = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_seq());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosAppMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CosAppMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CosAppMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CosAppMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CosAppMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CosAppMsg)
    MergeFrom(*source);
  }
}

void CosAppMsg::MergeFrom(const CosAppMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CosAppMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_body()->::ClientCos::AppMsg::MergeFrom(from._internal_body());
    }
    if (cached_has_bits & 0x00000002u) {
      seq_ = from.seq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CosAppMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CosAppMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosAppMsg::CopyFrom(const CosAppMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CosAppMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosAppMsg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_body()) {
    if (!body_->IsInitialized()) return false;
  }
  return true;
}

void CosAppMsg::InternalSwap(CosAppMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CosAppMsg, seq_)
      + sizeof(CosAppMsg::seq_)
      - PROTOBUF_FIELD_OFFSET(CosAppMsg, body_)>(
          reinterpret_cast<char*>(&body_),
          reinterpret_cast<char*>(&other->body_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CosAppMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<AppMsg>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AppMsg::AppMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  _extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppMsg)
}
AppMsg::AppMsg(const AppMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppMsg)
}

void AppMsg::SharedCtor() {
  type_ = 1;
}

AppMsg::~AppMsg() {
  // @@protoc_insertion_point(destructor:ClientCos.AppMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AppMsg::ArenaDtor(void* object) {
  AppMsg* _this = reinterpret_cast< AppMsg* >(object);
  (void)_this;
}
void AppMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppMsg& AppMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppMsg_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .ClientCos.AppMsg.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::AppMsg_Type_IsValid(val))) {
            _internal_set_type(static_cast<::ClientCos::AppMsg_Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
      if ((800u <= tag && tag < 80008u)) {
        ptr = _extensions_.ParseField(tag, ptr,
            internal_default_instance(), &_internal_metadata_, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ClientCos.AppMsg.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // Extension range [100, 10001)
  target = _extensions_._InternalSerialize(
      100, 10001, target, stream);

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppMsg)
  return target;
}

size_t AppMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppMsg)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  // required .ClientCos.AppMsg.Type type = 1;
  if (_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AppMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppMsg)
    MergeFrom(*source);
  }
}

void AppMsg::MergeFrom(const AppMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type()) {
    _internal_set_type(from._internal_type());
  }
}

void AppMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppMsg::CopyFrom(const AppMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppMsg::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void AppMsg::InternalSwap(AppMsg* other) {
  using std::swap;
  _extensions_.Swap(&other->_extensions_);
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CosReqMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<CosReqMsg>()._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cgi_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cgi_params(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sub_type(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::ClientCos::BucketCreateReq& bucketcreatereq_body(const CosReqMsg* msg);
  static void set_has_bucketcreatereq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::ClientCos::BucketAttrModifyReq& bucketattrmodifyreq_body(const CosReqMsg* msg);
  static void set_has_bucketattrmodifyreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ClientCos::BucketAttrQueryReq& bucketattrqueryreq_body(const CosReqMsg* msg);
  static void set_has_bucketattrqueryreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ClientCos::DirCreateReq& dircreatereq_body(const CosReqMsg* msg);
  static void set_has_dircreatereq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::ClientCos::ObjAttrQueryReq& objattrqueryreq_body(const CosReqMsg* msg);
  static void set_has_objattrqueryreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::ClientCos::ObjAttrModifyReq& objattrmodifyreq_body(const CosReqMsg* msg);
  static void set_has_objattrmodifyreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::ClientCos::DeleteReq& deletereq_body(const CosReqMsg* msg);
  static void set_has_deletereq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::ClientCos::ListReq& listreq_body(const CosReqMsg* msg);
  static void set_has_listreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::ClientCos::AppAttrQueryReq& appattrqueryreq_body(const CosReqMsg* msg);
  static void set_has_appattrqueryreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::ClientCos::AppAttrModifyReq& appattrmodifyreq_body(const CosReqMsg* msg);
  static void set_has_appattrmodifyreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::ClientCos::PreviewFileAttrQueryReq& previewfileattrqueryreq_body(const CosReqMsg* msg);
  static void set_has_previewfileattrqueryreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::ClientCos::ObjModTimeStampReq& objmodtimestampreq_body(const CosReqMsg* msg);
  static void set_has_objmodtimestampreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::ClientCos::ListMutiobjReq& listmutiobjreq_body(const CosReqMsg* msg);
  static void set_has_listmutiobjreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::ClientCos::UnfinObjAttrModifyReq& unfinobjattrmodifyreq_body(const CosReqMsg* msg);
  static void set_has_unfinobjattrmodifyreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::ClientCos::FileBatchDelReq& filebatchdelreq_body(const CosReqMsg* msg);
  static void set_has_filebatchdelreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::ClientCos::ListObjVerReq& listobjverreq_body(const CosReqMsg* msg);
  static void set_has_listobjverreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::ClientCos::DelExpireFileReq& delexpirefilereq_body(const CosReqMsg* msg);
  static void set_has_delexpirefilereq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::ClientCos::FileDelReq& filedelreq_body(const CosReqMsg* msg);
  static void set_has_filedelreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::ClientCos::SpObjAttrModifyReq& spobjattrmodifyreq_body(const CosReqMsg* msg);
  static void set_has_spobjattrmodifyreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::ClientCos::UploadDelmarkerReq& uploaddelmarkerreq_body(const CosReqMsg* msg);
  static void set_has_uploaddelmarkerreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::ClientCos::ExpireFileDelVerReq& expirefiledelverreq_body(const CosReqMsg* msg);
  static void set_has_expirefiledelverreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::ClientCos::ExpireFileDelNoVerReq& expirefiledelnoverreq_body(const CosReqMsg* msg);
  static void set_has_expirefiledelnoverreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::ClientCos::SetBucketPriAttrReq& setbucketpriattrreq_body(const CosReqMsg* msg);
  static void set_has_setbucketpriattrreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::ClientCos::FileDownToCASReq& filedowntocasreq_body(const CosReqMsg* msg);
  static void set_has_filedowntocasreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::ClientCos::CasObjAttrModifyReq& casobjattrmodifyreq_body(const CosReqMsg* msg);
  static void set_has_casobjattrmodifyreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::ClientCos::CasFileRecoverDelReq& casfilerecoverdelreq_body(const CosReqMsg* msg);
  static void set_has_casfilerecoverdelreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::ClientCos::CasObjRestoreErrReq& casobjrestoreerrreq_body(const CosReqMsg* msg);
  static void set_has_casobjrestoreerrreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::ClientCos::SpObjAttrQueryReq& spobjattrqueryreq_body(const CosReqMsg* msg);
  static void set_has_spobjattrqueryreq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::ClientCos::ObjModStorageTypeReq& objmodstoragetypereq_body(const CosReqMsg* msg);
  static void set_has_objmodstoragetypereq_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::ClientCos::SetBucketWebsiteInfoReq& setbucketwebsiteinforeq_body(const CosReqMsg* msg);
  static void set_has_setbucketwebsiteinforeq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::ClientCos::SetCamAttrReq& setcamattrreq_body(const CosReqMsg* msg);
  static void set_has_setcamattrreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::ClientCos::BucketCamAuthQueryReq& bucketcamauthqueryreq_body(const CosReqMsg* msg);
  static void set_has_bucketcamauthqueryreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::ClientCos::AppCamAuthQueryReq& appcamauthqueryreq_body(const CosReqMsg* msg);
  static void set_has_appcamauthqueryreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::ClientCos::FileUnfinishAttrQueryReq& fileunfinishattrqueryreq_body(const CosReqMsg* msg);
  static void set_has_fileunfinishattrqueryreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::ClientCos::ReduceLifecycleReq& reducelifecyclereq_body(const CosReqMsg* msg);
  static void set_has_reducelifecyclereq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::ClientCos::RetrieveLifecycleReq& retrievelifecyclereq_body(const CosReqMsg* msg);
  static void set_has_retrievelifecyclereq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::ClientCos::SetObjAclReq& setobjaclreq_body(const CosReqMsg* msg);
  static void set_has_setobjaclreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::ClientCos::GetObjAclReq& getobjaclreq_body(const CosReqMsg* msg);
  static void set_has_getobjaclreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::ClientCos::SetBucketUinReq& setbucketuinreq_body(const CosReqMsg* msg);
  static void set_has_setbucketuinreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::ClientCos::GetBucketUinReq& getbucketuinreq_body(const CosReqMsg* msg);
  static void set_has_getbucketuinreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::ClientCos::ListDirectReq& listdirectreq_body(const CosReqMsg* msg);
  static void set_has_listdirectreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::ClientCos::CheckObjAclReq& checkobjaclreq_body(const CosReqMsg* msg);
  static void set_has_checkobjaclreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::ClientCos::CasObjRestoreFinReq& casobjrestorefinreq_body(const CosReqMsg* msg);
  static void set_has_casobjrestorefinreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::ClientCos::SetBucketLockReq& setbucketlockreq_body(const CosReqMsg* msg);
  static void set_has_setbucketlockreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::ClientCos::GetBucketLockReq& getbucketlockreq_body(const CosReqMsg* msg);
  static void set_has_getbucketlockreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::ClientCos::SetBucketInventoryReq& setbucketinventoryreq_body(const CosReqMsg* msg);
  static void set_has_setbucketinventoryreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::ClientCos::GetBucketInventoryReq& getbucketinventoryreq_body(const CosReqMsg* msg);
  static void set_has_getbucketinventoryreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::ClientCos::COSTransToCASReq& costranstocasreq_body(const CosReqMsg* msg);
  static void set_has_costranstocasreq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::ClientCos::SetMigrateReq& setmigratereq_body(const CosReqMsg* msg);
  static void set_has_setmigratereq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::ClientCos::DelNoHashFileReq& delnohashfilereq_body(const CosReqMsg* msg);
  static void set_has_delnohashfilereq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::ClientCos::MigrateFinFileReq& migratefinfilereq_body(const CosReqMsg* msg);
  static void set_has_migratefinfilereq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::ClientCos::MigrateUnFinFileReq& migrateunfinfilereq_body(const CosReqMsg* msg);
  static void set_has_migrateunfinfilereq_body(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[1] & 0x00800000) ^ 0x00800000) != 0;
  }
};

const ::ClientCos::BucketCreateReq&
CosReqMsg::_Internal::bucketcreatereq_body(const CosReqMsg* msg) {
  return *msg->bucketcreatereq_body_;
}
const ::ClientCos::BucketAttrModifyReq&
CosReqMsg::_Internal::bucketattrmodifyreq_body(const CosReqMsg* msg) {
  return *msg->bucketattrmodifyreq_body_;
}
const ::ClientCos::BucketAttrQueryReq&
CosReqMsg::_Internal::bucketattrqueryreq_body(const CosReqMsg* msg) {
  return *msg->bucketattrqueryreq_body_;
}
const ::ClientCos::DirCreateReq&
CosReqMsg::_Internal::dircreatereq_body(const CosReqMsg* msg) {
  return *msg->dircreatereq_body_;
}
const ::ClientCos::ObjAttrQueryReq&
CosReqMsg::_Internal::objattrqueryreq_body(const CosReqMsg* msg) {
  return *msg->objattrqueryreq_body_;
}
const ::ClientCos::ObjAttrModifyReq&
CosReqMsg::_Internal::objattrmodifyreq_body(const CosReqMsg* msg) {
  return *msg->objattrmodifyreq_body_;
}
const ::ClientCos::DeleteReq&
CosReqMsg::_Internal::deletereq_body(const CosReqMsg* msg) {
  return *msg->deletereq_body_;
}
const ::ClientCos::ListReq&
CosReqMsg::_Internal::listreq_body(const CosReqMsg* msg) {
  return *msg->listreq_body_;
}
const ::ClientCos::AppAttrQueryReq&
CosReqMsg::_Internal::appattrqueryreq_body(const CosReqMsg* msg) {
  return *msg->appattrqueryreq_body_;
}
const ::ClientCos::AppAttrModifyReq&
CosReqMsg::_Internal::appattrmodifyreq_body(const CosReqMsg* msg) {
  return *msg->appattrmodifyreq_body_;
}
const ::ClientCos::PreviewFileAttrQueryReq&
CosReqMsg::_Internal::previewfileattrqueryreq_body(const CosReqMsg* msg) {
  return *msg->previewfileattrqueryreq_body_;
}
const ::ClientCos::ObjModTimeStampReq&
CosReqMsg::_Internal::objmodtimestampreq_body(const CosReqMsg* msg) {
  return *msg->objmodtimestampreq_body_;
}
const ::ClientCos::ListMutiobjReq&
CosReqMsg::_Internal::listmutiobjreq_body(const CosReqMsg* msg) {
  return *msg->listmutiobjreq_body_;
}
const ::ClientCos::UnfinObjAttrModifyReq&
CosReqMsg::_Internal::unfinobjattrmodifyreq_body(const CosReqMsg* msg) {
  return *msg->unfinobjattrmodifyreq_body_;
}
const ::ClientCos::FileBatchDelReq&
CosReqMsg::_Internal::filebatchdelreq_body(const CosReqMsg* msg) {
  return *msg->filebatchdelreq_body_;
}
const ::ClientCos::ListObjVerReq&
CosReqMsg::_Internal::listobjverreq_body(const CosReqMsg* msg) {
  return *msg->listobjverreq_body_;
}
const ::ClientCos::DelExpireFileReq&
CosReqMsg::_Internal::delexpirefilereq_body(const CosReqMsg* msg) {
  return *msg->delexpirefilereq_body_;
}
const ::ClientCos::FileDelReq&
CosReqMsg::_Internal::filedelreq_body(const CosReqMsg* msg) {
  return *msg->filedelreq_body_;
}
const ::ClientCos::SpObjAttrModifyReq&
CosReqMsg::_Internal::spobjattrmodifyreq_body(const CosReqMsg* msg) {
  return *msg->spobjattrmodifyreq_body_;
}
const ::ClientCos::UploadDelmarkerReq&
CosReqMsg::_Internal::uploaddelmarkerreq_body(const CosReqMsg* msg) {
  return *msg->uploaddelmarkerreq_body_;
}
const ::ClientCos::ExpireFileDelVerReq&
CosReqMsg::_Internal::expirefiledelverreq_body(const CosReqMsg* msg) {
  return *msg->expirefiledelverreq_body_;
}
const ::ClientCos::ExpireFileDelNoVerReq&
CosReqMsg::_Internal::expirefiledelnoverreq_body(const CosReqMsg* msg) {
  return *msg->expirefiledelnoverreq_body_;
}
const ::ClientCos::SetBucketPriAttrReq&
CosReqMsg::_Internal::setbucketpriattrreq_body(const CosReqMsg* msg) {
  return *msg->setbucketpriattrreq_body_;
}
const ::ClientCos::FileDownToCASReq&
CosReqMsg::_Internal::filedowntocasreq_body(const CosReqMsg* msg) {
  return *msg->filedowntocasreq_body_;
}
const ::ClientCos::CasObjAttrModifyReq&
CosReqMsg::_Internal::casobjattrmodifyreq_body(const CosReqMsg* msg) {
  return *msg->casobjattrmodifyreq_body_;
}
const ::ClientCos::CasFileRecoverDelReq&
CosReqMsg::_Internal::casfilerecoverdelreq_body(const CosReqMsg* msg) {
  return *msg->casfilerecoverdelreq_body_;
}
const ::ClientCos::CasObjRestoreErrReq&
CosReqMsg::_Internal::casobjrestoreerrreq_body(const CosReqMsg* msg) {
  return *msg->casobjrestoreerrreq_body_;
}
const ::ClientCos::SpObjAttrQueryReq&
CosReqMsg::_Internal::spobjattrqueryreq_body(const CosReqMsg* msg) {
  return *msg->spobjattrqueryreq_body_;
}
const ::ClientCos::ObjModStorageTypeReq&
CosReqMsg::_Internal::objmodstoragetypereq_body(const CosReqMsg* msg) {
  return *msg->objmodstoragetypereq_body_;
}
const ::ClientCos::SetBucketWebsiteInfoReq&
CosReqMsg::_Internal::setbucketwebsiteinforeq_body(const CosReqMsg* msg) {
  return *msg->setbucketwebsiteinforeq_body_;
}
const ::ClientCos::SetCamAttrReq&
CosReqMsg::_Internal::setcamattrreq_body(const CosReqMsg* msg) {
  return *msg->setcamattrreq_body_;
}
const ::ClientCos::BucketCamAuthQueryReq&
CosReqMsg::_Internal::bucketcamauthqueryreq_body(const CosReqMsg* msg) {
  return *msg->bucketcamauthqueryreq_body_;
}
const ::ClientCos::AppCamAuthQueryReq&
CosReqMsg::_Internal::appcamauthqueryreq_body(const CosReqMsg* msg) {
  return *msg->appcamauthqueryreq_body_;
}
const ::ClientCos::FileUnfinishAttrQueryReq&
CosReqMsg::_Internal::fileunfinishattrqueryreq_body(const CosReqMsg* msg) {
  return *msg->fileunfinishattrqueryreq_body_;
}
const ::ClientCos::ReduceLifecycleReq&
CosReqMsg::_Internal::reducelifecyclereq_body(const CosReqMsg* msg) {
  return *msg->reducelifecyclereq_body_;
}
const ::ClientCos::RetrieveLifecycleReq&
CosReqMsg::_Internal::retrievelifecyclereq_body(const CosReqMsg* msg) {
  return *msg->retrievelifecyclereq_body_;
}
const ::ClientCos::SetObjAclReq&
CosReqMsg::_Internal::setobjaclreq_body(const CosReqMsg* msg) {
  return *msg->setobjaclreq_body_;
}
const ::ClientCos::GetObjAclReq&
CosReqMsg::_Internal::getobjaclreq_body(const CosReqMsg* msg) {
  return *msg->getobjaclreq_body_;
}
const ::ClientCos::SetBucketUinReq&
CosReqMsg::_Internal::setbucketuinreq_body(const CosReqMsg* msg) {
  return *msg->setbucketuinreq_body_;
}
const ::ClientCos::GetBucketUinReq&
CosReqMsg::_Internal::getbucketuinreq_body(const CosReqMsg* msg) {
  return *msg->getbucketuinreq_body_;
}
const ::ClientCos::ListDirectReq&
CosReqMsg::_Internal::listdirectreq_body(const CosReqMsg* msg) {
  return *msg->listdirectreq_body_;
}
const ::ClientCos::CheckObjAclReq&
CosReqMsg::_Internal::checkobjaclreq_body(const CosReqMsg* msg) {
  return *msg->checkobjaclreq_body_;
}
const ::ClientCos::CasObjRestoreFinReq&
CosReqMsg::_Internal::casobjrestorefinreq_body(const CosReqMsg* msg) {
  return *msg->casobjrestorefinreq_body_;
}
const ::ClientCos::SetBucketLockReq&
CosReqMsg::_Internal::setbucketlockreq_body(const CosReqMsg* msg) {
  return *msg->setbucketlockreq_body_;
}
const ::ClientCos::GetBucketLockReq&
CosReqMsg::_Internal::getbucketlockreq_body(const CosReqMsg* msg) {
  return *msg->getbucketlockreq_body_;
}
const ::ClientCos::SetBucketInventoryReq&
CosReqMsg::_Internal::setbucketinventoryreq_body(const CosReqMsg* msg) {
  return *msg->setbucketinventoryreq_body_;
}
const ::ClientCos::GetBucketInventoryReq&
CosReqMsg::_Internal::getbucketinventoryreq_body(const CosReqMsg* msg) {
  return *msg->getbucketinventoryreq_body_;
}
const ::ClientCos::COSTransToCASReq&
CosReqMsg::_Internal::costranstocasreq_body(const CosReqMsg* msg) {
  return *msg->costranstocasreq_body_;
}
const ::ClientCos::SetMigrateReq&
CosReqMsg::_Internal::setmigratereq_body(const CosReqMsg* msg) {
  return *msg->setmigratereq_body_;
}
const ::ClientCos::DelNoHashFileReq&
CosReqMsg::_Internal::delnohashfilereq_body(const CosReqMsg* msg) {
  return *msg->delnohashfilereq_body_;
}
const ::ClientCos::MigrateFinFileReq&
CosReqMsg::_Internal::migratefinfilereq_body(const CosReqMsg* msg) {
  return *msg->migratefinfilereq_body_;
}
const ::ClientCos::MigrateUnFinFileReq&
CosReqMsg::_Internal::migrateunfinfilereq_body(const CosReqMsg* msg) {
  return *msg->migrateunfinfilereq_body_;
}
CosReqMsg::CosReqMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CosReqMsg)
}
CosReqMsg::CosReqMsg(const CosReqMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_request_id()) {
    request_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_request_id(), 
      GetArena());
  }
  cgi_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cgi_attr()) {
    cgi_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cgi_attr(), 
      GetArena());
  }
  cgi_params_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cgi_params()) {
    cgi_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cgi_params(), 
      GetArena());
  }
  if (from._internal_has_bucketcreatereq_body()) {
    bucketcreatereq_body_ = new ::ClientCos::BucketCreateReq(*from.bucketcreatereq_body_);
  } else {
    bucketcreatereq_body_ = nullptr;
  }
  if (from._internal_has_bucketattrmodifyreq_body()) {
    bucketattrmodifyreq_body_ = new ::ClientCos::BucketAttrModifyReq(*from.bucketattrmodifyreq_body_);
  } else {
    bucketattrmodifyreq_body_ = nullptr;
  }
  if (from._internal_has_bucketattrqueryreq_body()) {
    bucketattrqueryreq_body_ = new ::ClientCos::BucketAttrQueryReq(*from.bucketattrqueryreq_body_);
  } else {
    bucketattrqueryreq_body_ = nullptr;
  }
  if (from._internal_has_dircreatereq_body()) {
    dircreatereq_body_ = new ::ClientCos::DirCreateReq(*from.dircreatereq_body_);
  } else {
    dircreatereq_body_ = nullptr;
  }
  if (from._internal_has_objattrqueryreq_body()) {
    objattrqueryreq_body_ = new ::ClientCos::ObjAttrQueryReq(*from.objattrqueryreq_body_);
  } else {
    objattrqueryreq_body_ = nullptr;
  }
  if (from._internal_has_objattrmodifyreq_body()) {
    objattrmodifyreq_body_ = new ::ClientCos::ObjAttrModifyReq(*from.objattrmodifyreq_body_);
  } else {
    objattrmodifyreq_body_ = nullptr;
  }
  if (from._internal_has_deletereq_body()) {
    deletereq_body_ = new ::ClientCos::DeleteReq(*from.deletereq_body_);
  } else {
    deletereq_body_ = nullptr;
  }
  if (from._internal_has_listreq_body()) {
    listreq_body_ = new ::ClientCos::ListReq(*from.listreq_body_);
  } else {
    listreq_body_ = nullptr;
  }
  if (from._internal_has_appattrqueryreq_body()) {
    appattrqueryreq_body_ = new ::ClientCos::AppAttrQueryReq(*from.appattrqueryreq_body_);
  } else {
    appattrqueryreq_body_ = nullptr;
  }
  if (from._internal_has_appattrmodifyreq_body()) {
    appattrmodifyreq_body_ = new ::ClientCos::AppAttrModifyReq(*from.appattrmodifyreq_body_);
  } else {
    appattrmodifyreq_body_ = nullptr;
  }
  if (from._internal_has_previewfileattrqueryreq_body()) {
    previewfileattrqueryreq_body_ = new ::ClientCos::PreviewFileAttrQueryReq(*from.previewfileattrqueryreq_body_);
  } else {
    previewfileattrqueryreq_body_ = nullptr;
  }
  if (from._internal_has_objmodtimestampreq_body()) {
    objmodtimestampreq_body_ = new ::ClientCos::ObjModTimeStampReq(*from.objmodtimestampreq_body_);
  } else {
    objmodtimestampreq_body_ = nullptr;
  }
  if (from._internal_has_listmutiobjreq_body()) {
    listmutiobjreq_body_ = new ::ClientCos::ListMutiobjReq(*from.listmutiobjreq_body_);
  } else {
    listmutiobjreq_body_ = nullptr;
  }
  if (from._internal_has_unfinobjattrmodifyreq_body()) {
    unfinobjattrmodifyreq_body_ = new ::ClientCos::UnfinObjAttrModifyReq(*from.unfinobjattrmodifyreq_body_);
  } else {
    unfinobjattrmodifyreq_body_ = nullptr;
  }
  if (from._internal_has_filebatchdelreq_body()) {
    filebatchdelreq_body_ = new ::ClientCos::FileBatchDelReq(*from.filebatchdelreq_body_);
  } else {
    filebatchdelreq_body_ = nullptr;
  }
  if (from._internal_has_listobjverreq_body()) {
    listobjverreq_body_ = new ::ClientCos::ListObjVerReq(*from.listobjverreq_body_);
  } else {
    listobjverreq_body_ = nullptr;
  }
  if (from._internal_has_delexpirefilereq_body()) {
    delexpirefilereq_body_ = new ::ClientCos::DelExpireFileReq(*from.delexpirefilereq_body_);
  } else {
    delexpirefilereq_body_ = nullptr;
  }
  if (from._internal_has_filedelreq_body()) {
    filedelreq_body_ = new ::ClientCos::FileDelReq(*from.filedelreq_body_);
  } else {
    filedelreq_body_ = nullptr;
  }
  if (from._internal_has_spobjattrmodifyreq_body()) {
    spobjattrmodifyreq_body_ = new ::ClientCos::SpObjAttrModifyReq(*from.spobjattrmodifyreq_body_);
  } else {
    spobjattrmodifyreq_body_ = nullptr;
  }
  if (from._internal_has_uploaddelmarkerreq_body()) {
    uploaddelmarkerreq_body_ = new ::ClientCos::UploadDelmarkerReq(*from.uploaddelmarkerreq_body_);
  } else {
    uploaddelmarkerreq_body_ = nullptr;
  }
  if (from._internal_has_expirefiledelverreq_body()) {
    expirefiledelverreq_body_ = new ::ClientCos::ExpireFileDelVerReq(*from.expirefiledelverreq_body_);
  } else {
    expirefiledelverreq_body_ = nullptr;
  }
  if (from._internal_has_expirefiledelnoverreq_body()) {
    expirefiledelnoverreq_body_ = new ::ClientCos::ExpireFileDelNoVerReq(*from.expirefiledelnoverreq_body_);
  } else {
    expirefiledelnoverreq_body_ = nullptr;
  }
  if (from._internal_has_setbucketpriattrreq_body()) {
    setbucketpriattrreq_body_ = new ::ClientCos::SetBucketPriAttrReq(*from.setbucketpriattrreq_body_);
  } else {
    setbucketpriattrreq_body_ = nullptr;
  }
  if (from._internal_has_filedowntocasreq_body()) {
    filedowntocasreq_body_ = new ::ClientCos::FileDownToCASReq(*from.filedowntocasreq_body_);
  } else {
    filedowntocasreq_body_ = nullptr;
  }
  if (from._internal_has_casobjattrmodifyreq_body()) {
    casobjattrmodifyreq_body_ = new ::ClientCos::CasObjAttrModifyReq(*from.casobjattrmodifyreq_body_);
  } else {
    casobjattrmodifyreq_body_ = nullptr;
  }
  if (from._internal_has_casfilerecoverdelreq_body()) {
    casfilerecoverdelreq_body_ = new ::ClientCos::CasFileRecoverDelReq(*from.casfilerecoverdelreq_body_);
  } else {
    casfilerecoverdelreq_body_ = nullptr;
  }
  if (from._internal_has_casobjrestoreerrreq_body()) {
    casobjrestoreerrreq_body_ = new ::ClientCos::CasObjRestoreErrReq(*from.casobjrestoreerrreq_body_);
  } else {
    casobjrestoreerrreq_body_ = nullptr;
  }
  if (from._internal_has_spobjattrqueryreq_body()) {
    spobjattrqueryreq_body_ = new ::ClientCos::SpObjAttrQueryReq(*from.spobjattrqueryreq_body_);
  } else {
    spobjattrqueryreq_body_ = nullptr;
  }
  if (from._internal_has_objmodstoragetypereq_body()) {
    objmodstoragetypereq_body_ = new ::ClientCos::ObjModStorageTypeReq(*from.objmodstoragetypereq_body_);
  } else {
    objmodstoragetypereq_body_ = nullptr;
  }
  if (from._internal_has_setbucketwebsiteinforeq_body()) {
    setbucketwebsiteinforeq_body_ = new ::ClientCos::SetBucketWebsiteInfoReq(*from.setbucketwebsiteinforeq_body_);
  } else {
    setbucketwebsiteinforeq_body_ = nullptr;
  }
  if (from._internal_has_setcamattrreq_body()) {
    setcamattrreq_body_ = new ::ClientCos::SetCamAttrReq(*from.setcamattrreq_body_);
  } else {
    setcamattrreq_body_ = nullptr;
  }
  if (from._internal_has_bucketcamauthqueryreq_body()) {
    bucketcamauthqueryreq_body_ = new ::ClientCos::BucketCamAuthQueryReq(*from.bucketcamauthqueryreq_body_);
  } else {
    bucketcamauthqueryreq_body_ = nullptr;
  }
  if (from._internal_has_appcamauthqueryreq_body()) {
    appcamauthqueryreq_body_ = new ::ClientCos::AppCamAuthQueryReq(*from.appcamauthqueryreq_body_);
  } else {
    appcamauthqueryreq_body_ = nullptr;
  }
  if (from._internal_has_fileunfinishattrqueryreq_body()) {
    fileunfinishattrqueryreq_body_ = new ::ClientCos::FileUnfinishAttrQueryReq(*from.fileunfinishattrqueryreq_body_);
  } else {
    fileunfinishattrqueryreq_body_ = nullptr;
  }
  if (from._internal_has_reducelifecyclereq_body()) {
    reducelifecyclereq_body_ = new ::ClientCos::ReduceLifecycleReq(*from.reducelifecyclereq_body_);
  } else {
    reducelifecyclereq_body_ = nullptr;
  }
  if (from._internal_has_retrievelifecyclereq_body()) {
    retrievelifecyclereq_body_ = new ::ClientCos::RetrieveLifecycleReq(*from.retrievelifecyclereq_body_);
  } else {
    retrievelifecyclereq_body_ = nullptr;
  }
  if (from._internal_has_setobjaclreq_body()) {
    setobjaclreq_body_ = new ::ClientCos::SetObjAclReq(*from.setobjaclreq_body_);
  } else {
    setobjaclreq_body_ = nullptr;
  }
  if (from._internal_has_getobjaclreq_body()) {
    getobjaclreq_body_ = new ::ClientCos::GetObjAclReq(*from.getobjaclreq_body_);
  } else {
    getobjaclreq_body_ = nullptr;
  }
  if (from._internal_has_setbucketuinreq_body()) {
    setbucketuinreq_body_ = new ::ClientCos::SetBucketUinReq(*from.setbucketuinreq_body_);
  } else {
    setbucketuinreq_body_ = nullptr;
  }
  if (from._internal_has_getbucketuinreq_body()) {
    getbucketuinreq_body_ = new ::ClientCos::GetBucketUinReq(*from.getbucketuinreq_body_);
  } else {
    getbucketuinreq_body_ = nullptr;
  }
  if (from._internal_has_listdirectreq_body()) {
    listdirectreq_body_ = new ::ClientCos::ListDirectReq(*from.listdirectreq_body_);
  } else {
    listdirectreq_body_ = nullptr;
  }
  if (from._internal_has_checkobjaclreq_body()) {
    checkobjaclreq_body_ = new ::ClientCos::CheckObjAclReq(*from.checkobjaclreq_body_);
  } else {
    checkobjaclreq_body_ = nullptr;
  }
  if (from._internal_has_casobjrestorefinreq_body()) {
    casobjrestorefinreq_body_ = new ::ClientCos::CasObjRestoreFinReq(*from.casobjrestorefinreq_body_);
  } else {
    casobjrestorefinreq_body_ = nullptr;
  }
  if (from._internal_has_setbucketlockreq_body()) {
    setbucketlockreq_body_ = new ::ClientCos::SetBucketLockReq(*from.setbucketlockreq_body_);
  } else {
    setbucketlockreq_body_ = nullptr;
  }
  if (from._internal_has_getbucketlockreq_body()) {
    getbucketlockreq_body_ = new ::ClientCos::GetBucketLockReq(*from.getbucketlockreq_body_);
  } else {
    getbucketlockreq_body_ = nullptr;
  }
  if (from._internal_has_setbucketinventoryreq_body()) {
    setbucketinventoryreq_body_ = new ::ClientCos::SetBucketInventoryReq(*from.setbucketinventoryreq_body_);
  } else {
    setbucketinventoryreq_body_ = nullptr;
  }
  if (from._internal_has_getbucketinventoryreq_body()) {
    getbucketinventoryreq_body_ = new ::ClientCos::GetBucketInventoryReq(*from.getbucketinventoryreq_body_);
  } else {
    getbucketinventoryreq_body_ = nullptr;
  }
  if (from._internal_has_costranstocasreq_body()) {
    costranstocasreq_body_ = new ::ClientCos::COSTransToCASReq(*from.costranstocasreq_body_);
  } else {
    costranstocasreq_body_ = nullptr;
  }
  if (from._internal_has_setmigratereq_body()) {
    setmigratereq_body_ = new ::ClientCos::SetMigrateReq(*from.setmigratereq_body_);
  } else {
    setmigratereq_body_ = nullptr;
  }
  if (from._internal_has_delnohashfilereq_body()) {
    delnohashfilereq_body_ = new ::ClientCos::DelNoHashFileReq(*from.delnohashfilereq_body_);
  } else {
    delnohashfilereq_body_ = nullptr;
  }
  if (from._internal_has_migratefinfilereq_body()) {
    migratefinfilereq_body_ = new ::ClientCos::MigrateFinFileReq(*from.migratefinfilereq_body_);
  } else {
    migratefinfilereq_body_ = nullptr;
  }
  if (from._internal_has_migrateunfinfilereq_body()) {
    migrateunfinfilereq_body_ = new ::ClientCos::MigrateUnFinFileReq(*from.migrateunfinfilereq_body_);
  } else {
    migrateunfinfilereq_body_ = nullptr;
  }
  sub_type_ = from.sub_type_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.CosReqMsg)
}

void CosReqMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CosReqMsg_cosv4_5fclient_2eproto.base);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cgi_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cgi_params_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&bucketcreatereq_body_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&sub_type_) -
      reinterpret_cast<char*>(&bucketcreatereq_body_)) + sizeof(sub_type_));
}

CosReqMsg::~CosReqMsg() {
  // @@protoc_insertion_point(destructor:ClientCos.CosReqMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CosReqMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cgi_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cgi_params_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bucketcreatereq_body_;
  if (this != internal_default_instance()) delete bucketattrmodifyreq_body_;
  if (this != internal_default_instance()) delete bucketattrqueryreq_body_;
  if (this != internal_default_instance()) delete dircreatereq_body_;
  if (this != internal_default_instance()) delete objattrqueryreq_body_;
  if (this != internal_default_instance()) delete objattrmodifyreq_body_;
  if (this != internal_default_instance()) delete deletereq_body_;
  if (this != internal_default_instance()) delete listreq_body_;
  if (this != internal_default_instance()) delete appattrqueryreq_body_;
  if (this != internal_default_instance()) delete appattrmodifyreq_body_;
  if (this != internal_default_instance()) delete previewfileattrqueryreq_body_;
  if (this != internal_default_instance()) delete objmodtimestampreq_body_;
  if (this != internal_default_instance()) delete listmutiobjreq_body_;
  if (this != internal_default_instance()) delete unfinobjattrmodifyreq_body_;
  if (this != internal_default_instance()) delete filebatchdelreq_body_;
  if (this != internal_default_instance()) delete listobjverreq_body_;
  if (this != internal_default_instance()) delete delexpirefilereq_body_;
  if (this != internal_default_instance()) delete filedelreq_body_;
  if (this != internal_default_instance()) delete spobjattrmodifyreq_body_;
  if (this != internal_default_instance()) delete uploaddelmarkerreq_body_;
  if (this != internal_default_instance()) delete expirefiledelverreq_body_;
  if (this != internal_default_instance()) delete expirefiledelnoverreq_body_;
  if (this != internal_default_instance()) delete setbucketpriattrreq_body_;
  if (this != internal_default_instance()) delete filedowntocasreq_body_;
  if (this != internal_default_instance()) delete casobjattrmodifyreq_body_;
  if (this != internal_default_instance()) delete casfilerecoverdelreq_body_;
  if (this != internal_default_instance()) delete casobjrestoreerrreq_body_;
  if (this != internal_default_instance()) delete spobjattrqueryreq_body_;
  if (this != internal_default_instance()) delete objmodstoragetypereq_body_;
  if (this != internal_default_instance()) delete setbucketwebsiteinforeq_body_;
  if (this != internal_default_instance()) delete setcamattrreq_body_;
  if (this != internal_default_instance()) delete bucketcamauthqueryreq_body_;
  if (this != internal_default_instance()) delete appcamauthqueryreq_body_;
  if (this != internal_default_instance()) delete fileunfinishattrqueryreq_body_;
  if (this != internal_default_instance()) delete reducelifecyclereq_body_;
  if (this != internal_default_instance()) delete retrievelifecyclereq_body_;
  if (this != internal_default_instance()) delete setobjaclreq_body_;
  if (this != internal_default_instance()) delete getobjaclreq_body_;
  if (this != internal_default_instance()) delete setbucketuinreq_body_;
  if (this != internal_default_instance()) delete getbucketuinreq_body_;
  if (this != internal_default_instance()) delete listdirectreq_body_;
  if (this != internal_default_instance()) delete checkobjaclreq_body_;
  if (this != internal_default_instance()) delete casobjrestorefinreq_body_;
  if (this != internal_default_instance()) delete setbucketlockreq_body_;
  if (this != internal_default_instance()) delete getbucketlockreq_body_;
  if (this != internal_default_instance()) delete setbucketinventoryreq_body_;
  if (this != internal_default_instance()) delete getbucketinventoryreq_body_;
  if (this != internal_default_instance()) delete costranstocasreq_body_;
  if (this != internal_default_instance()) delete setmigratereq_body_;
  if (this != internal_default_instance()) delete delnohashfilereq_body_;
  if (this != internal_default_instance()) delete migratefinfilereq_body_;
  if (this != internal_default_instance()) delete migrateunfinfilereq_body_;
}

void CosReqMsg::ArenaDtor(void* object) {
  CosReqMsg* _this = reinterpret_cast< CosReqMsg* >(object);
  (void)_this;
}
void CosReqMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CosReqMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CosReqMsg& CosReqMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CosReqMsg_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CosReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CosReqMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      request_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      cgi_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      cgi_params_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bucketcreatereq_body_ != nullptr);
      bucketcreatereq_body_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bucketattrmodifyreq_body_ != nullptr);
      bucketattrmodifyreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(bucketattrqueryreq_body_ != nullptr);
      bucketattrqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(dircreatereq_body_ != nullptr);
      dircreatereq_body_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(objattrqueryreq_body_ != nullptr);
      objattrqueryreq_body_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(objattrmodifyreq_body_ != nullptr);
      objattrmodifyreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(deletereq_body_ != nullptr);
      deletereq_body_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(listreq_body_ != nullptr);
      listreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(appattrqueryreq_body_ != nullptr);
      appattrqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(appattrmodifyreq_body_ != nullptr);
      appattrmodifyreq_body_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(previewfileattrqueryreq_body_ != nullptr);
      previewfileattrqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(objmodtimestampreq_body_ != nullptr);
      objmodtimestampreq_body_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(listmutiobjreq_body_ != nullptr);
      listmutiobjreq_body_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(unfinobjattrmodifyreq_body_ != nullptr);
      unfinobjattrmodifyreq_body_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(filebatchdelreq_body_ != nullptr);
      filebatchdelreq_body_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(listobjverreq_body_ != nullptr);
      listobjverreq_body_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(delexpirefilereq_body_ != nullptr);
      delexpirefilereq_body_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(filedelreq_body_ != nullptr);
      filedelreq_body_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(spobjattrmodifyreq_body_ != nullptr);
      spobjattrmodifyreq_body_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(uploaddelmarkerreq_body_ != nullptr);
      uploaddelmarkerreq_body_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(expirefiledelverreq_body_ != nullptr);
      expirefiledelverreq_body_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(expirefiledelnoverreq_body_ != nullptr);
      expirefiledelnoverreq_body_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(setbucketpriattrreq_body_ != nullptr);
      setbucketpriattrreq_body_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(filedowntocasreq_body_ != nullptr);
      filedowntocasreq_body_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(casobjattrmodifyreq_body_ != nullptr);
      casobjattrmodifyreq_body_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(casfilerecoverdelreq_body_ != nullptr);
      casfilerecoverdelreq_body_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(casobjrestoreerrreq_body_ != nullptr);
      casobjrestoreerrreq_body_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(spobjattrqueryreq_body_ != nullptr);
      spobjattrqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(objmodstoragetypereq_body_ != nullptr);
      objmodstoragetypereq_body_->Clear();
    }
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(setbucketwebsiteinforeq_body_ != nullptr);
      setbucketwebsiteinforeq_body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(setcamattrreq_body_ != nullptr);
      setcamattrreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(bucketcamauthqueryreq_body_ != nullptr);
      bucketcamauthqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(appcamauthqueryreq_body_ != nullptr);
      appcamauthqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(fileunfinishattrqueryreq_body_ != nullptr);
      fileunfinishattrqueryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(reducelifecyclereq_body_ != nullptr);
      reducelifecyclereq_body_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(retrievelifecyclereq_body_ != nullptr);
      retrievelifecyclereq_body_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(setobjaclreq_body_ != nullptr);
      setobjaclreq_body_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(getobjaclreq_body_ != nullptr);
      getobjaclreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(setbucketuinreq_body_ != nullptr);
      setbucketuinreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(getbucketuinreq_body_ != nullptr);
      getbucketuinreq_body_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(listdirectreq_body_ != nullptr);
      listdirectreq_body_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(checkobjaclreq_body_ != nullptr);
      checkobjaclreq_body_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(casobjrestorefinreq_body_ != nullptr);
      casobjrestorefinreq_body_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(setbucketlockreq_body_ != nullptr);
      setbucketlockreq_body_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(getbucketlockreq_body_ != nullptr);
      getbucketlockreq_body_->Clear();
    }
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(setbucketinventoryreq_body_ != nullptr);
      setbucketinventoryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(getbucketinventoryreq_body_ != nullptr);
      getbucketinventoryreq_body_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(costranstocasreq_body_ != nullptr);
      costranstocasreq_body_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(setmigratereq_body_ != nullptr);
      setmigratereq_body_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(delnohashfilereq_body_ != nullptr);
      delnohashfilereq_body_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(migratefinfilereq_body_ != nullptr);
      migratefinfilereq_body_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(migrateunfinfilereq_body_ != nullptr);
      migrateunfinfilereq_body_->Clear();
    }
  }
  sub_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CosReqMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes cgi_attr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cgi_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes cgi_params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_cgi_params();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ClientCos.CosReqMsg.SubType sub_type = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CosReqMsg_SubType_IsValid(val))) {
            _internal_set_sub_type(static_cast<::ClientCos::CosReqMsg_SubType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketCreateReq BucketCreateReq_body = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketcreatereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketAttrModifyReq BucketAttrModifyReq_body = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketattrmodifyreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketAttrQueryReq BucketAttrQueryReq_body = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketattrqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DirCreateReq DirCreateReq_body = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_dircreatereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjAttrQueryReq ObjAttrQueryReq_body = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_objattrqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjAttrModifyReq ObjAttrModifyReq_body = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_objattrmodifyreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DeleteReq DeleteReq_body = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_deletereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListReq ListReq_body = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_listreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.AppAttrQueryReq AppAttrQueryReq_body = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_appattrqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.AppAttrModifyReq AppAttrModifyReq_body = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_appattrmodifyreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.PreviewFileAttrQueryReq PreviewFileAttrQueryReq_body = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_previewfileattrqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjModTimeStampReq ObjModTimeStampReq_body = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_objmodtimestampreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListMutiobjReq ListMutiobjReq_body = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_listmutiobjreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.UnfinObjAttrModifyReq UnfinObjAttrModifyReq_body = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_unfinobjattrmodifyreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileBatchDelReq FileBatchDelReq_body = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_filebatchdelreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListObjVerReq ListObjVerReq_body = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_listobjverreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelExpireFileReq DelExpireFileReq_body = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_delexpirefilereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileDelReq FileDelReq_body = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_filedelreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SpObjAttrModifyReq SpObjAttrModifyReq_body = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_spobjattrmodifyreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.UploadDelmarkerReq UploadDelmarkerReq_body = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_uploaddelmarkerreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExpireFileDelVerReq ExpireFileDelVerReq_body = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_expirefiledelverreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExpireFileDelNoVerReq ExpireFileDelNoverReq_body = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_expirefiledelnoverreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketPriAttrReq SetBucketPriAttrReq_body = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketpriattrreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileDownToCASReq FileDownToCASReq_body = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_filedowntocasreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasObjAttrModifyReq CasObjAttrModifyReq_body = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_casobjattrmodifyreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasFileRecoverDelReq CasFileRecoverDelReq_body = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_casfilerecoverdelreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasObjRestoreErrReq CasObjRestoreErrReq_body = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_casobjrestoreerrreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SpObjAttrQueryReq SpObjAttrQueryReq_body = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_spobjattrqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjModStorageTypeReq ObjModStorageTypeReq_body = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_objmodstoragetypereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketWebsiteInfoReq SetBucketWebsiteInfoReq_body = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketwebsiteinforeq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetCamAttrReq SetCamAttrReq_body = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_setcamattrreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketCamAuthQueryReq BucketCamAuthQueryReq_body = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketcamauthqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.AppCamAuthQueryReq AppCamAuthQueryReq_body = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_appcamauthqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileUnfinishAttrQueryReq FileUnfinishAttrQueryReq_body = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_fileunfinishattrqueryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ReduceLifecycleReq ReduceLifecycleReq_body = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_reducelifecyclereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.RetrieveLifecycleReq RetrieveLifecycleReq_body = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_retrievelifecyclereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetObjAclReq SetObjAclReq_body = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_setobjaclreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetObjAclReq GetObjAclReq_body = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_getobjaclreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketUinReq SetBucketUinReq_body = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketuinreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetBucketUinReq GetBucketUinReq_body = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbucketuinreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListDirectReq ListDirectReq_body = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_listdirectreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CheckObjAclReq CheckObjAclReq_body = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_checkobjaclreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasObjRestoreFinReq CasObjRestoreFinReq_body = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_casobjrestorefinreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketLockReq SetBucketLockReq_body = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketlockreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetBucketLockReq GetBucketLockReq_body = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbucketlockreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketInventoryReq SetBucketInventoryReq_body = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketinventoryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetBucketInventoryReq GetBucketInventoryReq_body = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbucketinventoryreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.COSTransToCASReq COSTransToCASReq_body = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_costranstocasreq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetMigrateReq SetMigrateReq_body = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_setmigratereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelNoHashFileReq DelNoHashFileReq_body = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_delnohashfilereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.MigrateFinFileReq MigrateFinFileReq_body = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_migratefinfilereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.MigrateUnFinFileReq MigrateUnFinFileReq_body = 93;
      case 93:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_migrateunfinfilereq_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CosReqMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CosReqMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes request_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // optional bytes cgi_attr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cgi_attr(), target);
  }

  // optional bytes cgi_params = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_cgi_params(), target);
  }

  cached_has_bits = _has_bits_[1];
  // required .ClientCos.CosReqMsg.SubType sub_type = 10;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_sub_type(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.BucketCreateReq BucketCreateReq_body = 21;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::bucketcreatereq_body(this), target, stream);
  }

  // optional .ClientCos.BucketAttrModifyReq BucketAttrModifyReq_body = 22;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::bucketattrmodifyreq_body(this), target, stream);
  }

  // optional .ClientCos.BucketAttrQueryReq BucketAttrQueryReq_body = 23;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::bucketattrqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.DirCreateReq DirCreateReq_body = 24;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        24, _Internal::dircreatereq_body(this), target, stream);
  }

  // optional .ClientCos.ObjAttrQueryReq ObjAttrQueryReq_body = 25;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::objattrqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.ObjAttrModifyReq ObjAttrModifyReq_body = 26;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        26, _Internal::objattrmodifyreq_body(this), target, stream);
  }

  // optional .ClientCos.DeleteReq DeleteReq_body = 27;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::deletereq_body(this), target, stream);
  }

  // optional .ClientCos.ListReq ListReq_body = 28;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        28, _Internal::listreq_body(this), target, stream);
  }

  // optional .ClientCos.AppAttrQueryReq AppAttrQueryReq_body = 29;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::appattrqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.AppAttrModifyReq AppAttrModifyReq_body = 30;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        30, _Internal::appattrmodifyreq_body(this), target, stream);
  }

  // optional .ClientCos.PreviewFileAttrQueryReq PreviewFileAttrQueryReq_body = 31;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::previewfileattrqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.ObjModTimeStampReq ObjModTimeStampReq_body = 32;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        32, _Internal::objmodtimestampreq_body(this), target, stream);
  }

  // optional .ClientCos.ListMutiobjReq ListMutiobjReq_body = 33;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::listmutiobjreq_body(this), target, stream);
  }

  // optional .ClientCos.UnfinObjAttrModifyReq UnfinObjAttrModifyReq_body = 34;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        34, _Internal::unfinobjattrmodifyreq_body(this), target, stream);
  }

  // optional .ClientCos.FileBatchDelReq FileBatchDelReq_body = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::filebatchdelreq_body(this), target, stream);
  }

  // optional .ClientCos.ListObjVerReq ListObjVerReq_body = 36;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        36, _Internal::listobjverreq_body(this), target, stream);
  }

  // optional .ClientCos.DelExpireFileReq DelExpireFileReq_body = 37;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::delexpirefilereq_body(this), target, stream);
  }

  // optional .ClientCos.FileDelReq FileDelReq_body = 38;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        38, _Internal::filedelreq_body(this), target, stream);
  }

  // optional .ClientCos.SpObjAttrModifyReq SpObjAttrModifyReq_body = 39;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::spobjattrmodifyreq_body(this), target, stream);
  }

  // optional .ClientCos.UploadDelmarkerReq UploadDelmarkerReq_body = 40;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        40, _Internal::uploaddelmarkerreq_body(this), target, stream);
  }

  // optional .ClientCos.ExpireFileDelVerReq ExpireFileDelVerReq_body = 41;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::expirefiledelverreq_body(this), target, stream);
  }

  // optional .ClientCos.ExpireFileDelNoVerReq ExpireFileDelNoverReq_body = 42;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        42, _Internal::expirefiledelnoverreq_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketPriAttrReq SetBucketPriAttrReq_body = 43;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::setbucketpriattrreq_body(this), target, stream);
  }

  // optional .ClientCos.FileDownToCASReq FileDownToCASReq_body = 44;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        44, _Internal::filedowntocasreq_body(this), target, stream);
  }

  // optional .ClientCos.CasObjAttrModifyReq CasObjAttrModifyReq_body = 45;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::casobjattrmodifyreq_body(this), target, stream);
  }

  // optional .ClientCos.CasFileRecoverDelReq CasFileRecoverDelReq_body = 46;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        46, _Internal::casfilerecoverdelreq_body(this), target, stream);
  }

  // optional .ClientCos.CasObjRestoreErrReq CasObjRestoreErrReq_body = 47;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::casobjrestoreerrreq_body(this), target, stream);
  }

  // optional .ClientCos.SpObjAttrQueryReq SpObjAttrQueryReq_body = 48;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        48, _Internal::spobjattrqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.ObjModStorageTypeReq ObjModStorageTypeReq_body = 49;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::objmodstoragetypereq_body(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ClientCos.SetBucketWebsiteInfoReq SetBucketWebsiteInfoReq_body = 50;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        50, _Internal::setbucketwebsiteinforeq_body(this), target, stream);
  }

  // optional .ClientCos.SetCamAttrReq SetCamAttrReq_body = 51;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::setcamattrreq_body(this), target, stream);
  }

  // optional .ClientCos.BucketCamAuthQueryReq BucketCamAuthQueryReq_body = 52;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        52, _Internal::bucketcamauthqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.AppCamAuthQueryReq AppCamAuthQueryReq_body = 53;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::appcamauthqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.FileUnfinishAttrQueryReq FileUnfinishAttrQueryReq_body = 54;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        54, _Internal::fileunfinishattrqueryreq_body(this), target, stream);
  }

  // optional .ClientCos.ReduceLifecycleReq ReduceLifecycleReq_body = 55;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::reducelifecyclereq_body(this), target, stream);
  }

  // optional .ClientCos.RetrieveLifecycleReq RetrieveLifecycleReq_body = 56;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        56, _Internal::retrievelifecyclereq_body(this), target, stream);
  }

  // optional .ClientCos.SetObjAclReq SetObjAclReq_body = 57;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        57, _Internal::setobjaclreq_body(this), target, stream);
  }

  // optional .ClientCos.GetObjAclReq GetObjAclReq_body = 58;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        58, _Internal::getobjaclreq_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketUinReq SetBucketUinReq_body = 59;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        59, _Internal::setbucketuinreq_body(this), target, stream);
  }

  // optional .ClientCos.GetBucketUinReq GetBucketUinReq_body = 60;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        60, _Internal::getbucketuinreq_body(this), target, stream);
  }

  // optional .ClientCos.ListDirectReq ListDirectReq_body = 61;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        61, _Internal::listdirectreq_body(this), target, stream);
  }

  // optional .ClientCos.CheckObjAclReq CheckObjAclReq_body = 62;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        62, _Internal::checkobjaclreq_body(this), target, stream);
  }

  // optional .ClientCos.CasObjRestoreFinReq CasObjRestoreFinReq_body = 63;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        63, _Internal::casobjrestorefinreq_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketLockReq SetBucketLockReq_body = 64;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        64, _Internal::setbucketlockreq_body(this), target, stream);
  }

  // optional .ClientCos.GetBucketLockReq GetBucketLockReq_body = 65;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        65, _Internal::getbucketlockreq_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketInventoryReq SetBucketInventoryReq_body = 66;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        66, _Internal::setbucketinventoryreq_body(this), target, stream);
  }

  // optional .ClientCos.GetBucketInventoryReq GetBucketInventoryReq_body = 67;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        67, _Internal::getbucketinventoryreq_body(this), target, stream);
  }

  // optional .ClientCos.COSTransToCASReq COSTransToCASReq_body = 68;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        68, _Internal::costranstocasreq_body(this), target, stream);
  }

  // optional .ClientCos.SetMigrateReq SetMigrateReq_body = 90;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        90, _Internal::setmigratereq_body(this), target, stream);
  }

  // optional .ClientCos.DelNoHashFileReq DelNoHashFileReq_body = 91;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        91, _Internal::delnohashfilereq_body(this), target, stream);
  }

  // optional .ClientCos.MigrateFinFileReq MigrateFinFileReq_body = 92;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        92, _Internal::migratefinfilereq_body(this), target, stream);
  }

  // optional .ClientCos.MigrateUnFinFileReq MigrateUnFinFileReq_body = 93;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        93, _Internal::migrateunfinfilereq_body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CosReqMsg)
  return target;
}

size_t CosReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CosReqMsg)
  size_t total_size = 0;

  // required .ClientCos.CosReqMsg.SubType sub_type = 10;
  if (_internal_has_sub_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_sub_type());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes request_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_request_id());
    }

    // optional bytes cgi_attr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_cgi_attr());
    }

    // optional bytes cgi_params = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_cgi_params());
    }

    // optional .ClientCos.BucketCreateReq BucketCreateReq_body = 21;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketcreatereq_body_);
    }

    // optional .ClientCos.BucketAttrModifyReq BucketAttrModifyReq_body = 22;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketattrmodifyreq_body_);
    }

    // optional .ClientCos.BucketAttrQueryReq BucketAttrQueryReq_body = 23;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketattrqueryreq_body_);
    }

    // optional .ClientCos.DirCreateReq DirCreateReq_body = 24;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dircreatereq_body_);
    }

    // optional .ClientCos.ObjAttrQueryReq ObjAttrQueryReq_body = 25;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objattrqueryreq_body_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .ClientCos.ObjAttrModifyReq ObjAttrModifyReq_body = 26;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objattrmodifyreq_body_);
    }

    // optional .ClientCos.DeleteReq DeleteReq_body = 27;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *deletereq_body_);
    }

    // optional .ClientCos.ListReq ListReq_body = 28;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listreq_body_);
    }

    // optional .ClientCos.AppAttrQueryReq AppAttrQueryReq_body = 29;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *appattrqueryreq_body_);
    }

    // optional .ClientCos.AppAttrModifyReq AppAttrModifyReq_body = 30;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *appattrmodifyreq_body_);
    }

    // optional .ClientCos.PreviewFileAttrQueryReq PreviewFileAttrQueryReq_body = 31;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *previewfileattrqueryreq_body_);
    }

    // optional .ClientCos.ObjModTimeStampReq ObjModTimeStampReq_body = 32;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objmodtimestampreq_body_);
    }

    // optional .ClientCos.ListMutiobjReq ListMutiobjReq_body = 33;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listmutiobjreq_body_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .ClientCos.UnfinObjAttrModifyReq UnfinObjAttrModifyReq_body = 34;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *unfinobjattrmodifyreq_body_);
    }

    // optional .ClientCos.FileBatchDelReq FileBatchDelReq_body = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *filebatchdelreq_body_);
    }

    // optional .ClientCos.ListObjVerReq ListObjVerReq_body = 36;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listobjverreq_body_);
    }

    // optional .ClientCos.DelExpireFileReq DelExpireFileReq_body = 37;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delexpirefilereq_body_);
    }

    // optional .ClientCos.FileDelReq FileDelReq_body = 38;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *filedelreq_body_);
    }

    // optional .ClientCos.SpObjAttrModifyReq SpObjAttrModifyReq_body = 39;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *spobjattrmodifyreq_body_);
    }

    // optional .ClientCos.UploadDelmarkerReq UploadDelmarkerReq_body = 40;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *uploaddelmarkerreq_body_);
    }

    // optional .ClientCos.ExpireFileDelVerReq ExpireFileDelVerReq_body = 41;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expirefiledelverreq_body_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .ClientCos.ExpireFileDelNoVerReq ExpireFileDelNoverReq_body = 42;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expirefiledelnoverreq_body_);
    }

    // optional .ClientCos.SetBucketPriAttrReq SetBucketPriAttrReq_body = 43;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketpriattrreq_body_);
    }

    // optional .ClientCos.FileDownToCASReq FileDownToCASReq_body = 44;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *filedowntocasreq_body_);
    }

    // optional .ClientCos.CasObjAttrModifyReq CasObjAttrModifyReq_body = 45;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casobjattrmodifyreq_body_);
    }

    // optional .ClientCos.CasFileRecoverDelReq CasFileRecoverDelReq_body = 46;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casfilerecoverdelreq_body_);
    }

    // optional .ClientCos.CasObjRestoreErrReq CasObjRestoreErrReq_body = 47;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casobjrestoreerrreq_body_);
    }

    // optional .ClientCos.SpObjAttrQueryReq SpObjAttrQueryReq_body = 48;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *spobjattrqueryreq_body_);
    }

    // optional .ClientCos.ObjModStorageTypeReq ObjModStorageTypeReq_body = 49;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objmodstoragetypereq_body_);
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .ClientCos.SetBucketWebsiteInfoReq SetBucketWebsiteInfoReq_body = 50;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketwebsiteinforeq_body_);
    }

    // optional .ClientCos.SetCamAttrReq SetCamAttrReq_body = 51;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setcamattrreq_body_);
    }

    // optional .ClientCos.BucketCamAuthQueryReq BucketCamAuthQueryReq_body = 52;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketcamauthqueryreq_body_);
    }

    // optional .ClientCos.AppCamAuthQueryReq AppCamAuthQueryReq_body = 53;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *appcamauthqueryreq_body_);
    }

    // optional .ClientCos.FileUnfinishAttrQueryReq FileUnfinishAttrQueryReq_body = 54;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fileunfinishattrqueryreq_body_);
    }

    // optional .ClientCos.ReduceLifecycleReq ReduceLifecycleReq_body = 55;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reducelifecyclereq_body_);
    }

    // optional .ClientCos.RetrieveLifecycleReq RetrieveLifecycleReq_body = 56;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *retrievelifecyclereq_body_);
    }

    // optional .ClientCos.SetObjAclReq SetObjAclReq_body = 57;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setobjaclreq_body_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .ClientCos.GetObjAclReq GetObjAclReq_body = 58;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getobjaclreq_body_);
    }

    // optional .ClientCos.SetBucketUinReq SetBucketUinReq_body = 59;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketuinreq_body_);
    }

    // optional .ClientCos.GetBucketUinReq GetBucketUinReq_body = 60;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getbucketuinreq_body_);
    }

    // optional .ClientCos.ListDirectReq ListDirectReq_body = 61;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listdirectreq_body_);
    }

    // optional .ClientCos.CheckObjAclReq CheckObjAclReq_body = 62;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *checkobjaclreq_body_);
    }

    // optional .ClientCos.CasObjRestoreFinReq CasObjRestoreFinReq_body = 63;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casobjrestorefinreq_body_);
    }

    // optional .ClientCos.SetBucketLockReq SetBucketLockReq_body = 64;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketlockreq_body_);
    }

    // optional .ClientCos.GetBucketLockReq GetBucketLockReq_body = 65;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getbucketlockreq_body_);
    }

  }
  if (cached_has_bits & 0x007f0000u) {
    // optional .ClientCos.SetBucketInventoryReq SetBucketInventoryReq_body = 66;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketinventoryreq_body_);
    }

    // optional .ClientCos.GetBucketInventoryReq GetBucketInventoryReq_body = 67;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getbucketinventoryreq_body_);
    }

    // optional .ClientCos.COSTransToCASReq COSTransToCASReq_body = 68;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *costranstocasreq_body_);
    }

    // optional .ClientCos.SetMigrateReq SetMigrateReq_body = 90;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setmigratereq_body_);
    }

    // optional .ClientCos.DelNoHashFileReq DelNoHashFileReq_body = 91;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delnohashfilereq_body_);
    }

    // optional .ClientCos.MigrateFinFileReq MigrateFinFileReq_body = 92;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *migratefinfilereq_body_);
    }

    // optional .ClientCos.MigrateUnFinFileReq MigrateUnFinFileReq_body = 93;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *migrateunfinfilereq_body_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosReqMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CosReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CosReqMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CosReqMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CosReqMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CosReqMsg)
    MergeFrom(*source);
  }
}

void CosReqMsg::MergeFrom(const CosReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CosReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_request_id(from._internal_request_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_cgi_attr(from._internal_cgi_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_cgi_params(from._internal_cgi_params());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_bucketcreatereq_body()->::ClientCos::BucketCreateReq::MergeFrom(from._internal_bucketcreatereq_body());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_bucketattrmodifyreq_body()->::ClientCos::BucketAttrModifyReq::MergeFrom(from._internal_bucketattrmodifyreq_body());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_bucketattrqueryreq_body()->::ClientCos::BucketAttrQueryReq::MergeFrom(from._internal_bucketattrqueryreq_body());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_dircreatereq_body()->::ClientCos::DirCreateReq::MergeFrom(from._internal_dircreatereq_body());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_objattrqueryreq_body()->::ClientCos::ObjAttrQueryReq::MergeFrom(from._internal_objattrqueryreq_body());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_objattrmodifyreq_body()->::ClientCos::ObjAttrModifyReq::MergeFrom(from._internal_objattrmodifyreq_body());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_deletereq_body()->::ClientCos::DeleteReq::MergeFrom(from._internal_deletereq_body());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_listreq_body()->::ClientCos::ListReq::MergeFrom(from._internal_listreq_body());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_appattrqueryreq_body()->::ClientCos::AppAttrQueryReq::MergeFrom(from._internal_appattrqueryreq_body());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_appattrmodifyreq_body()->::ClientCos::AppAttrModifyReq::MergeFrom(from._internal_appattrmodifyreq_body());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_previewfileattrqueryreq_body()->::ClientCos::PreviewFileAttrQueryReq::MergeFrom(from._internal_previewfileattrqueryreq_body());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_objmodtimestampreq_body()->::ClientCos::ObjModTimeStampReq::MergeFrom(from._internal_objmodtimestampreq_body());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_listmutiobjreq_body()->::ClientCos::ListMutiobjReq::MergeFrom(from._internal_listmutiobjreq_body());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_unfinobjattrmodifyreq_body()->::ClientCos::UnfinObjAttrModifyReq::MergeFrom(from._internal_unfinobjattrmodifyreq_body());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_filebatchdelreq_body()->::ClientCos::FileBatchDelReq::MergeFrom(from._internal_filebatchdelreq_body());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_listobjverreq_body()->::ClientCos::ListObjVerReq::MergeFrom(from._internal_listobjverreq_body());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_delexpirefilereq_body()->::ClientCos::DelExpireFileReq::MergeFrom(from._internal_delexpirefilereq_body());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_filedelreq_body()->::ClientCos::FileDelReq::MergeFrom(from._internal_filedelreq_body());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_spobjattrmodifyreq_body()->::ClientCos::SpObjAttrModifyReq::MergeFrom(from._internal_spobjattrmodifyreq_body());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_uploaddelmarkerreq_body()->::ClientCos::UploadDelmarkerReq::MergeFrom(from._internal_uploaddelmarkerreq_body());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_expirefiledelverreq_body()->::ClientCos::ExpireFileDelVerReq::MergeFrom(from._internal_expirefiledelverreq_body());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_expirefiledelnoverreq_body()->::ClientCos::ExpireFileDelNoVerReq::MergeFrom(from._internal_expirefiledelnoverreq_body());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_setbucketpriattrreq_body()->::ClientCos::SetBucketPriAttrReq::MergeFrom(from._internal_setbucketpriattrreq_body());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_filedowntocasreq_body()->::ClientCos::FileDownToCASReq::MergeFrom(from._internal_filedowntocasreq_body());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_casobjattrmodifyreq_body()->::ClientCos::CasObjAttrModifyReq::MergeFrom(from._internal_casobjattrmodifyreq_body());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_casfilerecoverdelreq_body()->::ClientCos::CasFileRecoverDelReq::MergeFrom(from._internal_casfilerecoverdelreq_body());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_casobjrestoreerrreq_body()->::ClientCos::CasObjRestoreErrReq::MergeFrom(from._internal_casobjrestoreerrreq_body());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_spobjattrqueryreq_body()->::ClientCos::SpObjAttrQueryReq::MergeFrom(from._internal_spobjattrqueryreq_body());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_objmodstoragetypereq_body()->::ClientCos::ObjModStorageTypeReq::MergeFrom(from._internal_objmodstoragetypereq_body());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_setbucketwebsiteinforeq_body()->::ClientCos::SetBucketWebsiteInfoReq::MergeFrom(from._internal_setbucketwebsiteinforeq_body());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_setcamattrreq_body()->::ClientCos::SetCamAttrReq::MergeFrom(from._internal_setcamattrreq_body());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_bucketcamauthqueryreq_body()->::ClientCos::BucketCamAuthQueryReq::MergeFrom(from._internal_bucketcamauthqueryreq_body());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_appcamauthqueryreq_body()->::ClientCos::AppCamAuthQueryReq::MergeFrom(from._internal_appcamauthqueryreq_body());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_fileunfinishattrqueryreq_body()->::ClientCos::FileUnfinishAttrQueryReq::MergeFrom(from._internal_fileunfinishattrqueryreq_body());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_reducelifecyclereq_body()->::ClientCos::ReduceLifecycleReq::MergeFrom(from._internal_reducelifecyclereq_body());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_retrievelifecyclereq_body()->::ClientCos::RetrieveLifecycleReq::MergeFrom(from._internal_retrievelifecyclereq_body());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_setobjaclreq_body()->::ClientCos::SetObjAclReq::MergeFrom(from._internal_setobjaclreq_body());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_getobjaclreq_body()->::ClientCos::GetObjAclReq::MergeFrom(from._internal_getobjaclreq_body());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_setbucketuinreq_body()->::ClientCos::SetBucketUinReq::MergeFrom(from._internal_setbucketuinreq_body());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_getbucketuinreq_body()->::ClientCos::GetBucketUinReq::MergeFrom(from._internal_getbucketuinreq_body());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_listdirectreq_body()->::ClientCos::ListDirectReq::MergeFrom(from._internal_listdirectreq_body());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_checkobjaclreq_body()->::ClientCos::CheckObjAclReq::MergeFrom(from._internal_checkobjaclreq_body());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_casobjrestorefinreq_body()->::ClientCos::CasObjRestoreFinReq::MergeFrom(from._internal_casobjrestorefinreq_body());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_setbucketlockreq_body()->::ClientCos::SetBucketLockReq::MergeFrom(from._internal_setbucketlockreq_body());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_getbucketlockreq_body()->::ClientCos::GetBucketLockReq::MergeFrom(from._internal_getbucketlockreq_body());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_setbucketinventoryreq_body()->::ClientCos::SetBucketInventoryReq::MergeFrom(from._internal_setbucketinventoryreq_body());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_getbucketinventoryreq_body()->::ClientCos::GetBucketInventoryReq::MergeFrom(from._internal_getbucketinventoryreq_body());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_costranstocasreq_body()->::ClientCos::COSTransToCASReq::MergeFrom(from._internal_costranstocasreq_body());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_setmigratereq_body()->::ClientCos::SetMigrateReq::MergeFrom(from._internal_setmigratereq_body());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_delnohashfilereq_body()->::ClientCos::DelNoHashFileReq::MergeFrom(from._internal_delnohashfilereq_body());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_migratefinfilereq_body()->::ClientCos::MigrateFinFileReq::MergeFrom(from._internal_migratefinfilereq_body());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_migrateunfinfilereq_body()->::ClientCos::MigrateUnFinFileReq::MergeFrom(from._internal_migrateunfinfilereq_body());
    }
    if (cached_has_bits & 0x00800000u) {
      sub_type_ = from.sub_type_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void CosReqMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CosReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosReqMsg::CopyFrom(const CosReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CosReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosReqMsg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_bucketcreatereq_body()) {
    if (!bucketcreatereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_bucketattrmodifyreq_body()) {
    if (!bucketattrmodifyreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_dircreatereq_body()) {
    if (!dircreatereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_objattrmodifyreq_body()) {
    if (!objattrmodifyreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_deletereq_body()) {
    if (!deletereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_listreq_body()) {
    if (!listreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_appattrqueryreq_body()) {
    if (!appattrqueryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_appattrmodifyreq_body()) {
    if (!appattrmodifyreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_previewfileattrqueryreq_body()) {
    if (!previewfileattrqueryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_objmodtimestampreq_body()) {
    if (!objmodtimestampreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_listmutiobjreq_body()) {
    if (!listmutiobjreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_unfinobjattrmodifyreq_body()) {
    if (!unfinobjattrmodifyreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_filebatchdelreq_body()) {
    if (!filebatchdelreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_listobjverreq_body()) {
    if (!listobjverreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_delexpirefilereq_body()) {
    if (!delexpirefilereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_filedelreq_body()) {
    if (!filedelreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_spobjattrmodifyreq_body()) {
    if (!spobjattrmodifyreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_uploaddelmarkerreq_body()) {
    if (!uploaddelmarkerreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_expirefiledelverreq_body()) {
    if (!expirefiledelverreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_expirefiledelnoverreq_body()) {
    if (!expirefiledelnoverreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setbucketpriattrreq_body()) {
    if (!setbucketpriattrreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_filedowntocasreq_body()) {
    if (!filedowntocasreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_casobjattrmodifyreq_body()) {
    if (!casobjattrmodifyreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_casfilerecoverdelreq_body()) {
    if (!casfilerecoverdelreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_casobjrestoreerrreq_body()) {
    if (!casobjrestoreerrreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_spobjattrqueryreq_body()) {
    if (!spobjattrqueryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_objmodstoragetypereq_body()) {
    if (!objmodstoragetypereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setbucketwebsiteinforeq_body()) {
    if (!setbucketwebsiteinforeq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setcamattrreq_body()) {
    if (!setcamattrreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_bucketcamauthqueryreq_body()) {
    if (!bucketcamauthqueryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_appcamauthqueryreq_body()) {
    if (!appcamauthqueryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_fileunfinishattrqueryreq_body()) {
    if (!fileunfinishattrqueryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_reducelifecyclereq_body()) {
    if (!reducelifecyclereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_retrievelifecyclereq_body()) {
    if (!retrievelifecyclereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setobjaclreq_body()) {
    if (!setobjaclreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_getobjaclreq_body()) {
    if (!getobjaclreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setbucketuinreq_body()) {
    if (!setbucketuinreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_getbucketuinreq_body()) {
    if (!getbucketuinreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_checkobjaclreq_body()) {
    if (!checkobjaclreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_casobjrestorefinreq_body()) {
    if (!casobjrestorefinreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setbucketlockreq_body()) {
    if (!setbucketlockreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_getbucketlockreq_body()) {
    if (!getbucketlockreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_setbucketinventoryreq_body()) {
    if (!setbucketinventoryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_getbucketinventoryreq_body()) {
    if (!getbucketinventoryreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_costranstocasreq_body()) {
    if (!costranstocasreq_body_->IsInitialized()) return false;
  }
  if (_internal_has_delnohashfilereq_body()) {
    if (!delnohashfilereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_migratefinfilereq_body()) {
    if (!migratefinfilereq_body_->IsInitialized()) return false;
  }
  if (_internal_has_migrateunfinfilereq_body()) {
    if (!migrateunfinfilereq_body_->IsInitialized()) return false;
  }
  return true;
}

void CosReqMsg::InternalSwap(CosReqMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  request_id_.Swap(&other->request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cgi_attr_.Swap(&other->cgi_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cgi_params_.Swap(&other->cgi_params_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CosReqMsg, sub_type_)
      + sizeof(CosReqMsg::sub_type_)
      - PROTOBUF_FIELD_OFFSET(CosReqMsg, bucketcreatereq_body_)>(
          reinterpret_cast<char*>(&bucketcreatereq_body_),
          reinterpret_cast<char*>(&other->bucketcreatereq_body_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CosReqMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CosRspMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<CosRspMsg>()._has_bits_);
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static void set_has_retmsg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sub_type(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::ClientCos::BucketCreateRsp& bucketcreatersp_body(const CosRspMsg* msg);
  static void set_has_bucketcreatersp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ClientCos::BucketAttrModifyRsp& bucketattrmodifyrsp_body(const CosRspMsg* msg);
  static void set_has_bucketattrmodifyrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ClientCos::BucketAttrQueryRsp& bucketattrqueryrsp_body(const CosRspMsg* msg);
  static void set_has_bucketattrqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::ClientCos::DirCreateRsp& dircreatersp_body(const CosRspMsg* msg);
  static void set_has_dircreatersp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ClientCos::ObjAttrQueryRsp& objattrqueryrsp_body(const CosRspMsg* msg);
  static void set_has_objattrqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ClientCos::ObjAttrModifyRsp& objattrmodifyrsp_body(const CosRspMsg* msg);
  static void set_has_objattrmodifyrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::ClientCos::DeleteRsp& deletersp_body(const CosRspMsg* msg);
  static void set_has_deletersp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::ClientCos::ListRsp& listrsp_body(const CosRspMsg* msg);
  static void set_has_listrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::ClientCos::AppAttrQueryRsp& appattrqueryrsp_body(const CosRspMsg* msg);
  static void set_has_appattrqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::ClientCos::AppAttrModifyRsp& appattrmodifyrsp_body(const CosRspMsg* msg);
  static void set_has_appattrmodifyrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::ClientCos::PreviewFileAttrQueryRsp& previewfileattrqueryrsp_body(const CosRspMsg* msg);
  static void set_has_previewfileattrqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::ClientCos::ObjModTimeStampRsp& objmodtimestamprsp_body(const CosRspMsg* msg);
  static void set_has_objmodtimestamprsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::ClientCos::ListMutiobjRsp& listmutiobjrsp_body(const CosRspMsg* msg);
  static void set_has_listmutiobjrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::ClientCos::UnfinObjAttrModifyRsp& unfinobjattrmodifyrsp_body(const CosRspMsg* msg);
  static void set_has_unfinobjattrmodifyrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::ClientCos::FileBatchDelRsp& filebatchdelrsp_body(const CosRspMsg* msg);
  static void set_has_filebatchdelrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::ClientCos::ListObjVerRsp& listobjverrsp_body(const CosRspMsg* msg);
  static void set_has_listobjverrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::ClientCos::DelExpireFileRsp& delexpirefilersp_body(const CosRspMsg* msg);
  static void set_has_delexpirefilersp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::ClientCos::FileDelRsp& filedelrsp_body(const CosRspMsg* msg);
  static void set_has_filedelrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::ClientCos::SpObjAttrModifyRsp& spobjattrmodifyrsp_body(const CosRspMsg* msg);
  static void set_has_spobjattrmodifyrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::ClientCos::UploadDelmarkerRsp& uploaddelmarkerrsp_body(const CosRspMsg* msg);
  static void set_has_uploaddelmarkerrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::ClientCos::ExpireFileDelVerRsp& expirefiledelverrsp_body(const CosRspMsg* msg);
  static void set_has_expirefiledelverrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::ClientCos::ExpireFileDelNoverRsp& expirefiledelnoverrsp_body(const CosRspMsg* msg);
  static void set_has_expirefiledelnoverrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::ClientCos::SetBucketPriAttrRsp& setbucketpriattrrsp_body(const CosRspMsg* msg);
  static void set_has_setbucketpriattrrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::ClientCos::FileDownToCASRsp& filedowntocasrsp_body(const CosRspMsg* msg);
  static void set_has_filedowntocasrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::ClientCos::CasObjAttrModifyRsp& casobjattrmodifyrsp_body(const CosRspMsg* msg);
  static void set_has_casobjattrmodifyrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::ClientCos::CasFileRecoverDelRsp& casfilerecoverdelrsp_body(const CosRspMsg* msg);
  static void set_has_casfilerecoverdelrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::ClientCos::CasObjRestoreErrRsp& casobjrestoreerrrsp_body(const CosRspMsg* msg);
  static void set_has_casobjrestoreerrrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::ClientCos::SpObjAttrQueryRsp& spobjattrqueryrsp_body(const CosRspMsg* msg);
  static void set_has_spobjattrqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::ClientCos::ObjModStorageTypeRsp& objmodstoragetypersp_body(const CosRspMsg* msg);
  static void set_has_objmodstoragetypersp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::ClientCos::SetBucketWebsiteInfoRsp& setbucketwebsiteinforsp_body(const CosRspMsg* msg);
  static void set_has_setbucketwebsiteinforsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::ClientCos::SetCamAttrRsp& setcamattrrsp_body(const CosRspMsg* msg);
  static void set_has_setcamattrrsp_body(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::ClientCos::BucketCamAuthQueryRsp& bucketcamauthqueryrsp_body(const CosRspMsg* msg);
  static void set_has_bucketcamauthqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::ClientCos::AppCamAuthQueryRsp& appcamauthqueryrsp_body(const CosRspMsg* msg);
  static void set_has_appcamauthqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::ClientCos::FileUnfinishAttrQueryRsp& fileunfinishattrqueryrsp_body(const CosRspMsg* msg);
  static void set_has_fileunfinishattrqueryrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::ClientCos::ReduceLifecycleRsp& reducelifecyclersp_body(const CosRspMsg* msg);
  static void set_has_reducelifecyclersp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::ClientCos::RetrieveLifecycleRsp& retrievelifecyclersp_body(const CosRspMsg* msg);
  static void set_has_retrievelifecyclersp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::ClientCos::SetObjAclRsp& setobjaclrsp_body(const CosRspMsg* msg);
  static void set_has_setobjaclrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::ClientCos::GetObjAclRsp& getobjaclrsp_body(const CosRspMsg* msg);
  static void set_has_getobjaclrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::ClientCos::SetBucketUinRsp& setbucketuinrsp_body(const CosRspMsg* msg);
  static void set_has_setbucketuinrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::ClientCos::GetBucketUinRsp& getbucketuinrsp_body(const CosRspMsg* msg);
  static void set_has_getbucketuinrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::ClientCos::ListDirectRsp& listdirectrsp_body(const CosRspMsg* msg);
  static void set_has_listdirectrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::ClientCos::CheckObjAclRsp& checkobjaclrsp_body(const CosRspMsg* msg);
  static void set_has_checkobjaclrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::ClientCos::CasObjRestoreFinRsp& casobjrestorefinrsp_body(const CosRspMsg* msg);
  static void set_has_casobjrestorefinrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::ClientCos::SetBucketLockRsp& setbucketlockrsp_body(const CosRspMsg* msg);
  static void set_has_setbucketlockrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::ClientCos::GetBucketLockRsp& getbucketlockrsp_body(const CosRspMsg* msg);
  static void set_has_getbucketlockrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::ClientCos::SetBucketInventoryRsp& setbucketinventoryrsp_body(const CosRspMsg* msg);
  static void set_has_setbucketinventoryrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::ClientCos::GetBucketInventoryRsp& getbucketinventoryrsp_body(const CosRspMsg* msg);
  static void set_has_getbucketinventoryrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::ClientCos::COSTransToCASRsp& costranstocasrsp_body(const CosRspMsg* msg);
  static void set_has_costranstocasrsp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::ClientCos::SetMigrateRsp& setmigratersp_body(const CosRspMsg* msg);
  static void set_has_setmigratersp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::ClientCos::DelNoHashFileRsp& delnohashfilersp_body(const CosRspMsg* msg);
  static void set_has_delnohashfilersp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::ClientCos::MigrateFinFileRsp& migratefinfilersp_body(const CosRspMsg* msg);
  static void set_has_migratefinfilersp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::ClientCos::MigrateUnFinFileRsp& migrateunfinfilersp_body(const CosRspMsg* msg);
  static void set_has_migrateunfinfilersp_body(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return (((has_bits[0] & 0x00000001) ^ 0x00000001)
       | ((has_bits[1] & 0x00200000) ^ 0x00200000)) != 0;
  }
};

const ::ClientCos::BucketCreateRsp&
CosRspMsg::_Internal::bucketcreatersp_body(const CosRspMsg* msg) {
  return *msg->bucketcreatersp_body_;
}
const ::ClientCos::BucketAttrModifyRsp&
CosRspMsg::_Internal::bucketattrmodifyrsp_body(const CosRspMsg* msg) {
  return *msg->bucketattrmodifyrsp_body_;
}
const ::ClientCos::BucketAttrQueryRsp&
CosRspMsg::_Internal::bucketattrqueryrsp_body(const CosRspMsg* msg) {
  return *msg->bucketattrqueryrsp_body_;
}
const ::ClientCos::DirCreateRsp&
CosRspMsg::_Internal::dircreatersp_body(const CosRspMsg* msg) {
  return *msg->dircreatersp_body_;
}
const ::ClientCos::ObjAttrQueryRsp&
CosRspMsg::_Internal::objattrqueryrsp_body(const CosRspMsg* msg) {
  return *msg->objattrqueryrsp_body_;
}
const ::ClientCos::ObjAttrModifyRsp&
CosRspMsg::_Internal::objattrmodifyrsp_body(const CosRspMsg* msg) {
  return *msg->objattrmodifyrsp_body_;
}
const ::ClientCos::DeleteRsp&
CosRspMsg::_Internal::deletersp_body(const CosRspMsg* msg) {
  return *msg->deletersp_body_;
}
const ::ClientCos::ListRsp&
CosRspMsg::_Internal::listrsp_body(const CosRspMsg* msg) {
  return *msg->listrsp_body_;
}
const ::ClientCos::AppAttrQueryRsp&
CosRspMsg::_Internal::appattrqueryrsp_body(const CosRspMsg* msg) {
  return *msg->appattrqueryrsp_body_;
}
const ::ClientCos::AppAttrModifyRsp&
CosRspMsg::_Internal::appattrmodifyrsp_body(const CosRspMsg* msg) {
  return *msg->appattrmodifyrsp_body_;
}
const ::ClientCos::PreviewFileAttrQueryRsp&
CosRspMsg::_Internal::previewfileattrqueryrsp_body(const CosRspMsg* msg) {
  return *msg->previewfileattrqueryrsp_body_;
}
const ::ClientCos::ObjModTimeStampRsp&
CosRspMsg::_Internal::objmodtimestamprsp_body(const CosRspMsg* msg) {
  return *msg->objmodtimestamprsp_body_;
}
const ::ClientCos::ListMutiobjRsp&
CosRspMsg::_Internal::listmutiobjrsp_body(const CosRspMsg* msg) {
  return *msg->listmutiobjrsp_body_;
}
const ::ClientCos::UnfinObjAttrModifyRsp&
CosRspMsg::_Internal::unfinobjattrmodifyrsp_body(const CosRspMsg* msg) {
  return *msg->unfinobjattrmodifyrsp_body_;
}
const ::ClientCos::FileBatchDelRsp&
CosRspMsg::_Internal::filebatchdelrsp_body(const CosRspMsg* msg) {
  return *msg->filebatchdelrsp_body_;
}
const ::ClientCos::ListObjVerRsp&
CosRspMsg::_Internal::listobjverrsp_body(const CosRspMsg* msg) {
  return *msg->listobjverrsp_body_;
}
const ::ClientCos::DelExpireFileRsp&
CosRspMsg::_Internal::delexpirefilersp_body(const CosRspMsg* msg) {
  return *msg->delexpirefilersp_body_;
}
const ::ClientCos::FileDelRsp&
CosRspMsg::_Internal::filedelrsp_body(const CosRspMsg* msg) {
  return *msg->filedelrsp_body_;
}
const ::ClientCos::SpObjAttrModifyRsp&
CosRspMsg::_Internal::spobjattrmodifyrsp_body(const CosRspMsg* msg) {
  return *msg->spobjattrmodifyrsp_body_;
}
const ::ClientCos::UploadDelmarkerRsp&
CosRspMsg::_Internal::uploaddelmarkerrsp_body(const CosRspMsg* msg) {
  return *msg->uploaddelmarkerrsp_body_;
}
const ::ClientCos::ExpireFileDelVerRsp&
CosRspMsg::_Internal::expirefiledelverrsp_body(const CosRspMsg* msg) {
  return *msg->expirefiledelverrsp_body_;
}
const ::ClientCos::ExpireFileDelNoverRsp&
CosRspMsg::_Internal::expirefiledelnoverrsp_body(const CosRspMsg* msg) {
  return *msg->expirefiledelnoverrsp_body_;
}
const ::ClientCos::SetBucketPriAttrRsp&
CosRspMsg::_Internal::setbucketpriattrrsp_body(const CosRspMsg* msg) {
  return *msg->setbucketpriattrrsp_body_;
}
const ::ClientCos::FileDownToCASRsp&
CosRspMsg::_Internal::filedowntocasrsp_body(const CosRspMsg* msg) {
  return *msg->filedowntocasrsp_body_;
}
const ::ClientCos::CasObjAttrModifyRsp&
CosRspMsg::_Internal::casobjattrmodifyrsp_body(const CosRspMsg* msg) {
  return *msg->casobjattrmodifyrsp_body_;
}
const ::ClientCos::CasFileRecoverDelRsp&
CosRspMsg::_Internal::casfilerecoverdelrsp_body(const CosRspMsg* msg) {
  return *msg->casfilerecoverdelrsp_body_;
}
const ::ClientCos::CasObjRestoreErrRsp&
CosRspMsg::_Internal::casobjrestoreerrrsp_body(const CosRspMsg* msg) {
  return *msg->casobjrestoreerrrsp_body_;
}
const ::ClientCos::SpObjAttrQueryRsp&
CosRspMsg::_Internal::spobjattrqueryrsp_body(const CosRspMsg* msg) {
  return *msg->spobjattrqueryrsp_body_;
}
const ::ClientCos::ObjModStorageTypeRsp&
CosRspMsg::_Internal::objmodstoragetypersp_body(const CosRspMsg* msg) {
  return *msg->objmodstoragetypersp_body_;
}
const ::ClientCos::SetBucketWebsiteInfoRsp&
CosRspMsg::_Internal::setbucketwebsiteinforsp_body(const CosRspMsg* msg) {
  return *msg->setbucketwebsiteinforsp_body_;
}
const ::ClientCos::SetCamAttrRsp&
CosRspMsg::_Internal::setcamattrrsp_body(const CosRspMsg* msg) {
  return *msg->setcamattrrsp_body_;
}
const ::ClientCos::BucketCamAuthQueryRsp&
CosRspMsg::_Internal::bucketcamauthqueryrsp_body(const CosRspMsg* msg) {
  return *msg->bucketcamauthqueryrsp_body_;
}
const ::ClientCos::AppCamAuthQueryRsp&
CosRspMsg::_Internal::appcamauthqueryrsp_body(const CosRspMsg* msg) {
  return *msg->appcamauthqueryrsp_body_;
}
const ::ClientCos::FileUnfinishAttrQueryRsp&
CosRspMsg::_Internal::fileunfinishattrqueryrsp_body(const CosRspMsg* msg) {
  return *msg->fileunfinishattrqueryrsp_body_;
}
const ::ClientCos::ReduceLifecycleRsp&
CosRspMsg::_Internal::reducelifecyclersp_body(const CosRspMsg* msg) {
  return *msg->reducelifecyclersp_body_;
}
const ::ClientCos::RetrieveLifecycleRsp&
CosRspMsg::_Internal::retrievelifecyclersp_body(const CosRspMsg* msg) {
  return *msg->retrievelifecyclersp_body_;
}
const ::ClientCos::SetObjAclRsp&
CosRspMsg::_Internal::setobjaclrsp_body(const CosRspMsg* msg) {
  return *msg->setobjaclrsp_body_;
}
const ::ClientCos::GetObjAclRsp&
CosRspMsg::_Internal::getobjaclrsp_body(const CosRspMsg* msg) {
  return *msg->getobjaclrsp_body_;
}
const ::ClientCos::SetBucketUinRsp&
CosRspMsg::_Internal::setbucketuinrsp_body(const CosRspMsg* msg) {
  return *msg->setbucketuinrsp_body_;
}
const ::ClientCos::GetBucketUinRsp&
CosRspMsg::_Internal::getbucketuinrsp_body(const CosRspMsg* msg) {
  return *msg->getbucketuinrsp_body_;
}
const ::ClientCos::ListDirectRsp&
CosRspMsg::_Internal::listdirectrsp_body(const CosRspMsg* msg) {
  return *msg->listdirectrsp_body_;
}
const ::ClientCos::CheckObjAclRsp&
CosRspMsg::_Internal::checkobjaclrsp_body(const CosRspMsg* msg) {
  return *msg->checkobjaclrsp_body_;
}
const ::ClientCos::CasObjRestoreFinRsp&
CosRspMsg::_Internal::casobjrestorefinrsp_body(const CosRspMsg* msg) {
  return *msg->casobjrestorefinrsp_body_;
}
const ::ClientCos::SetBucketLockRsp&
CosRspMsg::_Internal::setbucketlockrsp_body(const CosRspMsg* msg) {
  return *msg->setbucketlockrsp_body_;
}
const ::ClientCos::GetBucketLockRsp&
CosRspMsg::_Internal::getbucketlockrsp_body(const CosRspMsg* msg) {
  return *msg->getbucketlockrsp_body_;
}
const ::ClientCos::SetBucketInventoryRsp&
CosRspMsg::_Internal::setbucketinventoryrsp_body(const CosRspMsg* msg) {
  return *msg->setbucketinventoryrsp_body_;
}
const ::ClientCos::GetBucketInventoryRsp&
CosRspMsg::_Internal::getbucketinventoryrsp_body(const CosRspMsg* msg) {
  return *msg->getbucketinventoryrsp_body_;
}
const ::ClientCos::COSTransToCASRsp&
CosRspMsg::_Internal::costranstocasrsp_body(const CosRspMsg* msg) {
  return *msg->costranstocasrsp_body_;
}
const ::ClientCos::SetMigrateRsp&
CosRspMsg::_Internal::setmigratersp_body(const CosRspMsg* msg) {
  return *msg->setmigratersp_body_;
}
const ::ClientCos::DelNoHashFileRsp&
CosRspMsg::_Internal::delnohashfilersp_body(const CosRspMsg* msg) {
  return *msg->delnohashfilersp_body_;
}
const ::ClientCos::MigrateFinFileRsp&
CosRspMsg::_Internal::migratefinfilersp_body(const CosRspMsg* msg) {
  return *msg->migratefinfilersp_body_;
}
const ::ClientCos::MigrateUnFinFileRsp&
CosRspMsg::_Internal::migrateunfinfilersp_body(const CosRspMsg* msg) {
  return *msg->migrateunfinfilersp_body_;
}
CosRspMsg::CosRspMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CosRspMsg)
}
CosRspMsg::CosRspMsg(const CosRspMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_retmsg()) {
    retmsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_retmsg(), 
      GetArena());
  }
  if (from._internal_has_bucketcreatersp_body()) {
    bucketcreatersp_body_ = new ::ClientCos::BucketCreateRsp(*from.bucketcreatersp_body_);
  } else {
    bucketcreatersp_body_ = nullptr;
  }
  if (from._internal_has_bucketattrmodifyrsp_body()) {
    bucketattrmodifyrsp_body_ = new ::ClientCos::BucketAttrModifyRsp(*from.bucketattrmodifyrsp_body_);
  } else {
    bucketattrmodifyrsp_body_ = nullptr;
  }
  if (from._internal_has_bucketattrqueryrsp_body()) {
    bucketattrqueryrsp_body_ = new ::ClientCos::BucketAttrQueryRsp(*from.bucketattrqueryrsp_body_);
  } else {
    bucketattrqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_dircreatersp_body()) {
    dircreatersp_body_ = new ::ClientCos::DirCreateRsp(*from.dircreatersp_body_);
  } else {
    dircreatersp_body_ = nullptr;
  }
  if (from._internal_has_objattrqueryrsp_body()) {
    objattrqueryrsp_body_ = new ::ClientCos::ObjAttrQueryRsp(*from.objattrqueryrsp_body_);
  } else {
    objattrqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_objattrmodifyrsp_body()) {
    objattrmodifyrsp_body_ = new ::ClientCos::ObjAttrModifyRsp(*from.objattrmodifyrsp_body_);
  } else {
    objattrmodifyrsp_body_ = nullptr;
  }
  if (from._internal_has_deletersp_body()) {
    deletersp_body_ = new ::ClientCos::DeleteRsp(*from.deletersp_body_);
  } else {
    deletersp_body_ = nullptr;
  }
  if (from._internal_has_listrsp_body()) {
    listrsp_body_ = new ::ClientCos::ListRsp(*from.listrsp_body_);
  } else {
    listrsp_body_ = nullptr;
  }
  if (from._internal_has_appattrqueryrsp_body()) {
    appattrqueryrsp_body_ = new ::ClientCos::AppAttrQueryRsp(*from.appattrqueryrsp_body_);
  } else {
    appattrqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_appattrmodifyrsp_body()) {
    appattrmodifyrsp_body_ = new ::ClientCos::AppAttrModifyRsp(*from.appattrmodifyrsp_body_);
  } else {
    appattrmodifyrsp_body_ = nullptr;
  }
  if (from._internal_has_previewfileattrqueryrsp_body()) {
    previewfileattrqueryrsp_body_ = new ::ClientCos::PreviewFileAttrQueryRsp(*from.previewfileattrqueryrsp_body_);
  } else {
    previewfileattrqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_objmodtimestamprsp_body()) {
    objmodtimestamprsp_body_ = new ::ClientCos::ObjModTimeStampRsp(*from.objmodtimestamprsp_body_);
  } else {
    objmodtimestamprsp_body_ = nullptr;
  }
  if (from._internal_has_listmutiobjrsp_body()) {
    listmutiobjrsp_body_ = new ::ClientCos::ListMutiobjRsp(*from.listmutiobjrsp_body_);
  } else {
    listmutiobjrsp_body_ = nullptr;
  }
  if (from._internal_has_unfinobjattrmodifyrsp_body()) {
    unfinobjattrmodifyrsp_body_ = new ::ClientCos::UnfinObjAttrModifyRsp(*from.unfinobjattrmodifyrsp_body_);
  } else {
    unfinobjattrmodifyrsp_body_ = nullptr;
  }
  if (from._internal_has_filebatchdelrsp_body()) {
    filebatchdelrsp_body_ = new ::ClientCos::FileBatchDelRsp(*from.filebatchdelrsp_body_);
  } else {
    filebatchdelrsp_body_ = nullptr;
  }
  if (from._internal_has_listobjverrsp_body()) {
    listobjverrsp_body_ = new ::ClientCos::ListObjVerRsp(*from.listobjverrsp_body_);
  } else {
    listobjverrsp_body_ = nullptr;
  }
  if (from._internal_has_delexpirefilersp_body()) {
    delexpirefilersp_body_ = new ::ClientCos::DelExpireFileRsp(*from.delexpirefilersp_body_);
  } else {
    delexpirefilersp_body_ = nullptr;
  }
  if (from._internal_has_filedelrsp_body()) {
    filedelrsp_body_ = new ::ClientCos::FileDelRsp(*from.filedelrsp_body_);
  } else {
    filedelrsp_body_ = nullptr;
  }
  if (from._internal_has_spobjattrmodifyrsp_body()) {
    spobjattrmodifyrsp_body_ = new ::ClientCos::SpObjAttrModifyRsp(*from.spobjattrmodifyrsp_body_);
  } else {
    spobjattrmodifyrsp_body_ = nullptr;
  }
  if (from._internal_has_uploaddelmarkerrsp_body()) {
    uploaddelmarkerrsp_body_ = new ::ClientCos::UploadDelmarkerRsp(*from.uploaddelmarkerrsp_body_);
  } else {
    uploaddelmarkerrsp_body_ = nullptr;
  }
  if (from._internal_has_expirefiledelverrsp_body()) {
    expirefiledelverrsp_body_ = new ::ClientCos::ExpireFileDelVerRsp(*from.expirefiledelverrsp_body_);
  } else {
    expirefiledelverrsp_body_ = nullptr;
  }
  if (from._internal_has_expirefiledelnoverrsp_body()) {
    expirefiledelnoverrsp_body_ = new ::ClientCos::ExpireFileDelNoverRsp(*from.expirefiledelnoverrsp_body_);
  } else {
    expirefiledelnoverrsp_body_ = nullptr;
  }
  if (from._internal_has_setbucketpriattrrsp_body()) {
    setbucketpriattrrsp_body_ = new ::ClientCos::SetBucketPriAttrRsp(*from.setbucketpriattrrsp_body_);
  } else {
    setbucketpriattrrsp_body_ = nullptr;
  }
  if (from._internal_has_filedowntocasrsp_body()) {
    filedowntocasrsp_body_ = new ::ClientCos::FileDownToCASRsp(*from.filedowntocasrsp_body_);
  } else {
    filedowntocasrsp_body_ = nullptr;
  }
  if (from._internal_has_casobjattrmodifyrsp_body()) {
    casobjattrmodifyrsp_body_ = new ::ClientCos::CasObjAttrModifyRsp(*from.casobjattrmodifyrsp_body_);
  } else {
    casobjattrmodifyrsp_body_ = nullptr;
  }
  if (from._internal_has_casfilerecoverdelrsp_body()) {
    casfilerecoverdelrsp_body_ = new ::ClientCos::CasFileRecoverDelRsp(*from.casfilerecoverdelrsp_body_);
  } else {
    casfilerecoverdelrsp_body_ = nullptr;
  }
  if (from._internal_has_casobjrestoreerrrsp_body()) {
    casobjrestoreerrrsp_body_ = new ::ClientCos::CasObjRestoreErrRsp(*from.casobjrestoreerrrsp_body_);
  } else {
    casobjrestoreerrrsp_body_ = nullptr;
  }
  if (from._internal_has_spobjattrqueryrsp_body()) {
    spobjattrqueryrsp_body_ = new ::ClientCos::SpObjAttrQueryRsp(*from.spobjattrqueryrsp_body_);
  } else {
    spobjattrqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_objmodstoragetypersp_body()) {
    objmodstoragetypersp_body_ = new ::ClientCos::ObjModStorageTypeRsp(*from.objmodstoragetypersp_body_);
  } else {
    objmodstoragetypersp_body_ = nullptr;
  }
  if (from._internal_has_setbucketwebsiteinforsp_body()) {
    setbucketwebsiteinforsp_body_ = new ::ClientCos::SetBucketWebsiteInfoRsp(*from.setbucketwebsiteinforsp_body_);
  } else {
    setbucketwebsiteinforsp_body_ = nullptr;
  }
  if (from._internal_has_setcamattrrsp_body()) {
    setcamattrrsp_body_ = new ::ClientCos::SetCamAttrRsp(*from.setcamattrrsp_body_);
  } else {
    setcamattrrsp_body_ = nullptr;
  }
  if (from._internal_has_bucketcamauthqueryrsp_body()) {
    bucketcamauthqueryrsp_body_ = new ::ClientCos::BucketCamAuthQueryRsp(*from.bucketcamauthqueryrsp_body_);
  } else {
    bucketcamauthqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_appcamauthqueryrsp_body()) {
    appcamauthqueryrsp_body_ = new ::ClientCos::AppCamAuthQueryRsp(*from.appcamauthqueryrsp_body_);
  } else {
    appcamauthqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_fileunfinishattrqueryrsp_body()) {
    fileunfinishattrqueryrsp_body_ = new ::ClientCos::FileUnfinishAttrQueryRsp(*from.fileunfinishattrqueryrsp_body_);
  } else {
    fileunfinishattrqueryrsp_body_ = nullptr;
  }
  if (from._internal_has_reducelifecyclersp_body()) {
    reducelifecyclersp_body_ = new ::ClientCos::ReduceLifecycleRsp(*from.reducelifecyclersp_body_);
  } else {
    reducelifecyclersp_body_ = nullptr;
  }
  if (from._internal_has_retrievelifecyclersp_body()) {
    retrievelifecyclersp_body_ = new ::ClientCos::RetrieveLifecycleRsp(*from.retrievelifecyclersp_body_);
  } else {
    retrievelifecyclersp_body_ = nullptr;
  }
  if (from._internal_has_setobjaclrsp_body()) {
    setobjaclrsp_body_ = new ::ClientCos::SetObjAclRsp(*from.setobjaclrsp_body_);
  } else {
    setobjaclrsp_body_ = nullptr;
  }
  if (from._internal_has_getobjaclrsp_body()) {
    getobjaclrsp_body_ = new ::ClientCos::GetObjAclRsp(*from.getobjaclrsp_body_);
  } else {
    getobjaclrsp_body_ = nullptr;
  }
  if (from._internal_has_setbucketuinrsp_body()) {
    setbucketuinrsp_body_ = new ::ClientCos::SetBucketUinRsp(*from.setbucketuinrsp_body_);
  } else {
    setbucketuinrsp_body_ = nullptr;
  }
  if (from._internal_has_getbucketuinrsp_body()) {
    getbucketuinrsp_body_ = new ::ClientCos::GetBucketUinRsp(*from.getbucketuinrsp_body_);
  } else {
    getbucketuinrsp_body_ = nullptr;
  }
  if (from._internal_has_listdirectrsp_body()) {
    listdirectrsp_body_ = new ::ClientCos::ListDirectRsp(*from.listdirectrsp_body_);
  } else {
    listdirectrsp_body_ = nullptr;
  }
  if (from._internal_has_checkobjaclrsp_body()) {
    checkobjaclrsp_body_ = new ::ClientCos::CheckObjAclRsp(*from.checkobjaclrsp_body_);
  } else {
    checkobjaclrsp_body_ = nullptr;
  }
  if (from._internal_has_casobjrestorefinrsp_body()) {
    casobjrestorefinrsp_body_ = new ::ClientCos::CasObjRestoreFinRsp(*from.casobjrestorefinrsp_body_);
  } else {
    casobjrestorefinrsp_body_ = nullptr;
  }
  if (from._internal_has_setbucketlockrsp_body()) {
    setbucketlockrsp_body_ = new ::ClientCos::SetBucketLockRsp(*from.setbucketlockrsp_body_);
  } else {
    setbucketlockrsp_body_ = nullptr;
  }
  if (from._internal_has_getbucketlockrsp_body()) {
    getbucketlockrsp_body_ = new ::ClientCos::GetBucketLockRsp(*from.getbucketlockrsp_body_);
  } else {
    getbucketlockrsp_body_ = nullptr;
  }
  if (from._internal_has_setbucketinventoryrsp_body()) {
    setbucketinventoryrsp_body_ = new ::ClientCos::SetBucketInventoryRsp(*from.setbucketinventoryrsp_body_);
  } else {
    setbucketinventoryrsp_body_ = nullptr;
  }
  if (from._internal_has_getbucketinventoryrsp_body()) {
    getbucketinventoryrsp_body_ = new ::ClientCos::GetBucketInventoryRsp(*from.getbucketinventoryrsp_body_);
  } else {
    getbucketinventoryrsp_body_ = nullptr;
  }
  if (from._internal_has_costranstocasrsp_body()) {
    costranstocasrsp_body_ = new ::ClientCos::COSTransToCASRsp(*from.costranstocasrsp_body_);
  } else {
    costranstocasrsp_body_ = nullptr;
  }
  if (from._internal_has_setmigratersp_body()) {
    setmigratersp_body_ = new ::ClientCos::SetMigrateRsp(*from.setmigratersp_body_);
  } else {
    setmigratersp_body_ = nullptr;
  }
  if (from._internal_has_delnohashfilersp_body()) {
    delnohashfilersp_body_ = new ::ClientCos::DelNoHashFileRsp(*from.delnohashfilersp_body_);
  } else {
    delnohashfilersp_body_ = nullptr;
  }
  if (from._internal_has_migratefinfilersp_body()) {
    migratefinfilersp_body_ = new ::ClientCos::MigrateFinFileRsp(*from.migratefinfilersp_body_);
  } else {
    migratefinfilersp_body_ = nullptr;
  }
  if (from._internal_has_migrateunfinfilersp_body()) {
    migrateunfinfilersp_body_ = new ::ClientCos::MigrateUnFinFileRsp(*from.migrateunfinfilersp_body_);
  } else {
    migrateunfinfilersp_body_ = nullptr;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&sub_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(sub_type_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.CosRspMsg)
}

void CosRspMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CosRspMsg_cosv4_5fclient_2eproto.base);
  retmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&bucketcreatersp_body_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&sub_type_) -
      reinterpret_cast<char*>(&bucketcreatersp_body_)) + sizeof(sub_type_));
}

CosRspMsg::~CosRspMsg() {
  // @@protoc_insertion_point(destructor:ClientCos.CosRspMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CosRspMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  retmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bucketcreatersp_body_;
  if (this != internal_default_instance()) delete bucketattrmodifyrsp_body_;
  if (this != internal_default_instance()) delete bucketattrqueryrsp_body_;
  if (this != internal_default_instance()) delete dircreatersp_body_;
  if (this != internal_default_instance()) delete objattrqueryrsp_body_;
  if (this != internal_default_instance()) delete objattrmodifyrsp_body_;
  if (this != internal_default_instance()) delete deletersp_body_;
  if (this != internal_default_instance()) delete listrsp_body_;
  if (this != internal_default_instance()) delete appattrqueryrsp_body_;
  if (this != internal_default_instance()) delete appattrmodifyrsp_body_;
  if (this != internal_default_instance()) delete previewfileattrqueryrsp_body_;
  if (this != internal_default_instance()) delete objmodtimestamprsp_body_;
  if (this != internal_default_instance()) delete listmutiobjrsp_body_;
  if (this != internal_default_instance()) delete unfinobjattrmodifyrsp_body_;
  if (this != internal_default_instance()) delete filebatchdelrsp_body_;
  if (this != internal_default_instance()) delete listobjverrsp_body_;
  if (this != internal_default_instance()) delete delexpirefilersp_body_;
  if (this != internal_default_instance()) delete filedelrsp_body_;
  if (this != internal_default_instance()) delete spobjattrmodifyrsp_body_;
  if (this != internal_default_instance()) delete uploaddelmarkerrsp_body_;
  if (this != internal_default_instance()) delete expirefiledelverrsp_body_;
  if (this != internal_default_instance()) delete expirefiledelnoverrsp_body_;
  if (this != internal_default_instance()) delete setbucketpriattrrsp_body_;
  if (this != internal_default_instance()) delete filedowntocasrsp_body_;
  if (this != internal_default_instance()) delete casobjattrmodifyrsp_body_;
  if (this != internal_default_instance()) delete casfilerecoverdelrsp_body_;
  if (this != internal_default_instance()) delete casobjrestoreerrrsp_body_;
  if (this != internal_default_instance()) delete spobjattrqueryrsp_body_;
  if (this != internal_default_instance()) delete objmodstoragetypersp_body_;
  if (this != internal_default_instance()) delete setbucketwebsiteinforsp_body_;
  if (this != internal_default_instance()) delete setcamattrrsp_body_;
  if (this != internal_default_instance()) delete bucketcamauthqueryrsp_body_;
  if (this != internal_default_instance()) delete appcamauthqueryrsp_body_;
  if (this != internal_default_instance()) delete fileunfinishattrqueryrsp_body_;
  if (this != internal_default_instance()) delete reducelifecyclersp_body_;
  if (this != internal_default_instance()) delete retrievelifecyclersp_body_;
  if (this != internal_default_instance()) delete setobjaclrsp_body_;
  if (this != internal_default_instance()) delete getobjaclrsp_body_;
  if (this != internal_default_instance()) delete setbucketuinrsp_body_;
  if (this != internal_default_instance()) delete getbucketuinrsp_body_;
  if (this != internal_default_instance()) delete listdirectrsp_body_;
  if (this != internal_default_instance()) delete checkobjaclrsp_body_;
  if (this != internal_default_instance()) delete casobjrestorefinrsp_body_;
  if (this != internal_default_instance()) delete setbucketlockrsp_body_;
  if (this != internal_default_instance()) delete getbucketlockrsp_body_;
  if (this != internal_default_instance()) delete setbucketinventoryrsp_body_;
  if (this != internal_default_instance()) delete getbucketinventoryrsp_body_;
  if (this != internal_default_instance()) delete costranstocasrsp_body_;
  if (this != internal_default_instance()) delete setmigratersp_body_;
  if (this != internal_default_instance()) delete delnohashfilersp_body_;
  if (this != internal_default_instance()) delete migratefinfilersp_body_;
  if (this != internal_default_instance()) delete migrateunfinfilersp_body_;
}

void CosRspMsg::ArenaDtor(void* object) {
  CosRspMsg* _this = reinterpret_cast< CosRspMsg* >(object);
  (void)_this;
}
void CosRspMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CosRspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CosRspMsg& CosRspMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CosRspMsg_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CosRspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CosRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      retmsg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(bucketcreatersp_body_ != nullptr);
      bucketcreatersp_body_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(bucketattrmodifyrsp_body_ != nullptr);
      bucketattrmodifyrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bucketattrqueryrsp_body_ != nullptr);
      bucketattrqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(dircreatersp_body_ != nullptr);
      dircreatersp_body_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(objattrqueryrsp_body_ != nullptr);
      objattrqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(objattrmodifyrsp_body_ != nullptr);
      objattrmodifyrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(deletersp_body_ != nullptr);
      deletersp_body_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(listrsp_body_ != nullptr);
      listrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(appattrqueryrsp_body_ != nullptr);
      appattrqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(appattrmodifyrsp_body_ != nullptr);
      appattrmodifyrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(previewfileattrqueryrsp_body_ != nullptr);
      previewfileattrqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(objmodtimestamprsp_body_ != nullptr);
      objmodtimestamprsp_body_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(listmutiobjrsp_body_ != nullptr);
      listmutiobjrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(unfinobjattrmodifyrsp_body_ != nullptr);
      unfinobjattrmodifyrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(filebatchdelrsp_body_ != nullptr);
      filebatchdelrsp_body_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(listobjverrsp_body_ != nullptr);
      listobjverrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(delexpirefilersp_body_ != nullptr);
      delexpirefilersp_body_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(filedelrsp_body_ != nullptr);
      filedelrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(spobjattrmodifyrsp_body_ != nullptr);
      spobjattrmodifyrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(uploaddelmarkerrsp_body_ != nullptr);
      uploaddelmarkerrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(expirefiledelverrsp_body_ != nullptr);
      expirefiledelverrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(expirefiledelnoverrsp_body_ != nullptr);
      expirefiledelnoverrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(setbucketpriattrrsp_body_ != nullptr);
      setbucketpriattrrsp_body_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(filedowntocasrsp_body_ != nullptr);
      filedowntocasrsp_body_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(casobjattrmodifyrsp_body_ != nullptr);
      casobjattrmodifyrsp_body_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(casfilerecoverdelrsp_body_ != nullptr);
      casfilerecoverdelrsp_body_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(casobjrestoreerrrsp_body_ != nullptr);
      casobjrestoreerrrsp_body_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(spobjattrqueryrsp_body_ != nullptr);
      spobjattrqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(objmodstoragetypersp_body_ != nullptr);
      objmodstoragetypersp_body_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(setbucketwebsiteinforsp_body_ != nullptr);
      setbucketwebsiteinforsp_body_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(setcamattrrsp_body_ != nullptr);
      setcamattrrsp_body_->Clear();
    }
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(bucketcamauthqueryrsp_body_ != nullptr);
      bucketcamauthqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(appcamauthqueryrsp_body_ != nullptr);
      appcamauthqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(fileunfinishattrqueryrsp_body_ != nullptr);
      fileunfinishattrqueryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(reducelifecyclersp_body_ != nullptr);
      reducelifecyclersp_body_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(retrievelifecyclersp_body_ != nullptr);
      retrievelifecyclersp_body_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(setobjaclrsp_body_ != nullptr);
      setobjaclrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(getobjaclrsp_body_ != nullptr);
      getobjaclrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(setbucketuinrsp_body_ != nullptr);
      setbucketuinrsp_body_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(getbucketuinrsp_body_ != nullptr);
      getbucketuinrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(listdirectrsp_body_ != nullptr);
      listdirectrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(checkobjaclrsp_body_ != nullptr);
      checkobjaclrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(casobjrestorefinrsp_body_ != nullptr);
      casobjrestorefinrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(setbucketlockrsp_body_ != nullptr);
      setbucketlockrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(getbucketlockrsp_body_ != nullptr);
      getbucketlockrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(setbucketinventoryrsp_body_ != nullptr);
      setbucketinventoryrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(getbucketinventoryrsp_body_ != nullptr);
      getbucketinventoryrsp_body_->Clear();
    }
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(costranstocasrsp_body_ != nullptr);
      costranstocasrsp_body_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(setmigratersp_body_ != nullptr);
      setmigratersp_body_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(delnohashfilersp_body_ != nullptr);
      delnohashfilersp_body_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(migratefinfilersp_body_ != nullptr);
      migratefinfilersp_body_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(migrateunfinfilersp_body_ != nullptr);
      migrateunfinfilersp_body_->Clear();
    }
  }
  if (cached_has_bits & 0x00600000u) {
    ::memset(&retcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sub_type_) -
        reinterpret_cast<char*>(&retcode_)) + sizeof(sub_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CosRspMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_retcode(&_has_bits_);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string retmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_retmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.CosRspMsg.retmsg");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CosRspMsg.SubType sub_type = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CosRspMsg_SubType_IsValid(val))) {
            _internal_set_sub_type(static_cast<::ClientCos::CosRspMsg_SubType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketCreateRsp BucketCreateRsp_body = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketcreatersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketAttrModifyRsp BucketAttrModifyRsp_body = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketattrmodifyrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketAttrQueryRsp BucketAttrQueryRsp_body = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketattrqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DirCreateRsp DirCreateRsp_body = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_dircreatersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjAttrQueryRsp ObjAttrQueryRsp_body = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_objattrqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjAttrModifyRsp ObjAttrModifyRsp_body = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_objattrmodifyrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DeleteRsp DeleteRsp_body = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_deletersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListRsp ListRsp_body = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_listrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.AppAttrQueryRsp AppAttrQueryRsp_body = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_appattrqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.AppAttrModifyRsp AppAttrModifyRsp_body = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_appattrmodifyrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.PreviewFileAttrQueryRsp PreviewFileAttrQueryRsp_body = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_previewfileattrqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjModTimeStampRsp ObjModTimeStampRsp_body = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_objmodtimestamprsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListMutiobjRsp ListMutiobjRsp_body = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_listmutiobjrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.UnfinObjAttrModifyRsp UnfinObjAttrModifyRsp_body = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_unfinobjattrmodifyrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileBatchDelRsp FileBatchDelRsp_body = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_filebatchdelrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListObjVerRsp ListObjVerRsp_body = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_listobjverrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelExpireFileRsp DelExpireFileRsp_body = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_delexpirefilersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileDelRsp FileDelRsp_body = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_filedelrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SpObjAttrModifyRsp SpObjAttrModifyRsp_body = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_spobjattrmodifyrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.UploadDelmarkerRsp UploadDelmarkerRsp_body = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_uploaddelmarkerrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExpireFileDelVerRsp ExpireFileDelVerRsp_body = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_expirefiledelverrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExpireFileDelNoverRsp ExpireFileDelNoverRsp_body = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_expirefiledelnoverrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketPriAttrRsp SetBucketPriAttrRsp_body = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketpriattrrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileDownToCASRsp FileDownToCASRsp_body = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_filedowntocasrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasObjAttrModifyRsp CasObjAttrModifyRsp_body = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_casobjattrmodifyrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasFileRecoverDelRsp CasFileRecoverDelRsp_body = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_casfilerecoverdelrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasObjRestoreErrRsp CasObjRestoreErrRsp_body = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_casobjrestoreerrrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SpObjAttrQueryRsp SpObjAttrQueryRsp_body = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_spobjattrqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjModStorageTypeRsp ObjModStorageTypeRsp_body = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_objmodstoragetypersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketWebsiteInfoRsp SetBucketWebsiteInfoRsp_body = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketwebsiteinforsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetCamAttrRsp SetCamAttrRsp_body = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_setcamattrrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.BucketCamAuthQueryRsp BucketCamAuthQueryRsp_body = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketcamauthqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.AppCamAuthQueryRsp AppCamAuthQueryRsp_body = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_appcamauthqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.FileUnfinishAttrQueryRsp FileUnfinishAttrQueryRsp_body = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_fileunfinishattrqueryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ReduceLifecycleRsp ReduceLifecycleRsp_body = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_reducelifecyclersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.RetrieveLifecycleRsp RetrieveLifecycleRsp_body = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_retrievelifecyclersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetObjAclRsp SetObjAclRsp_body = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_setobjaclrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetObjAclRsp GetObjAclRsp_body = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_getobjaclrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketUinRsp SetBucketUinRsp_body = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketuinrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetBucketUinRsp GetBucketUinRsp_body = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbucketuinrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListDirectRsp ListDirectRsp_body = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_listdirectrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CheckObjAclRsp CheckObjAclRsp_body = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_checkobjaclrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasObjRestoreFinRsp CasObjRestoreFinRsp_body = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_casobjrestorefinrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketLockRsp SetBucketLockRsp_body = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketlockrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetBucketLockRsp GetBucketLockRsp_body = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbucketlockrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetBucketInventoryRsp SetBucketInventoryRsp_body = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_setbucketinventoryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.GetBucketInventoryRsp GetBucketInventoryRsp_body = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbucketinventoryrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.COSTransToCASRsp COSTransToCASRsp_body = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_costranstocasrsp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SetMigrateRsp SetMigrateRsp_body = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_setmigratersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelNoHashFileRsp DelNoHashFileRsp_body = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_delnohashfilersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.MigrateFinFileRsp MigrateFinFileRsp_body = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_migratefinfilersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.MigrateUnFinFileRsp MigrateUnFinFileRsp_body = 93;
      case 93:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_migrateunfinfilersp_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CosRspMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CosRspMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[1];
  // required int32 retcode = 1;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_retcode(), target);
  }

  cached_has_bits = _has_bits_[0];
  // required string retmsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_retmsg().data(), static_cast<int>(this->_internal_retmsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.CosRspMsg.retmsg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_retmsg(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ClientCos.CosRspMsg.SubType sub_type = 10;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_sub_type(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.BucketCreateRsp BucketCreateRsp_body = 21;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::bucketcreatersp_body(this), target, stream);
  }

  // optional .ClientCos.BucketAttrModifyRsp BucketAttrModifyRsp_body = 22;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::bucketattrmodifyrsp_body(this), target, stream);
  }

  // optional .ClientCos.BucketAttrQueryRsp BucketAttrQueryRsp_body = 23;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::bucketattrqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.DirCreateRsp DirCreateRsp_body = 24;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        24, _Internal::dircreatersp_body(this), target, stream);
  }

  // optional .ClientCos.ObjAttrQueryRsp ObjAttrQueryRsp_body = 25;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::objattrqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.ObjAttrModifyRsp ObjAttrModifyRsp_body = 26;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        26, _Internal::objattrmodifyrsp_body(this), target, stream);
  }

  // optional .ClientCos.DeleteRsp DeleteRsp_body = 27;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::deletersp_body(this), target, stream);
  }

  // optional .ClientCos.ListRsp ListRsp_body = 28;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        28, _Internal::listrsp_body(this), target, stream);
  }

  // optional .ClientCos.AppAttrQueryRsp AppAttrQueryRsp_body = 29;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::appattrqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.AppAttrModifyRsp AppAttrModifyRsp_body = 30;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        30, _Internal::appattrmodifyrsp_body(this), target, stream);
  }

  // optional .ClientCos.PreviewFileAttrQueryRsp PreviewFileAttrQueryRsp_body = 31;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::previewfileattrqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.ObjModTimeStampRsp ObjModTimeStampRsp_body = 32;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        32, _Internal::objmodtimestamprsp_body(this), target, stream);
  }

  // optional .ClientCos.ListMutiobjRsp ListMutiobjRsp_body = 33;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::listmutiobjrsp_body(this), target, stream);
  }

  // optional .ClientCos.UnfinObjAttrModifyRsp UnfinObjAttrModifyRsp_body = 34;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        34, _Internal::unfinobjattrmodifyrsp_body(this), target, stream);
  }

  // optional .ClientCos.FileBatchDelRsp FileBatchDelRsp_body = 35;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::filebatchdelrsp_body(this), target, stream);
  }

  // optional .ClientCos.ListObjVerRsp ListObjVerRsp_body = 36;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        36, _Internal::listobjverrsp_body(this), target, stream);
  }

  // optional .ClientCos.DelExpireFileRsp DelExpireFileRsp_body = 37;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::delexpirefilersp_body(this), target, stream);
  }

  // optional .ClientCos.FileDelRsp FileDelRsp_body = 38;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        38, _Internal::filedelrsp_body(this), target, stream);
  }

  // optional .ClientCos.SpObjAttrModifyRsp SpObjAttrModifyRsp_body = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::spobjattrmodifyrsp_body(this), target, stream);
  }

  // optional .ClientCos.UploadDelmarkerRsp UploadDelmarkerRsp_body = 40;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        40, _Internal::uploaddelmarkerrsp_body(this), target, stream);
  }

  // optional .ClientCos.ExpireFileDelVerRsp ExpireFileDelVerRsp_body = 41;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::expirefiledelverrsp_body(this), target, stream);
  }

  // optional .ClientCos.ExpireFileDelNoverRsp ExpireFileDelNoverRsp_body = 42;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        42, _Internal::expirefiledelnoverrsp_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketPriAttrRsp SetBucketPriAttrRsp_body = 43;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::setbucketpriattrrsp_body(this), target, stream);
  }

  // optional .ClientCos.FileDownToCASRsp FileDownToCASRsp_body = 44;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        44, _Internal::filedowntocasrsp_body(this), target, stream);
  }

  // optional .ClientCos.CasObjAttrModifyRsp CasObjAttrModifyRsp_body = 45;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::casobjattrmodifyrsp_body(this), target, stream);
  }

  // optional .ClientCos.CasFileRecoverDelRsp CasFileRecoverDelRsp_body = 46;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        46, _Internal::casfilerecoverdelrsp_body(this), target, stream);
  }

  // optional .ClientCos.CasObjRestoreErrRsp CasObjRestoreErrRsp_body = 47;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::casobjrestoreerrrsp_body(this), target, stream);
  }

  // optional .ClientCos.SpObjAttrQueryRsp SpObjAttrQueryRsp_body = 48;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        48, _Internal::spobjattrqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.ObjModStorageTypeRsp ObjModStorageTypeRsp_body = 49;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::objmodstoragetypersp_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketWebsiteInfoRsp SetBucketWebsiteInfoRsp_body = 50;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        50, _Internal::setbucketwebsiteinforsp_body(this), target, stream);
  }

  // optional .ClientCos.SetCamAttrRsp SetCamAttrRsp_body = 51;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::setcamattrrsp_body(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ClientCos.BucketCamAuthQueryRsp BucketCamAuthQueryRsp_body = 52;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        52, _Internal::bucketcamauthqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.AppCamAuthQueryRsp AppCamAuthQueryRsp_body = 53;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::appcamauthqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.FileUnfinishAttrQueryRsp FileUnfinishAttrQueryRsp_body = 54;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        54, _Internal::fileunfinishattrqueryrsp_body(this), target, stream);
  }

  // optional .ClientCos.ReduceLifecycleRsp ReduceLifecycleRsp_body = 55;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::reducelifecyclersp_body(this), target, stream);
  }

  // optional .ClientCos.RetrieveLifecycleRsp RetrieveLifecycleRsp_body = 56;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        56, _Internal::retrievelifecyclersp_body(this), target, stream);
  }

  // optional .ClientCos.SetObjAclRsp SetObjAclRsp_body = 57;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        57, _Internal::setobjaclrsp_body(this), target, stream);
  }

  // optional .ClientCos.GetObjAclRsp GetObjAclRsp_body = 58;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        58, _Internal::getobjaclrsp_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketUinRsp SetBucketUinRsp_body = 59;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        59, _Internal::setbucketuinrsp_body(this), target, stream);
  }

  // optional .ClientCos.GetBucketUinRsp GetBucketUinRsp_body = 60;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        60, _Internal::getbucketuinrsp_body(this), target, stream);
  }

  // optional .ClientCos.ListDirectRsp ListDirectRsp_body = 61;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        61, _Internal::listdirectrsp_body(this), target, stream);
  }

  // optional .ClientCos.CheckObjAclRsp CheckObjAclRsp_body = 62;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        62, _Internal::checkobjaclrsp_body(this), target, stream);
  }

  // optional .ClientCos.CasObjRestoreFinRsp CasObjRestoreFinRsp_body = 63;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        63, _Internal::casobjrestorefinrsp_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketLockRsp SetBucketLockRsp_body = 64;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        64, _Internal::setbucketlockrsp_body(this), target, stream);
  }

  // optional .ClientCos.GetBucketLockRsp GetBucketLockRsp_body = 65;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        65, _Internal::getbucketlockrsp_body(this), target, stream);
  }

  // optional .ClientCos.SetBucketInventoryRsp SetBucketInventoryRsp_body = 66;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        66, _Internal::setbucketinventoryrsp_body(this), target, stream);
  }

  // optional .ClientCos.GetBucketInventoryRsp GetBucketInventoryRsp_body = 67;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        67, _Internal::getbucketinventoryrsp_body(this), target, stream);
  }

  // optional .ClientCos.COSTransToCASRsp COSTransToCASRsp_body = 68;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        68, _Internal::costranstocasrsp_body(this), target, stream);
  }

  // optional .ClientCos.SetMigrateRsp SetMigrateRsp_body = 90;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        90, _Internal::setmigratersp_body(this), target, stream);
  }

  // optional .ClientCos.DelNoHashFileRsp DelNoHashFileRsp_body = 91;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        91, _Internal::delnohashfilersp_body(this), target, stream);
  }

  // optional .ClientCos.MigrateFinFileRsp MigrateFinFileRsp_body = 92;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        92, _Internal::migratefinfilersp_body(this), target, stream);
  }

  // optional .ClientCos.MigrateUnFinFileRsp MigrateUnFinFileRsp_body = 93;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        93, _Internal::migrateunfinfilersp_body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CosRspMsg)
  return target;
}

size_t CosRspMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.CosRspMsg)
  size_t total_size = 0;

  if (_internal_has_retmsg()) {
    // required string retmsg = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_retmsg());
  }

  if (_internal_has_retcode()) {
    // required int32 retcode = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_retcode());
  }

  return total_size;
}
size_t CosRspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CosRspMsg)
  size_t total_size = 0;

  if ((((_has_bits_[0] & 0x00000001) ^ 0x00000001)
       | ((_has_bits_[1] & 0x00200000) ^ 0x00200000)) == 0) {  // All required fields are present.
    // required string retmsg = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_retmsg());

    // required int32 retcode = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_retcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional .ClientCos.BucketCreateRsp BucketCreateRsp_body = 21;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketcreatersp_body_);
    }

    // optional .ClientCos.BucketAttrModifyRsp BucketAttrModifyRsp_body = 22;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketattrmodifyrsp_body_);
    }

    // optional .ClientCos.BucketAttrQueryRsp BucketAttrQueryRsp_body = 23;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketattrqueryrsp_body_);
    }

    // optional .ClientCos.DirCreateRsp DirCreateRsp_body = 24;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dircreatersp_body_);
    }

    // optional .ClientCos.ObjAttrQueryRsp ObjAttrQueryRsp_body = 25;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objattrqueryrsp_body_);
    }

    // optional .ClientCos.ObjAttrModifyRsp ObjAttrModifyRsp_body = 26;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objattrmodifyrsp_body_);
    }

    // optional .ClientCos.DeleteRsp DeleteRsp_body = 27;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *deletersp_body_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .ClientCos.ListRsp ListRsp_body = 28;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listrsp_body_);
    }

    // optional .ClientCos.AppAttrQueryRsp AppAttrQueryRsp_body = 29;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *appattrqueryrsp_body_);
    }

    // optional .ClientCos.AppAttrModifyRsp AppAttrModifyRsp_body = 30;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *appattrmodifyrsp_body_);
    }

    // optional .ClientCos.PreviewFileAttrQueryRsp PreviewFileAttrQueryRsp_body = 31;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *previewfileattrqueryrsp_body_);
    }

    // optional .ClientCos.ObjModTimeStampRsp ObjModTimeStampRsp_body = 32;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objmodtimestamprsp_body_);
    }

    // optional .ClientCos.ListMutiobjRsp ListMutiobjRsp_body = 33;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listmutiobjrsp_body_);
    }

    // optional .ClientCos.UnfinObjAttrModifyRsp UnfinObjAttrModifyRsp_body = 34;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *unfinobjattrmodifyrsp_body_);
    }

    // optional .ClientCos.FileBatchDelRsp FileBatchDelRsp_body = 35;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *filebatchdelrsp_body_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .ClientCos.ListObjVerRsp ListObjVerRsp_body = 36;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listobjverrsp_body_);
    }

    // optional .ClientCos.DelExpireFileRsp DelExpireFileRsp_body = 37;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delexpirefilersp_body_);
    }

    // optional .ClientCos.FileDelRsp FileDelRsp_body = 38;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *filedelrsp_body_);
    }

    // optional .ClientCos.SpObjAttrModifyRsp SpObjAttrModifyRsp_body = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *spobjattrmodifyrsp_body_);
    }

    // optional .ClientCos.UploadDelmarkerRsp UploadDelmarkerRsp_body = 40;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *uploaddelmarkerrsp_body_);
    }

    // optional .ClientCos.ExpireFileDelVerRsp ExpireFileDelVerRsp_body = 41;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expirefiledelverrsp_body_);
    }

    // optional .ClientCos.ExpireFileDelNoverRsp ExpireFileDelNoverRsp_body = 42;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expirefiledelnoverrsp_body_);
    }

    // optional .ClientCos.SetBucketPriAttrRsp SetBucketPriAttrRsp_body = 43;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketpriattrrsp_body_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .ClientCos.FileDownToCASRsp FileDownToCASRsp_body = 44;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *filedowntocasrsp_body_);
    }

    // optional .ClientCos.CasObjAttrModifyRsp CasObjAttrModifyRsp_body = 45;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casobjattrmodifyrsp_body_);
    }

    // optional .ClientCos.CasFileRecoverDelRsp CasFileRecoverDelRsp_body = 46;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casfilerecoverdelrsp_body_);
    }

    // optional .ClientCos.CasObjRestoreErrRsp CasObjRestoreErrRsp_body = 47;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casobjrestoreerrrsp_body_);
    }

    // optional .ClientCos.SpObjAttrQueryRsp SpObjAttrQueryRsp_body = 48;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *spobjattrqueryrsp_body_);
    }

    // optional .ClientCos.ObjModStorageTypeRsp ObjModStorageTypeRsp_body = 49;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objmodstoragetypersp_body_);
    }

    // optional .ClientCos.SetBucketWebsiteInfoRsp SetBucketWebsiteInfoRsp_body = 50;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketwebsiteinforsp_body_);
    }

    // optional .ClientCos.SetCamAttrRsp SetCamAttrRsp_body = 51;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setcamattrrsp_body_);
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .ClientCos.BucketCamAuthQueryRsp BucketCamAuthQueryRsp_body = 52;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketcamauthqueryrsp_body_);
    }

    // optional .ClientCos.AppCamAuthQueryRsp AppCamAuthQueryRsp_body = 53;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *appcamauthqueryrsp_body_);
    }

    // optional .ClientCos.FileUnfinishAttrQueryRsp FileUnfinishAttrQueryRsp_body = 54;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fileunfinishattrqueryrsp_body_);
    }

    // optional .ClientCos.ReduceLifecycleRsp ReduceLifecycleRsp_body = 55;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reducelifecyclersp_body_);
    }

    // optional .ClientCos.RetrieveLifecycleRsp RetrieveLifecycleRsp_body = 56;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *retrievelifecyclersp_body_);
    }

    // optional .ClientCos.SetObjAclRsp SetObjAclRsp_body = 57;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setobjaclrsp_body_);
    }

    // optional .ClientCos.GetObjAclRsp GetObjAclRsp_body = 58;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getobjaclrsp_body_);
    }

    // optional .ClientCos.SetBucketUinRsp SetBucketUinRsp_body = 59;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketuinrsp_body_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .ClientCos.GetBucketUinRsp GetBucketUinRsp_body = 60;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getbucketuinrsp_body_);
    }

    // optional .ClientCos.ListDirectRsp ListDirectRsp_body = 61;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *listdirectrsp_body_);
    }

    // optional .ClientCos.CheckObjAclRsp CheckObjAclRsp_body = 62;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *checkobjaclrsp_body_);
    }

    // optional .ClientCos.CasObjRestoreFinRsp CasObjRestoreFinRsp_body = 63;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casobjrestorefinrsp_body_);
    }

    // optional .ClientCos.SetBucketLockRsp SetBucketLockRsp_body = 64;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketlockrsp_body_);
    }

    // optional .ClientCos.GetBucketLockRsp GetBucketLockRsp_body = 65;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getbucketlockrsp_body_);
    }

    // optional .ClientCos.SetBucketInventoryRsp SetBucketInventoryRsp_body = 66;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setbucketinventoryrsp_body_);
    }

    // optional .ClientCos.GetBucketInventoryRsp GetBucketInventoryRsp_body = 67;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *getbucketinventoryrsp_body_);
    }

  }
  if (cached_has_bits & 0x001f0000u) {
    // optional .ClientCos.COSTransToCASRsp COSTransToCASRsp_body = 68;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *costranstocasrsp_body_);
    }

    // optional .ClientCos.SetMigrateRsp SetMigrateRsp_body = 90;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *setmigratersp_body_);
    }

    // optional .ClientCos.DelNoHashFileRsp DelNoHashFileRsp_body = 91;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delnohashfilersp_body_);
    }

    // optional .ClientCos.MigrateFinFileRsp MigrateFinFileRsp_body = 92;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *migratefinfilersp_body_);
    }

    // optional .ClientCos.MigrateUnFinFileRsp MigrateUnFinFileRsp_body = 93;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *migrateunfinfilersp_body_);
    }

  }
  // optional .ClientCos.CosRspMsg.SubType sub_type = 10;
  if (cached_has_bits & 0x00400000u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_sub_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosRspMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CosRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CosRspMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CosRspMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CosRspMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CosRspMsg)
    MergeFrom(*source);
  }
}

void CosRspMsg::MergeFrom(const CosRspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CosRspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_retmsg(from._internal_retmsg());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_bucketcreatersp_body()->::ClientCos::BucketCreateRsp::MergeFrom(from._internal_bucketcreatersp_body());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_bucketattrmodifyrsp_body()->::ClientCos::BucketAttrModifyRsp::MergeFrom(from._internal_bucketattrmodifyrsp_body());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_bucketattrqueryrsp_body()->::ClientCos::BucketAttrQueryRsp::MergeFrom(from._internal_bucketattrqueryrsp_body());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_dircreatersp_body()->::ClientCos::DirCreateRsp::MergeFrom(from._internal_dircreatersp_body());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_objattrqueryrsp_body()->::ClientCos::ObjAttrQueryRsp::MergeFrom(from._internal_objattrqueryrsp_body());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_objattrmodifyrsp_body()->::ClientCos::ObjAttrModifyRsp::MergeFrom(from._internal_objattrmodifyrsp_body());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_deletersp_body()->::ClientCos::DeleteRsp::MergeFrom(from._internal_deletersp_body());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_listrsp_body()->::ClientCos::ListRsp::MergeFrom(from._internal_listrsp_body());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_appattrqueryrsp_body()->::ClientCos::AppAttrQueryRsp::MergeFrom(from._internal_appattrqueryrsp_body());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_appattrmodifyrsp_body()->::ClientCos::AppAttrModifyRsp::MergeFrom(from._internal_appattrmodifyrsp_body());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_previewfileattrqueryrsp_body()->::ClientCos::PreviewFileAttrQueryRsp::MergeFrom(from._internal_previewfileattrqueryrsp_body());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_objmodtimestamprsp_body()->::ClientCos::ObjModTimeStampRsp::MergeFrom(from._internal_objmodtimestamprsp_body());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_listmutiobjrsp_body()->::ClientCos::ListMutiobjRsp::MergeFrom(from._internal_listmutiobjrsp_body());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_unfinobjattrmodifyrsp_body()->::ClientCos::UnfinObjAttrModifyRsp::MergeFrom(from._internal_unfinobjattrmodifyrsp_body());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_filebatchdelrsp_body()->::ClientCos::FileBatchDelRsp::MergeFrom(from._internal_filebatchdelrsp_body());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_listobjverrsp_body()->::ClientCos::ListObjVerRsp::MergeFrom(from._internal_listobjverrsp_body());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_delexpirefilersp_body()->::ClientCos::DelExpireFileRsp::MergeFrom(from._internal_delexpirefilersp_body());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_filedelrsp_body()->::ClientCos::FileDelRsp::MergeFrom(from._internal_filedelrsp_body());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_spobjattrmodifyrsp_body()->::ClientCos::SpObjAttrModifyRsp::MergeFrom(from._internal_spobjattrmodifyrsp_body());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_uploaddelmarkerrsp_body()->::ClientCos::UploadDelmarkerRsp::MergeFrom(from._internal_uploaddelmarkerrsp_body());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_expirefiledelverrsp_body()->::ClientCos::ExpireFileDelVerRsp::MergeFrom(from._internal_expirefiledelverrsp_body());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_expirefiledelnoverrsp_body()->::ClientCos::ExpireFileDelNoverRsp::MergeFrom(from._internal_expirefiledelnoverrsp_body());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_setbucketpriattrrsp_body()->::ClientCos::SetBucketPriAttrRsp::MergeFrom(from._internal_setbucketpriattrrsp_body());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_filedowntocasrsp_body()->::ClientCos::FileDownToCASRsp::MergeFrom(from._internal_filedowntocasrsp_body());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_casobjattrmodifyrsp_body()->::ClientCos::CasObjAttrModifyRsp::MergeFrom(from._internal_casobjattrmodifyrsp_body());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_casfilerecoverdelrsp_body()->::ClientCos::CasFileRecoverDelRsp::MergeFrom(from._internal_casfilerecoverdelrsp_body());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_casobjrestoreerrrsp_body()->::ClientCos::CasObjRestoreErrRsp::MergeFrom(from._internal_casobjrestoreerrrsp_body());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_spobjattrqueryrsp_body()->::ClientCos::SpObjAttrQueryRsp::MergeFrom(from._internal_spobjattrqueryrsp_body());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_objmodstoragetypersp_body()->::ClientCos::ObjModStorageTypeRsp::MergeFrom(from._internal_objmodstoragetypersp_body());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_setbucketwebsiteinforsp_body()->::ClientCos::SetBucketWebsiteInfoRsp::MergeFrom(from._internal_setbucketwebsiteinforsp_body());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_setcamattrrsp_body()->::ClientCos::SetCamAttrRsp::MergeFrom(from._internal_setcamattrrsp_body());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_bucketcamauthqueryrsp_body()->::ClientCos::BucketCamAuthQueryRsp::MergeFrom(from._internal_bucketcamauthqueryrsp_body());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_appcamauthqueryrsp_body()->::ClientCos::AppCamAuthQueryRsp::MergeFrom(from._internal_appcamauthqueryrsp_body());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_fileunfinishattrqueryrsp_body()->::ClientCos::FileUnfinishAttrQueryRsp::MergeFrom(from._internal_fileunfinishattrqueryrsp_body());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_reducelifecyclersp_body()->::ClientCos::ReduceLifecycleRsp::MergeFrom(from._internal_reducelifecyclersp_body());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_retrievelifecyclersp_body()->::ClientCos::RetrieveLifecycleRsp::MergeFrom(from._internal_retrievelifecyclersp_body());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_setobjaclrsp_body()->::ClientCos::SetObjAclRsp::MergeFrom(from._internal_setobjaclrsp_body());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_getobjaclrsp_body()->::ClientCos::GetObjAclRsp::MergeFrom(from._internal_getobjaclrsp_body());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_setbucketuinrsp_body()->::ClientCos::SetBucketUinRsp::MergeFrom(from._internal_setbucketuinrsp_body());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_getbucketuinrsp_body()->::ClientCos::GetBucketUinRsp::MergeFrom(from._internal_getbucketuinrsp_body());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_listdirectrsp_body()->::ClientCos::ListDirectRsp::MergeFrom(from._internal_listdirectrsp_body());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_checkobjaclrsp_body()->::ClientCos::CheckObjAclRsp::MergeFrom(from._internal_checkobjaclrsp_body());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_casobjrestorefinrsp_body()->::ClientCos::CasObjRestoreFinRsp::MergeFrom(from._internal_casobjrestorefinrsp_body());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_setbucketlockrsp_body()->::ClientCos::SetBucketLockRsp::MergeFrom(from._internal_setbucketlockrsp_body());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_getbucketlockrsp_body()->::ClientCos::GetBucketLockRsp::MergeFrom(from._internal_getbucketlockrsp_body());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_setbucketinventoryrsp_body()->::ClientCos::SetBucketInventoryRsp::MergeFrom(from._internal_setbucketinventoryrsp_body());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_getbucketinventoryrsp_body()->::ClientCos::GetBucketInventoryRsp::MergeFrom(from._internal_getbucketinventoryrsp_body());
    }
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_costranstocasrsp_body()->::ClientCos::COSTransToCASRsp::MergeFrom(from._internal_costranstocasrsp_body());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_setmigratersp_body()->::ClientCos::SetMigrateRsp::MergeFrom(from._internal_setmigratersp_body());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_delnohashfilersp_body()->::ClientCos::DelNoHashFileRsp::MergeFrom(from._internal_delnohashfilersp_body());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_migratefinfilersp_body()->::ClientCos::MigrateFinFileRsp::MergeFrom(from._internal_migratefinfilersp_body());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_migrateunfinfilersp_body()->::ClientCos::MigrateUnFinFileRsp::MergeFrom(from._internal_migrateunfinfilersp_body());
    }
    if (cached_has_bits & 0x00200000u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00400000u) {
      sub_type_ = from.sub_type_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void CosRspMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CosRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosRspMsg::CopyFrom(const CosRspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CosRspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosRspMsg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_bucketattrqueryrsp_body()) {
    if (!bucketattrqueryrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_dircreatersp_body()) {
    if (!dircreatersp_body_->IsInitialized()) return false;
  }
  if (_internal_has_objattrqueryrsp_body()) {
    if (!objattrqueryrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_listrsp_body()) {
    if (!listrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_filebatchdelrsp_body()) {
    if (!filebatchdelrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_listobjverrsp_body()) {
    if (!listobjverrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_expirefiledelverrsp_body()) {
    if (!expirefiledelverrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_expirefiledelnoverrsp_body()) {
    if (!expirefiledelnoverrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_casfilerecoverdelrsp_body()) {
    if (!casfilerecoverdelrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_spobjattrqueryrsp_body()) {
    if (!spobjattrqueryrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_bucketcamauthqueryrsp_body()) {
    if (!bucketcamauthqueryrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_appcamauthqueryrsp_body()) {
    if (!appcamauthqueryrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_fileunfinishattrqueryrsp_body()) {
    if (!fileunfinishattrqueryrsp_body_->IsInitialized()) return false;
  }
  if (_internal_has_listdirectrsp_body()) {
    if (!listdirectrsp_body_->IsInitialized()) return false;
  }
  return true;
}

void CosRspMsg::InternalSwap(CosRspMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  retmsg_.Swap(&other->retmsg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CosRspMsg, sub_type_)
      + sizeof(CosRspMsg::sub_type_)
      - PROTOBUF_FIELD_OFFSET(CosRspMsg, bucketcreatersp_body_)>(
          reinterpret_cast<char*>(&bucketcreatersp_body_),
          reinterpret_cast<char*>(&other->bucketcreatersp_body_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CosRspMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Migrateinfo::_Internal {
 public:
  using HasBits = decltype(std::declval<Migrateinfo>()._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fin_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Migrateinfo::Migrateinfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.Migrateinfo)
}
Migrateinfo::Migrateinfo(const Migrateinfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&fin_time_) -
    reinterpret_cast<char*>(&status_)) + sizeof(fin_time_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.Migrateinfo)
}

void Migrateinfo::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&fin_time_) -
      reinterpret_cast<char*>(&status_)) + sizeof(fin_time_));
}

Migrateinfo::~Migrateinfo() {
  // @@protoc_insertion_point(destructor:ClientCos.Migrateinfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Migrateinfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Migrateinfo::ArenaDtor(void* object) {
  Migrateinfo* _this = reinterpret_cast< Migrateinfo* >(object);
  (void)_this;
}
void Migrateinfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Migrateinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Migrateinfo& Migrateinfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Migrateinfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void Migrateinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.Migrateinfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fin_time_) -
        reinterpret_cast<char*>(&status_)) + sizeof(fin_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Migrateinfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.MigrateStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::MigrateStatus_IsValid(val))) {
            _internal_set_status(static_cast<::ClientCos::MigrateStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 start_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_start_time(&has_bits);
          start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 fin_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fin_time(&has_bits);
          fin_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Migrateinfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.Migrateinfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.MigrateStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional uint32 start_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start_time(), target);
  }

  // optional uint32 fin_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_fin_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.Migrateinfo)
  return target;
}

size_t Migrateinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.Migrateinfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ClientCos.MigrateStatus status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
    }

    // optional uint32 start_time = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_start_time());
    }

    // optional uint32 fin_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_fin_time());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Migrateinfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.Migrateinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Migrateinfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Migrateinfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.Migrateinfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.Migrateinfo)
    MergeFrom(*source);
  }
}

void Migrateinfo::MergeFrom(const Migrateinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.Migrateinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      fin_time_ = from.fin_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Migrateinfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.Migrateinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Migrateinfo::CopyFrom(const Migrateinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.Migrateinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Migrateinfo::IsInitialized() const {
  return true;
}

void Migrateinfo::InternalSwap(Migrateinfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Migrateinfo, fin_time_)
      + sizeof(Migrateinfo::fin_time_)
      - PROTOBUF_FIELD_OFFSET(Migrateinfo, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Migrateinfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExtraAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<ExtraAttr>()._has_bits_);
  static void set_has_crossregional(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ruleobj(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rule_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ExtraAttr::ExtraAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ExtraAttr)
}
ExtraAttr::ExtraAttr(const ExtraAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossregional_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_crossregional()) {
    crossregional_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossregional(), 
      GetArena());
  }
  ruleobj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_ruleobj()) {
    ruleobj_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ruleobj(), 
      GetArena());
  }
  rule_mtime_ = from.rule_mtime_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ExtraAttr)
}

void ExtraAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExtraAttr_cosv4_5fclient_2eproto.base);
  crossregional_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ruleobj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rule_mtime_ = 0u;
}

ExtraAttr::~ExtraAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.ExtraAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExtraAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossregional_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ruleobj_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExtraAttr::ArenaDtor(void* object) {
  ExtraAttr* _this = reinterpret_cast< ExtraAttr* >(object);
  (void)_this;
}
void ExtraAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExtraAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtraAttr& ExtraAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExtraAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ExtraAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ExtraAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      crossregional_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ruleobj_.ClearNonDefaultToEmpty();
    }
  }
  rule_mtime_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtraAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes crossregional = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossregional();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes ruleobj = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ruleobj();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 rule_mtime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_rule_mtime(&has_bits);
          rule_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExtraAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ExtraAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes crossregional = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_crossregional(), target);
  }

  // optional bytes ruleobj = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_ruleobj(), target);
  }

  // optional uint32 rule_mtime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rule_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ExtraAttr)
  return target;
}

size_t ExtraAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ExtraAttr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes crossregional = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_crossregional());
    }

    // optional bytes ruleobj = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_ruleobj());
    }

    // optional uint32 rule_mtime = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_rule_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtraAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ExtraAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtraAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExtraAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ExtraAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ExtraAttr)
    MergeFrom(*source);
  }
}

void ExtraAttr::MergeFrom(const ExtraAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ExtraAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_crossregional(from._internal_crossregional());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_ruleobj(from._internal_ruleobj());
    }
    if (cached_has_bits & 0x00000004u) {
      rule_mtime_ = from.rule_mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtraAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ExtraAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraAttr::CopyFrom(const ExtraAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ExtraAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraAttr::IsInitialized() const {
  return true;
}

void ExtraAttr::InternalSwap(ExtraAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  crossregional_.Swap(&other->crossregional_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ruleobj_.Swap(&other->ruleobj_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(rule_mtime_, other->rule_mtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtraAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjExpireAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjExpireAttr>()._has_bits_);
  static void set_has_expired_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rulename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ObjExpireAttr::ObjExpireAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjExpireAttr)
}
ObjExpireAttr::ObjExpireAttr(const ObjExpireAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rulename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_rulename()) {
    rulename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rulename(), 
      GetArena());
  }
  expired_time_ = from.expired_time_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjExpireAttr)
}

void ObjExpireAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base);
  rulename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expired_time_ = 0u;
}

ObjExpireAttr::~ObjExpireAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjExpireAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjExpireAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rulename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjExpireAttr::ArenaDtor(void* object) {
  ObjExpireAttr* _this = reinterpret_cast< ObjExpireAttr* >(object);
  (void)_this;
}
void ObjExpireAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjExpireAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjExpireAttr& ObjExpireAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjExpireAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjExpireAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjExpireAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    rulename_.ClearNonDefaultToEmpty();
  }
  expired_time_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjExpireAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 expired_time = 1 [default = 0];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_expired_time(&has_bits);
          expired_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes rulename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rulename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjExpireAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjExpireAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 expired_time = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_expired_time(), target);
  }

  // optional bytes rulename = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_rulename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjExpireAttr)
  return target;
}

size_t ObjExpireAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjExpireAttr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes rulename = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_rulename());
    }

    // optional uint32 expired_time = 1 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_expired_time());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjExpireAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjExpireAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjExpireAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjExpireAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjExpireAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjExpireAttr)
    MergeFrom(*source);
  }
}

void ObjExpireAttr::MergeFrom(const ObjExpireAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjExpireAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_rulename(from._internal_rulename());
    }
    if (cached_has_bits & 0x00000002u) {
      expired_time_ = from.expired_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjExpireAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjExpireAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjExpireAttr::CopyFrom(const ObjExpireAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjExpireAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjExpireAttr::IsInitialized() const {
  return true;
}

void ObjExpireAttr::InternalSwap(ObjExpireAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  rulename_.Swap(&other->rulename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(expired_time_, other->expired_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjExpireAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UploadAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadAttr>()._has_bits_);
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UploadAttr::UploadAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  customheader_(arena),
  taglist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.UploadAttr)
}
UploadAttr::UploadAttr(const UploadAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      customheader_(from.customheader_),
      taglist_(from.taglist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.UploadAttr)
}

void UploadAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadAttr_cosv4_5fclient_2eproto.base);
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UploadAttr::~UploadAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.UploadAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadAttr::ArenaDtor(void* object) {
  UploadAttr* _this = reinterpret_cast< UploadAttr* >(object);
  (void)_this;
}
void UploadAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadAttr& UploadAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void UploadAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.UploadAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customheader_.Clear();
  taglist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    real_sha_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.CustomHeader customheader = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ObjTag taglist = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_taglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.UploadAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.CustomHeader customheader = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_customheader(i), target, stream);
  }

  // repeated .ClientCos.ObjTag taglist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_taglist(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes real_sha = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_real_sha(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.UploadAttr)
  return target;
}

size_t UploadAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.UploadAttr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.CustomHeader customheader = 1;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ObjTag taglist = 2;
  total_size += 1UL * this->_internal_taglist_size();
  for (const auto& msg : this->taglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bytes real_sha = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_real_sha());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.UploadAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.UploadAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.UploadAttr)
    MergeFrom(*source);
  }
}

void UploadAttr::MergeFrom(const UploadAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.UploadAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  customheader_.MergeFrom(from.customheader_);
  taglist_.MergeFrom(from.taglist_);
  if (from._internal_has_real_sha()) {
    _internal_set_real_sha(from._internal_real_sha());
  }
}

void UploadAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.UploadAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadAttr::CopyFrom(const UploadAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.UploadAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadAttr::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(taglist_)) return false;
  return true;
}

void UploadAttr::InternalSwap(UploadAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  customheader_.InternalSwap(&other->customheader_);
  taglist_.InternalSwap(&other->taglist_);
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CasInfo>()._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_casfilekey(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_archive_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_expired_time(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_cas_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_cas_type(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_restore_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_restore_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

CasInfo::CasInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasInfo)
}
CasInfo::CasInfo(const CasInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  casfilekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_casfilekey()) {
    casfilekey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_casfilekey(), 
      GetArena());
  }
  archive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_archive_id()) {
    archive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_archive_id(), 
      GetArena());
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&restore_tier_) -
    reinterpret_cast<char*>(&status_)) + sizeof(restore_tier_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasInfo)
}

void CasInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CasInfo_cosv4_5fclient_2eproto.base);
  casfilekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  archive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&restore_tier_) -
      reinterpret_cast<char*>(&status_)) + sizeof(restore_tier_));
}

CasInfo::~CasInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.CasInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  casfilekey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  archive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CasInfo::ArenaDtor(void* object) {
  CasInfo* _this = reinterpret_cast< CasInfo* >(object);
  (void)_this;
}
void CasInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasInfo& CasInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      casfilekey_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      archive_id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&restore_tier_) -
        reinterpret_cast<char*>(&status_)) + sizeof(restore_tier_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_status(&has_bits);
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes casfilekey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_casfilekey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes archive_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_archive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 expired_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_expired_time(&has_bits);
          expired_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cas_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_cas_status(&has_bits);
          cas_status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cas_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_cas_type(&has_bits);
          cas_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 restore_ctime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_restore_ctime(&has_bits);
          restore_ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CASRestoreTier restore_tier = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CASRestoreTier_IsValid(val))) {
            _internal_set_restore_tier(static_cast<::ClientCos::CASRestoreTier>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_status(), target);
  }

  // optional bytes casfilekey = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_casfilekey(), target);
  }

  // optional bytes archive_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_archive_id(), target);
  }

  // optional uint64 expired_time = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_expired_time(), target);
  }

  // optional uint32 cas_status = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_cas_status(), target);
  }

  // optional uint32 cas_type = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_cas_type(), target);
  }

  // optional uint64 restore_ctime = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_restore_ctime(), target);
  }

  // optional .ClientCos.CASRestoreTier restore_tier = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_restore_tier(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasInfo)
  return target;
}

size_t CasInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes casfilekey = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_casfilekey());
    }

    // optional bytes archive_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_archive_id());
    }

    // optional uint32 status = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_status());
    }

    // optional uint32 cas_status = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cas_status());
    }

    // optional uint64 expired_time = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_expired_time());
    }

    // optional uint64 restore_ctime = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_restore_ctime());
    }

    // optional uint32 cas_type = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cas_type());
    }

    // optional .ClientCos.CASRestoreTier restore_tier = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_restore_tier());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CasInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasInfo)
    MergeFrom(*source);
  }
}

void CasInfo::MergeFrom(const CasInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_casfilekey(from._internal_casfilekey());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_archive_id(from._internal_archive_id());
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      cas_status_ = from.cas_status_;
    }
    if (cached_has_bits & 0x00000010u) {
      expired_time_ = from.expired_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      restore_ctime_ = from.restore_ctime_;
    }
    if (cached_has_bits & 0x00000040u) {
      cas_type_ = from.cas_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      restore_tier_ = from.restore_tier_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CasInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasInfo::CopyFrom(const CasInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasInfo::IsInitialized() const {
  return true;
}

void CasInfo::InternalSwap(CasInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  casfilekey_.Swap(&other->casfilekey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  archive_id_.Swap(&other->archive_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CasInfo, restore_tier_)
      + sizeof(CasInfo::restore_tier_)
      - PROTOBUF_FIELD_OFFSET(CasInfo, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CasInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketCreateReq::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketCreateReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ClientCos::KeyPair& key(const BucketCreateReq* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ClientCos::OwnerInfo& bucketowner(const BucketCreateReq* msg);
  static void set_has_bucketowner(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::ClientCos::KeyPair&
BucketCreateReq::_Internal::key(const BucketCreateReq* msg) {
  return *msg->key_;
}
const ::ClientCos::OwnerInfo&
BucketCreateReq::_Internal::bucketowner(const BucketCreateReq* msg) {
  return *msg->bucketowner_;
}
BucketCreateReq::BucketCreateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  whiterefer_(arena),
  blackrefer_(arena),
  cname_(arena),
  reservedattr_(arena),
  corsrule_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketCreateReq)
}
BucketCreateReq::BucketCreateReq(const BucketCreateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      whiterefer_(from.whiterefer_),
      blackrefer_(from.blackrefer_),
      cname_(from.cname_),
      reservedattr_(from.reservedattr_),
      corsrule_(from.corsrule_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  if (from._internal_has_key()) {
    key_ = new ::ClientCos::KeyPair(*from.key_);
  } else {
    key_ = nullptr;
  }
  if (from._internal_has_bucketowner()) {
    bucketowner_ = new ::ClientCos::OwnerInfo(*from.bucketowner_);
  } else {
    bucketowner_ = nullptr;
  }
  ::memcpy(&auth_, &from.auth_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_slot_) -
    reinterpret_cast<char*>(&auth_)) + sizeof(is_slot_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketCreateReq)
}

void BucketCreateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BucketCreateReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&key_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&is_slot_) -
      reinterpret_cast<char*>(&key_)) + sizeof(is_slot_));
}

BucketCreateReq::~BucketCreateReq() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketCreateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketCreateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete bucketowner_;
}

void BucketCreateReq::ArenaDtor(void* object) {
  BucketCreateReq* _this = reinterpret_cast< BucketCreateReq* >(object);
  (void)_this;
}
void BucketCreateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketCreateReq& BucketCreateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketCreateReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  whiterefer_.Clear();
  blackrefer_.Clear();
  cname_.Clear();
  reservedattr_.Clear();
  corsrule_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(key_ != nullptr);
      key_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bucketowner_ != nullptr);
      bucketowner_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&auth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_slot_) -
        reinterpret_cast<char*>(&auth_)) + sizeof(is_slot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketCreateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.KeyPair key = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string whiterefer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_whiterefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketCreateReq.whiterefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string blackrefer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blackrefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketCreateReq.blackrefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string cname = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cname();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketCreateReq.cname");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CorsRule corsrule = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_corsrule(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo bucketOwner = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketowner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_slot = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_is_slot(&has_bits);
          is_slot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketCreateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes biz_attr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_biz_attr(), target);
  }

  // optional .ClientCos.Authority auth = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_auth(), target);
  }

  // optional .ClientCos.KeyPair key = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::key(this), target, stream);
  }

  // repeated string whiterefer = 5;
  for (int i = 0, n = this->_internal_whiterefer_size(); i < n; i++) {
    const auto& s = this->_internal_whiterefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketCreateReq.whiterefer");
    target = stream->WriteString(5, s, target);
  }

  // repeated string blackrefer = 6;
  for (int i = 0, n = this->_internal_blackrefer_size(); i < n; i++) {
    const auto& s = this->_internal_blackrefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketCreateReq.blackrefer");
    target = stream->WriteString(6, s, target);
  }

  // repeated string cname = 7;
  for (int i = 0, n = this->_internal_cname_size(); i < n; i++) {
    const auto& s = this->_internal_cname(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketCreateReq.cname");
    target = stream->WriteString(7, s, target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_reservedattr(i), target, stream);
  }

  // repeated .ClientCos.CorsRule corsrule = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_corsrule_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_corsrule(i), target, stream);
  }

  // optional .ClientCos.OwnerInfo bucketOwner = 10;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::bucketowner(this), target, stream);
  }

  // optional bool is_slot = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_is_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketCreateReq)
  return target;
}

size_t BucketCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketCreateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string whiterefer = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(whiterefer_.size());
  for (int i = 0, n = whiterefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      whiterefer_.Get(i));
  }

  // repeated string blackrefer = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(blackrefer_.size());
  for (int i = 0, n = blackrefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      blackrefer_.Get(i));
  }

  // repeated string cname = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cname_.size());
  for (int i = 0, n = cname_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cname_.Get(i));
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CorsRule corsrule = 9;
  total_size += 1UL * this->_internal_corsrule_size();
  for (const auto& msg : this->corsrule_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bytes path = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_path());
    }

    // optional bytes biz_attr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional .ClientCos.KeyPair key = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *key_);
    }

    // optional .ClientCos.OwnerInfo bucketOwner = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketowner_);
    }

    // optional .ClientCos.Authority auth = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional bool is_slot = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketCreateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketCreateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketCreateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketCreateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketCreateReq)
    MergeFrom(*source);
  }
}

void BucketCreateReq::MergeFrom(const BucketCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  whiterefer_.MergeFrom(from.whiterefer_);
  blackrefer_.MergeFrom(from.blackrefer_);
  cname_.MergeFrom(from.cname_);
  reservedattr_.MergeFrom(from.reservedattr_);
  corsrule_.MergeFrom(from.corsrule_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_key()->::ClientCos::KeyPair::MergeFrom(from._internal_key());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_bucketowner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_bucketowner());
    }
    if (cached_has_bits & 0x00000010u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_slot_ = from.is_slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BucketCreateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketCreateReq::CopyFrom(const BucketCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketCreateReq::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(corsrule_)) return false;
  return true;
}

void BucketCreateReq::InternalSwap(BucketCreateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  whiterefer_.InternalSwap(&other->whiterefer_);
  blackrefer_.InternalSwap(&other->blackrefer_);
  cname_.InternalSwap(&other->cname_);
  reservedattr_.InternalSwap(&other->reservedattr_);
  corsrule_.InternalSwap(&other->corsrule_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BucketCreateReq, is_slot_)
      + sizeof(BucketCreateReq::is_slot_)
      - PROTOBUF_FIELD_OFFSET(BucketCreateReq, key_)>(
          reinterpret_cast<char*>(&key_),
          reinterpret_cast<char*>(&other->key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketCreateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketCreateRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketCreateRsp>()._has_bits_);
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BucketCreateRsp::BucketCreateRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketCreateRsp)
}
BucketCreateRsp::BucketCreateRsp(const BucketCreateRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ctime_ = from.ctime_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketCreateRsp)
}

void BucketCreateRsp::SharedCtor() {
  ctime_ = PROTOBUF_ULONGLONG(0);
}

BucketCreateRsp::~BucketCreateRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketCreateRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketCreateRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BucketCreateRsp::ArenaDtor(void* object) {
  BucketCreateRsp* _this = reinterpret_cast< BucketCreateRsp* >(object);
  (void)_this;
}
void BucketCreateRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketCreateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketCreateRsp& BucketCreateRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketCreateRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketCreateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketCreateRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 ctime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketCreateRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketCreateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ctime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_ctime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketCreateRsp)
  return target;
}

size_t BucketCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketCreateRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 ctime = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_ctime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketCreateRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketCreateRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketCreateRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketCreateRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketCreateRsp)
    MergeFrom(*source);
  }
}

void BucketCreateRsp::MergeFrom(const BucketCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ctime()) {
    _internal_set_ctime(from._internal_ctime());
  }
}

void BucketCreateRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketCreateRsp::CopyFrom(const BucketCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketCreateRsp::IsInitialized() const {
  return true;
}

void BucketCreateRsp::InternalSwap(BucketCreateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctime_, other->ctime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketCreateRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketAttrModifyReq::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketAttrModifyReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_modflag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_crossregional(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_multi_version_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ruleobj(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_refer_able(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_emptyreferconfig(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_cname_able(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

BucketAttrModifyReq::BucketAttrModifyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  whiterefer_(arena),
  blackrefer_(arena),
  cname_(arena),
  reservedattr_(arena),
  corsrule_(arena),
  tag_(arena),
  lfattr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketAttrModifyReq)
}
BucketAttrModifyReq::BucketAttrModifyReq(const BucketAttrModifyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      whiterefer_(from.whiterefer_),
      blackrefer_(from.blackrefer_),
      cname_(from.cname_),
      reservedattr_(from.reservedattr_),
      corsrule_(from.corsrule_),
      tag_(from.tag_),
      lfattr_(from.lfattr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  crossregional_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_crossregional()) {
    crossregional_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossregional(), 
      GetArena());
  }
  ruleobj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_ruleobj()) {
    ruleobj_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ruleobj(), 
      GetArena());
  }
  ::memcpy(&modflag_, &from.modflag_,
    static_cast<size_t>(reinterpret_cast<char*>(&cname_able_) -
    reinterpret_cast<char*>(&modflag_)) + sizeof(cname_able_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketAttrModifyReq)
}

void BucketAttrModifyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  crossregional_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ruleobj_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&modflag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&cname_able_) -
      reinterpret_cast<char*>(&modflag_)) + sizeof(cname_able_));
}

BucketAttrModifyReq::~BucketAttrModifyReq() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketAttrModifyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketAttrModifyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  crossregional_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ruleobj_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BucketAttrModifyReq::ArenaDtor(void* object) {
  BucketAttrModifyReq* _this = reinterpret_cast< BucketAttrModifyReq* >(object);
  (void)_this;
}
void BucketAttrModifyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketAttrModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketAttrModifyReq& BucketAttrModifyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketAttrModifyReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketAttrModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  whiterefer_.Clear();
  blackrefer_.Clear();
  cname_.Clear();
  reservedattr_.Clear();
  corsrule_.Clear();
  tag_.Clear();
  lfattr_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      crossregional_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ruleobj_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&modflag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&multi_version_flag_) -
        reinterpret_cast<char*>(&modflag_)) + sizeof(multi_version_flag_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&refer_able_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cname_able_) -
        reinterpret_cast<char*>(&refer_able_)) + sizeof(cname_able_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketAttrModifyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 modflag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_modflag(&has_bits);
          modflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string whiterefer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_whiterefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketAttrModifyReq.whiterefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string blackrefer = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blackrefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketAttrModifyReq.blackrefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string cname = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cname();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketAttrModifyReq.cname");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CorsRule corsrule = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_corsrule(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes crossregional = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_crossregional();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 multi_version_flag = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_multi_version_flag(&has_bits);
          multi_version_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.Tag tag = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes ruleobj = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_ruleobj();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.LFAttr lfattr = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_lfattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool refer_able = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_refer_able(&has_bits);
          refer_able_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool emptyreferconfig = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_emptyreferconfig(&has_bits);
          emptyreferconfig_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool cname_able = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_cname_able(&has_bits);
          cname_able_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketAttrModifyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional uint32 modflag = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_modflag(), target);
  }

  // optional .ClientCos.Authority auth = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_auth(), target);
  }

  // optional bytes biz_attr = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_biz_attr(), target);
  }

  // optional uint32 forbid = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_forbid(), target);
  }

  // repeated string whiterefer = 6;
  for (int i = 0, n = this->_internal_whiterefer_size(); i < n; i++) {
    const auto& s = this->_internal_whiterefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketAttrModifyReq.whiterefer");
    target = stream->WriteString(6, s, target);
  }

  // repeated string blackrefer = 7;
  for (int i = 0, n = this->_internal_blackrefer_size(); i < n; i++) {
    const auto& s = this->_internal_blackrefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketAttrModifyReq.blackrefer");
    target = stream->WriteString(7, s, target);
  }

  // repeated string cname = 8;
  for (int i = 0, n = this->_internal_cname_size(); i < n; i++) {
    const auto& s = this->_internal_cname(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketAttrModifyReq.cname");
    target = stream->WriteString(8, s, target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_reservedattr(i), target, stream);
  }

  // repeated .ClientCos.CorsRule corsrule = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_corsrule_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_corsrule(i), target, stream);
  }

  // optional bytes crossregional = 11;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_crossregional(), target);
  }

  // optional uint32 multi_version_flag = 12;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_multi_version_flag(), target);
  }

  // repeated .ClientCos.Tag tag = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_tag(i), target, stream);
  }

  // optional bytes ruleobj = 14;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        14, this->_internal_ruleobj(), target);
  }

  // repeated .ClientCos.LFAttr lfattr = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_lfattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_lfattr(i), target, stream);
  }

  // optional bool refer_able = 16;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_refer_able(), target);
  }

  // optional bool emptyreferconfig = 17;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_emptyreferconfig(), target);
  }

  // optional bool cname_able = 18;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_cname_able(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketAttrModifyReq)
  return target;
}

size_t BucketAttrModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketAttrModifyReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string whiterefer = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(whiterefer_.size());
  for (int i = 0, n = whiterefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      whiterefer_.Get(i));
  }

  // repeated string blackrefer = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(blackrefer_.size());
  for (int i = 0, n = blackrefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      blackrefer_.Get(i));
  }

  // repeated string cname = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cname_.size());
  for (int i = 0, n = cname_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cname_.Get(i));
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 9;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CorsRule corsrule = 10;
  total_size += 1UL * this->_internal_corsrule_size();
  for (const auto& msg : this->corsrule_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.Tag tag = 13;
  total_size += 1UL * this->_internal_tag_size();
  for (const auto& msg : this->tag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.LFAttr lfattr = 15;
  total_size += 1UL * this->_internal_lfattr_size();
  for (const auto& msg : this->lfattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes path = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_path());
    }

    // optional bytes biz_attr = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes crossregional = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_crossregional());
    }

    // optional bytes ruleobj = 14;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_ruleobj());
    }

    // optional uint32 modflag = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_modflag());
    }

    // optional .ClientCos.Authority auth = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional uint32 forbid = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional uint32 multi_version_flag = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_multi_version_flag());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional bool refer_able = 16;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool emptyreferconfig = 17;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool cname_able = 18;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketAttrModifyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketAttrModifyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketAttrModifyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketAttrModifyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketAttrModifyReq)
    MergeFrom(*source);
  }
}

void BucketAttrModifyReq::MergeFrom(const BucketAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  whiterefer_.MergeFrom(from.whiterefer_);
  blackrefer_.MergeFrom(from.blackrefer_);
  cname_.MergeFrom(from.cname_);
  reservedattr_.MergeFrom(from.reservedattr_);
  corsrule_.MergeFrom(from.corsrule_);
  tag_.MergeFrom(from.tag_);
  lfattr_.MergeFrom(from.lfattr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_crossregional(from._internal_crossregional());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_ruleobj(from._internal_ruleobj());
    }
    if (cached_has_bits & 0x00000010u) {
      modflag_ = from.modflag_;
    }
    if (cached_has_bits & 0x00000020u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00000040u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00000080u) {
      multi_version_flag_ = from.multi_version_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      refer_able_ = from.refer_able_;
    }
    if (cached_has_bits & 0x00000200u) {
      emptyreferconfig_ = from.emptyreferconfig_;
    }
    if (cached_has_bits & 0x00000400u) {
      cname_able_ = from.cname_able_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BucketAttrModifyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketAttrModifyReq::CopyFrom(const BucketAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketAttrModifyReq::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(corsrule_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(tag_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(lfattr_)) return false;
  return true;
}

void BucketAttrModifyReq::InternalSwap(BucketAttrModifyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  whiterefer_.InternalSwap(&other->whiterefer_);
  blackrefer_.InternalSwap(&other->blackrefer_);
  cname_.InternalSwap(&other->cname_);
  reservedattr_.InternalSwap(&other->reservedattr_);
  corsrule_.InternalSwap(&other->corsrule_);
  tag_.InternalSwap(&other->tag_);
  lfattr_.InternalSwap(&other->lfattr_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  crossregional_.Swap(&other->crossregional_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ruleobj_.Swap(&other->ruleobj_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BucketAttrModifyReq, cname_able_)
      + sizeof(BucketAttrModifyReq::cname_able_)
      - PROTOBUF_FIELD_OFFSET(BucketAttrModifyReq, modflag_)>(
          reinterpret_cast<char*>(&modflag_),
          reinterpret_cast<char*>(&other->modflag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketAttrModifyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketAttrModifyRsp::_Internal {
 public:
};

BucketAttrModifyRsp::BucketAttrModifyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketAttrModifyRsp)
}
BucketAttrModifyRsp::BucketAttrModifyRsp(const BucketAttrModifyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketAttrModifyRsp)
}

void BucketAttrModifyRsp::SharedCtor() {
}

BucketAttrModifyRsp::~BucketAttrModifyRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketAttrModifyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketAttrModifyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BucketAttrModifyRsp::ArenaDtor(void* object) {
  BucketAttrModifyRsp* _this = reinterpret_cast< BucketAttrModifyRsp* >(object);
  (void)_this;
}
void BucketAttrModifyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketAttrModifyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketAttrModifyRsp& BucketAttrModifyRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketAttrModifyRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketAttrModifyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketAttrModifyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketAttrModifyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketAttrModifyRsp)
  return target;
}

size_t BucketAttrModifyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketAttrModifyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketAttrModifyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketAttrModifyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketAttrModifyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketAttrModifyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketAttrModifyRsp)
    MergeFrom(*source);
  }
}

void BucketAttrModifyRsp::MergeFrom(const BucketAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BucketAttrModifyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketAttrModifyRsp::CopyFrom(const BucketAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketAttrModifyRsp::IsInitialized() const {
  return true;
}

void BucketAttrModifyRsp::InternalSwap(BucketAttrModifyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketAttrModifyRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketAttrQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketAttrQueryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BucketAttrQueryReq::BucketAttrQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketAttrQueryReq)
}
BucketAttrQueryReq::BucketAttrQueryReq(const BucketAttrQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketAttrQueryReq)
}

void BucketAttrQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flag_ = 0u;
}

BucketAttrQueryReq::~BucketAttrQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketAttrQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketAttrQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BucketAttrQueryReq::ArenaDtor(void* object) {
  BucketAttrQueryReq* _this = reinterpret_cast< BucketAttrQueryReq* >(object);
  (void)_this;
}
void BucketAttrQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketAttrQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketAttrQueryReq& BucketAttrQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketAttrQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketAttrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  flag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketAttrQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketAttrQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional uint32 flag = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketAttrQueryReq)
  return target;
}

size_t BucketAttrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketAttrQueryReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes path = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_path());
    }

    // optional uint32 flag = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_flag());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketAttrQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketAttrQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketAttrQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketAttrQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketAttrQueryReq)
    MergeFrom(*source);
  }
}

void BucketAttrQueryReq::MergeFrom(const BucketAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      flag_ = from.flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BucketAttrQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketAttrQueryReq::CopyFrom(const BucketAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketAttrQueryReq::IsInitialized() const {
  return true;
}

void BucketAttrQueryReq::InternalSwap(BucketAttrQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flag_, other->flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketAttrQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketAttrQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketAttrQueryRsp>()._has_bits_);
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::ClientCos::ExtraAttr& extraattr(const BucketAttrQueryRsp* msg);
  static void set_has_extraattr(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_multi_version_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_refer_able(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_emptyreferconfig(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_cname_able(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_nofile(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::ClientCos::WebsiteInfo& websiteinfo(const BucketAttrQueryRsp* msg);
  static void set_has_websiteinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_visit_v4(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_bucketuin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_nslot(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::ClientCos::LockInfo& lockinfo(const BucketAttrQueryRsp* msg);
  static void set_has_lockinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_inventory(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ClientCos::Migrateinfo& migrateinfo(const BucketAttrQueryRsp* msg);
  static void set_has_migrateinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::ClientCos::ExtraAttr&
BucketAttrQueryRsp::_Internal::extraattr(const BucketAttrQueryRsp* msg) {
  return *msg->extraattr_;
}
const ::ClientCos::WebsiteInfo&
BucketAttrQueryRsp::_Internal::websiteinfo(const BucketAttrQueryRsp* msg) {
  return *msg->websiteinfo_;
}
const ::ClientCos::LockInfo&
BucketAttrQueryRsp::_Internal::lockinfo(const BucketAttrQueryRsp* msg) {
  return *msg->lockinfo_;
}
const ::ClientCos::Migrateinfo&
BucketAttrQueryRsp::_Internal::migrateinfo(const BucketAttrQueryRsp* msg) {
  return *msg->migrateinfo_;
}
BucketAttrQueryRsp::BucketAttrQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cname_(arena),
  whiterefer_(arena),
  blackrefer_(arena),
  reservedattr_(arena),
  corsrule_(arena),
  tag_(arena),
  lfattr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketAttrQueryRsp)
}
BucketAttrQueryRsp::BucketAttrQueryRsp(const BucketAttrQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      cname_(from.cname_),
      whiterefer_(from.whiterefer_),
      blackrefer_(from.blackrefer_),
      reservedattr_(from.reservedattr_),
      corsrule_(from.corsrule_),
      tag_(from.tag_),
      lfattr_(from.lfattr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  bucketuin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_bucketuin()) {
    bucketuin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucketuin(), 
      GetArena());
  }
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_inventory()) {
    inventory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inventory(), 
      GetArena());
  }
  if (from._internal_has_extraattr()) {
    extraattr_ = new ::ClientCos::ExtraAttr(*from.extraattr_);
  } else {
    extraattr_ = nullptr;
  }
  if (from._internal_has_websiteinfo()) {
    websiteinfo_ = new ::ClientCos::WebsiteInfo(*from.websiteinfo_);
  } else {
    websiteinfo_ = nullptr;
  }
  if (from._internal_has_lockinfo()) {
    lockinfo_ = new ::ClientCos::LockInfo(*from.lockinfo_);
  } else {
    lockinfo_ = nullptr;
  }
  if (from._internal_has_migrateinfo()) {
    migrateinfo_ = new ::ClientCos::Migrateinfo(*from.migrateinfo_);
  } else {
    migrateinfo_ = nullptr;
  }
  ::memcpy(&auth_, &from.auth_,
    static_cast<size_t>(reinterpret_cast<char*>(&nslot_) -
    reinterpret_cast<char*>(&auth_)) + sizeof(nslot_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketAttrQueryRsp)
}

void BucketAttrQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto.base);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucketuin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&extraattr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&nslot_) -
      reinterpret_cast<char*>(&extraattr_)) + sizeof(nslot_));
}

BucketAttrQueryRsp::~BucketAttrQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketAttrQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketAttrQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucketuin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inventory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extraattr_;
  if (this != internal_default_instance()) delete websiteinfo_;
  if (this != internal_default_instance()) delete lockinfo_;
  if (this != internal_default_instance()) delete migrateinfo_;
}

void BucketAttrQueryRsp::ArenaDtor(void* object) {
  BucketAttrQueryRsp* _this = reinterpret_cast< BucketAttrQueryRsp* >(object);
  (void)_this;
}
void BucketAttrQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketAttrQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketAttrQueryRsp& BucketAttrQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketAttrQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketAttrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cname_.Clear();
  whiterefer_.Clear();
  blackrefer_.Clear();
  reservedattr_.Clear();
  corsrule_.Clear();
  tag_.Clear();
  lfattr_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      bucketuin_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      inventory_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(extraattr_ != nullptr);
      extraattr_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(websiteinfo_ != nullptr);
      websiteinfo_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(lockinfo_ != nullptr);
      lockinfo_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(migrateinfo_ != nullptr);
      migrateinfo_->Clear();
    }
  }
  auth_ = 0;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nofile_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(nofile_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&visit_v4_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nslot_) -
        reinterpret_cast<char*>(&visit_v4_)) + sizeof(nslot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketAttrQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.Authority auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string cname = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cname();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketAttrQueryRsp.cname");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string whiterefer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_whiterefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketAttrQueryRsp.whiterefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string blackrefer = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blackrefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.BucketAttrQueryRsp.blackrefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CorsRule corsrule = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_corsrule(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExtraAttr extraattr = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_extraattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 multi_version_flag = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_multi_version_flag(&has_bits);
          multi_version_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.Tag tag = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.LFAttr lfattr = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_lfattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool refer_able = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_refer_able(&has_bits);
          refer_able_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool emptyreferconfig = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_emptyreferconfig(&has_bits);
          emptyreferconfig_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool cname_able = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_cname_able(&has_bits);
          cname_able_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool nofile = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_nofile(&has_bits);
          nofile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.WebsiteInfo websiteinfo = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_websiteinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visit_v4 = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_visit_v4(&has_bits);
          visit_v4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes bucketUin = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_bucketuin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.NSlot nslot = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::NSlot_IsValid(val))) {
            _internal_set_nslot(static_cast<::ClientCos::NSlot>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(22, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.LockInfo lockinfo = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_lockinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes inventory = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_inventory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Migrateinfo migrateinfo = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_migrateinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketAttrQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.Authority auth = 1;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_auth(), target);
  }

  // optional bytes biz_attr = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_biz_attr(), target);
  }

  // optional uint32 ctime = 3;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ctime(), target);
  }

  // optional uint32 mtime = 4;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_mtime(), target);
  }

  // repeated string cname = 5;
  for (int i = 0, n = this->_internal_cname_size(); i < n; i++) {
    const auto& s = this->_internal_cname(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketAttrQueryRsp.cname");
    target = stream->WriteString(5, s, target);
  }

  // repeated string whiterefer = 6;
  for (int i = 0, n = this->_internal_whiterefer_size(); i < n; i++) {
    const auto& s = this->_internal_whiterefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketAttrQueryRsp.whiterefer");
    target = stream->WriteString(6, s, target);
  }

  // repeated string blackrefer = 7;
  for (int i = 0, n = this->_internal_blackrefer_size(); i < n; i++) {
    const auto& s = this->_internal_blackrefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.BucketAttrQueryRsp.blackrefer");
    target = stream->WriteString(7, s, target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_reservedattr(i), target, stream);
  }

  // optional uint32 forbid = 9;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.CorsRule corsrule = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_corsrule_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_corsrule(i), target, stream);
  }

  // optional .ClientCos.ExtraAttr extraattr = 11;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::extraattr(this), target, stream);
  }

  // optional uint32 multi_version_flag = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_multi_version_flag(), target);
  }

  // repeated .ClientCos.Tag tag = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_tag(i), target, stream);
  }

  // repeated .ClientCos.LFAttr lfattr = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_lfattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_lfattr(i), target, stream);
  }

  // optional bool refer_able = 15;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_refer_able(), target);
  }

  // optional bool emptyreferconfig = 16;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_emptyreferconfig(), target);
  }

  // optional bool cname_able = 17;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_cname_able(), target);
  }

  // optional bool nofile = 18;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_nofile(), target);
  }

  // optional .ClientCos.WebsiteInfo websiteinfo = 19;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::websiteinfo(this), target, stream);
  }

  // optional bool visit_v4 = 20;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_visit_v4(), target);
  }

  // optional bytes bucketUin = 21;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        21, this->_internal_bucketuin(), target);
  }

  // optional .ClientCos.NSlot nslot = 22;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_nslot(), target);
  }

  // optional .ClientCos.LockInfo lockinfo = 23;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::lockinfo(this), target, stream);
  }

  // optional bytes inventory = 24;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        24, this->_internal_inventory(), target);
  }

  // optional .ClientCos.Migrateinfo migrateinfo = 25;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::migrateinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketAttrQueryRsp)
  return target;
}

size_t BucketAttrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketAttrQueryRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string cname = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cname_.size());
  for (int i = 0, n = cname_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cname_.Get(i));
  }

  // repeated string whiterefer = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(whiterefer_.size());
  for (int i = 0, n = whiterefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      whiterefer_.Get(i));
  }

  // repeated string blackrefer = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(blackrefer_.size());
  for (int i = 0, n = blackrefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      blackrefer_.Get(i));
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CorsRule corsrule = 10;
  total_size += 1UL * this->_internal_corsrule_size();
  for (const auto& msg : this->corsrule_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.Tag tag = 13;
  total_size += 1UL * this->_internal_tag_size();
  for (const auto& msg : this->tag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.LFAttr lfattr = 14;
  total_size += 1UL * this->_internal_lfattr_size();
  for (const auto& msg : this->lfattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes biz_attr = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes bucketUin = 21;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bucketuin());
    }

    // optional bytes inventory = 24;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_inventory());
    }

    // optional .ClientCos.ExtraAttr extraattr = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *extraattr_);
    }

    // optional .ClientCos.WebsiteInfo websiteinfo = 19;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *websiteinfo_);
    }

    // optional .ClientCos.LockInfo lockinfo = 23;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lockinfo_);
    }

    // optional .ClientCos.Migrateinfo migrateinfo = 25;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *migrateinfo_);
    }

    // optional .ClientCos.Authority auth = 1;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint32 ctime = 3;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 mtime = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

    // optional uint32 forbid = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional uint32 multi_version_flag = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_multi_version_flag());
    }

    // optional bool refer_able = 15;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool emptyreferconfig = 16;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool cname_able = 17;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool nofile = 18;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional bool visit_v4 = 20;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional .ClientCos.NSlot nslot = 22;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_nslot());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketAttrQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketAttrQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketAttrQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketAttrQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketAttrQueryRsp)
    MergeFrom(*source);
  }
}

void BucketAttrQueryRsp::MergeFrom(const BucketAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cname_.MergeFrom(from.cname_);
  whiterefer_.MergeFrom(from.whiterefer_);
  blackrefer_.MergeFrom(from.blackrefer_);
  reservedattr_.MergeFrom(from.reservedattr_);
  corsrule_.MergeFrom(from.corsrule_);
  tag_.MergeFrom(from.tag_);
  lfattr_.MergeFrom(from.lfattr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_bucketuin(from._internal_bucketuin());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_inventory(from._internal_inventory());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_extraattr()->::ClientCos::ExtraAttr::MergeFrom(from._internal_extraattr());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_websiteinfo()->::ClientCos::WebsiteInfo::MergeFrom(from._internal_websiteinfo());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_lockinfo()->::ClientCos::LockInfo::MergeFrom(from._internal_lockinfo());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_migrateinfo()->::ClientCos::Migrateinfo::MergeFrom(from._internal_migrateinfo());
    }
    if (cached_has_bits & 0x00000080u) {
      auth_ = from.auth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000200u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000400u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00000800u) {
      multi_version_flag_ = from.multi_version_flag_;
    }
    if (cached_has_bits & 0x00001000u) {
      refer_able_ = from.refer_able_;
    }
    if (cached_has_bits & 0x00002000u) {
      emptyreferconfig_ = from.emptyreferconfig_;
    }
    if (cached_has_bits & 0x00004000u) {
      cname_able_ = from.cname_able_;
    }
    if (cached_has_bits & 0x00008000u) {
      nofile_ = from.nofile_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      visit_v4_ = from.visit_v4_;
    }
    if (cached_has_bits & 0x00020000u) {
      nslot_ = from.nslot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BucketAttrQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketAttrQueryRsp::CopyFrom(const BucketAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketAttrQueryRsp::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(corsrule_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(tag_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(lfattr_)) return false;
  if (_internal_has_websiteinfo()) {
    if (!websiteinfo_->IsInitialized()) return false;
  }
  return true;
}

void BucketAttrQueryRsp::InternalSwap(BucketAttrQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  cname_.InternalSwap(&other->cname_);
  whiterefer_.InternalSwap(&other->whiterefer_);
  blackrefer_.InternalSwap(&other->blackrefer_);
  reservedattr_.InternalSwap(&other->reservedattr_);
  corsrule_.InternalSwap(&other->corsrule_);
  tag_.InternalSwap(&other->tag_);
  lfattr_.InternalSwap(&other->lfattr_);
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bucketuin_.Swap(&other->bucketuin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  inventory_.Swap(&other->inventory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BucketAttrQueryRsp, nslot_)
      + sizeof(BucketAttrQueryRsp::nslot_)
      - PROTOBUF_FIELD_OFFSET(BucketAttrQueryRsp, extraattr_)>(
          reinterpret_cast<char*>(&extraattr_),
          reinterpret_cast<char*>(&other->extraattr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketAttrQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DirCreateReq::_Internal {
 public:
  using HasBits = decltype(std::declval<DirCreateReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

DirCreateReq::DirCreateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DirCreateReq)
}
DirCreateReq::DirCreateReq(const DirCreateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.DirCreateReq)
}

void DirCreateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DirCreateReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DirCreateReq::~DirCreateReq() {
  // @@protoc_insertion_point(destructor:ClientCos.DirCreateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DirCreateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DirCreateReq::ArenaDtor(void* object) {
  DirCreateReq* _this = reinterpret_cast< DirCreateReq* >(object);
  (void)_this;
}
void DirCreateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DirCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DirCreateReq& DirCreateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DirCreateReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DirCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DirCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DirCreateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DirCreateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DirCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes biz_attr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_biz_attr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DirCreateReq)
  return target;
}

size_t DirCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DirCreateReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes biz_attr = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_biz_attr());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirCreateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DirCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DirCreateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DirCreateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DirCreateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DirCreateReq)
    MergeFrom(*source);
  }
}

void DirCreateReq::MergeFrom(const DirCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DirCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
  }
}

void DirCreateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DirCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirCreateReq::CopyFrom(const DirCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DirCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirCreateReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void DirCreateReq::InternalSwap(DirCreateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DirCreateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DirCreateRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<DirCreateRsp>()._has_bits_);
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ClientCos::ExtraAttr& extraattr(const DirCreateRsp* msg);
  static void set_has_extraattr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::ClientCos::ExtraAttr&
DirCreateRsp::_Internal::extraattr(const DirCreateRsp* msg) {
  return *msg->extraattr_;
}
DirCreateRsp::DirCreateRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DirCreateRsp)
}
DirCreateRsp::DirCreateRsp(const DirCreateRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_extraattr()) {
    extraattr_ = new ::ClientCos::ExtraAttr(*from.extraattr_);
  } else {
    extraattr_ = nullptr;
  }
  ctime_ = from.ctime_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.DirCreateRsp)
}

void DirCreateRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DirCreateRsp_cosv4_5fclient_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&extraattr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ctime_) -
      reinterpret_cast<char*>(&extraattr_)) + sizeof(ctime_));
}

DirCreateRsp::~DirCreateRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.DirCreateRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DirCreateRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete extraattr_;
}

void DirCreateRsp::ArenaDtor(void* object) {
  DirCreateRsp* _this = reinterpret_cast< DirCreateRsp* >(object);
  (void)_this;
}
void DirCreateRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DirCreateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DirCreateRsp& DirCreateRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DirCreateRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DirCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DirCreateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(extraattr_ != nullptr);
    extraattr_->Clear();
  }
  ctime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DirCreateRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint64 ctime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExtraAttr extraattr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extraattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DirCreateRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DirCreateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ctime = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_ctime(), target);
  }

  // optional .ClientCos.ExtraAttr extraattr = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::extraattr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DirCreateRsp)
  return target;
}

size_t DirCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DirCreateRsp)
  size_t total_size = 0;

  // required uint64 ctime = 1;
  if (_internal_has_ctime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_ctime());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.ExtraAttr extraattr = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extraattr_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirCreateRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DirCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DirCreateRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DirCreateRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DirCreateRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DirCreateRsp)
    MergeFrom(*source);
  }
}

void DirCreateRsp::MergeFrom(const DirCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DirCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_extraattr()->::ClientCos::ExtraAttr::MergeFrom(from._internal_extraattr());
    }
    if (cached_has_bits & 0x00000002u) {
      ctime_ = from.ctime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DirCreateRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DirCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirCreateRsp::CopyFrom(const DirCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DirCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirCreateRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void DirCreateRsp::InternalSwap(DirCreateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DirCreateRsp, ctime_)
      + sizeof(DirCreateRsp::ctime_)
      - PROTOBUF_FIELD_OFFSET(DirCreateRsp, extraattr_)>(
          reinterpret_cast<char*>(&extraattr_),
          reinterpret_cast<char*>(&other->extraattr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DirCreateRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjAttrModifyReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjAttrModifyReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_storagetype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000041) ^ 0x00000041) != 0;
  }
};

ObjAttrModifyReq::ObjAttrModifyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reservedattr_(arena),
  customheader_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjAttrModifyReq)
}
ObjAttrModifyReq::ObjAttrModifyReq(const ObjAttrModifyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      reservedattr_(from.reservedattr_),
      customheader_(from.customheader_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  storagetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storagetype()) {
    storagetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storagetype(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjAttrModifyReq)
}

void ObjAttrModifyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storagetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(mtime_));
}

ObjAttrModifyReq::~ObjAttrModifyReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjAttrModifyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjAttrModifyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storagetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjAttrModifyReq::ArenaDtor(void* object) {
  ObjAttrModifyReq* _this = reinterpret_cast< ObjAttrModifyReq* >(object);
  (void)_this;
}
void ObjAttrModifyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjAttrModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjAttrModifyReq& ObjAttrModifyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjAttrModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reservedattr_.Clear();
  customheader_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      storagetype_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      sk_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&flag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&forbid_) -
        reinterpret_cast<char*>(&flag_)) + sizeof(forbid_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&auth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mtime_) -
        reinterpret_cast<char*>(&auth_)) + sizeof(mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjAttrModifyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storagetype = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_storagetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sk = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjAttrModifyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required uint32 flag = 2;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flag(), target);
  }

  // optional bytes biz_attr = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_biz_attr(), target);
  }

  // optional uint32 forbid = 4;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_reservedattr(i), target, stream);
  }

  // repeated .ClientCos.CustomHeader customheader = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_customheader(i), target, stream);
  }

  // optional .ClientCos.Authority auth = 7;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_auth(), target);
  }

  // optional bytes real_sha = 8;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_real_sha(), target);
  }

  // optional bytes version = 9;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_version(), target);
  }

  // optional bytes storagetype = 10;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_storagetype(), target);
  }

  // optional uint32 mtime = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_mtime(), target);
  }

  // optional bytes sk = 12;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_sk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjAttrModifyReq)
  return target;
}

size_t ObjAttrModifyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ObjAttrModifyReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_flag()) {
    // required uint32 flag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());
  }

  return total_size;
}
size_t ObjAttrModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjAttrModifyReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000041) ^ 0x00000041) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required uint32 flag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ReservedAttr reservedattr = 5;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 6;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003eu) {
    // optional bytes biz_attr = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes real_sha = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional bytes version = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes storagetype = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storagetype());
    }

    // optional bytes sk = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sk());
    }

  }
  // optional uint32 forbid = 4;
  if (cached_has_bits & 0x00000080u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_forbid());
  }

  if (cached_has_bits & 0x00000300u) {
    // optional .ClientCos.Authority auth = 7;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional uint32 mtime = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjAttrModifyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjAttrModifyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjAttrModifyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjAttrModifyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjAttrModifyReq)
    MergeFrom(*source);
  }
}

void ObjAttrModifyReq::MergeFrom(const ObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reservedattr_.MergeFrom(from.reservedattr_);
  customheader_.MergeFrom(from.customheader_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_storagetype(from._internal_storagetype());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000040u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000080u) {
      forbid_ = from.forbid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00000200u) {
      mtime_ = from.mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjAttrModifyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjAttrModifyReq::CopyFrom(const ObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjAttrModifyReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  return true;
}

void ObjAttrModifyReq::InternalSwap(ObjAttrModifyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reservedattr_.InternalSwap(&other->reservedattr_);
  customheader_.InternalSwap(&other->customheader_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storagetype_.Swap(&other->storagetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjAttrModifyReq, mtime_)
      + sizeof(ObjAttrModifyReq::mtime_)
      - PROTOBUF_FIELD_OFFSET(ObjAttrModifyReq, flag_)>(
          reinterpret_cast<char*>(&flag_),
          reinterpret_cast<char*>(&other->flag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjAttrModifyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjAttrModifyRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjAttrModifyRsp>()._has_bits_);
  static const ::ClientCos::ExtraAttr& extraattr(const ObjAttrModifyRsp* msg);
  static void set_has_extraattr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ClientCos::ExtraAttr&
ObjAttrModifyRsp::_Internal::extraattr(const ObjAttrModifyRsp* msg) {
  return *msg->extraattr_;
}
ObjAttrModifyRsp::ObjAttrModifyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjAttrModifyRsp)
}
ObjAttrModifyRsp::ObjAttrModifyRsp(const ObjAttrModifyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_extraattr()) {
    extraattr_ = new ::ClientCos::ExtraAttr(*from.extraattr_);
  } else {
    extraattr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjAttrModifyRsp)
}

void ObjAttrModifyRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto.base);
  extraattr_ = nullptr;
}

ObjAttrModifyRsp::~ObjAttrModifyRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjAttrModifyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjAttrModifyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete extraattr_;
}

void ObjAttrModifyRsp::ArenaDtor(void* object) {
  ObjAttrModifyRsp* _this = reinterpret_cast< ObjAttrModifyRsp* >(object);
  (void)_this;
}
void ObjAttrModifyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjAttrModifyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjAttrModifyRsp& ObjAttrModifyRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjAttrModifyRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjAttrModifyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(extraattr_ != nullptr);
    extraattr_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjAttrModifyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.ExtraAttr extraattr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_extraattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjAttrModifyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.ExtraAttr extraattr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::extraattr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjAttrModifyRsp)
  return target;
}

size_t ObjAttrModifyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjAttrModifyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.ExtraAttr extraattr = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extraattr_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjAttrModifyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjAttrModifyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjAttrModifyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjAttrModifyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjAttrModifyRsp)
    MergeFrom(*source);
  }
}

void ObjAttrModifyRsp::MergeFrom(const ObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_extraattr()) {
    _internal_mutable_extraattr()->::ClientCos::ExtraAttr::MergeFrom(from._internal_extraattr());
  }
}

void ObjAttrModifyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjAttrModifyRsp::CopyFrom(const ObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjAttrModifyRsp::IsInitialized() const {
  return true;
}

void ObjAttrModifyRsp::InternalSwap(ObjAttrModifyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(extraattr_, other->extraattr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjAttrModifyRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpObjAttrModifyReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SpObjAttrModifyReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ClientCos::ObjExpireAttr& objexpireattr(const SpObjAttrModifyReq* msg);
  static void set_has_objexpireattr(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000083) ^ 0x00000083) != 0;
  }
};

const ::ClientCos::ObjExpireAttr&
SpObjAttrModifyReq::_Internal::objexpireattr(const SpObjAttrModifyReq* msg) {
  return *msg->objexpireattr_;
}
SpObjAttrModifyReq::SpObjAttrModifyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reservedattr_(arena),
  customheader_(arena),
  customheader_plat_(arena),
  taglist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SpObjAttrModifyReq)
}
SpObjAttrModifyReq::SpObjAttrModifyReq(const SpObjAttrModifyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      reservedattr_(from.reservedattr_),
      customheader_(from.customheader_),
      customheader_plat_(from.customheader_plat_),
      taglist_(from.taglist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  if (from._internal_has_objexpireattr()) {
    objexpireattr_ = new ::ClientCos::ObjExpireAttr(*from.objexpireattr_);
  } else {
    objexpireattr_ = nullptr;
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(auth_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.SpObjAttrModifyReq)
}

void SpObjAttrModifyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&objexpireattr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&auth_) -
      reinterpret_cast<char*>(&objexpireattr_)) + sizeof(auth_));
}

SpObjAttrModifyReq::~SpObjAttrModifyReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SpObjAttrModifyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpObjAttrModifyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete objexpireattr_;
}

void SpObjAttrModifyReq::ArenaDtor(void* object) {
  SpObjAttrModifyReq* _this = reinterpret_cast< SpObjAttrModifyReq* >(object);
  (void)_this;
}
void SpObjAttrModifyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpObjAttrModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpObjAttrModifyReq& SpObjAttrModifyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SpObjAttrModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SpObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reservedattr_.Clear();
  customheader_.Clear();
  customheader_plat_.Clear();
  taglist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sk_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(objexpireattr_ != nullptr);
      objexpireattr_->Clear();
    }
  }
  flag_ = 0u;
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(auth_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpObjAttrModifyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes sk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 6 [default = 0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 7 [default = 0];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader_plat = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader_plat(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ObjTag taglist = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_taglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjExpireAttr objexpireattr = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_objexpireattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpObjAttrModifyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SpObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required uint32 flag = 2;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flag(), target);
  }

  // required bytes sk = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sk(), target);
  }

  // optional bytes version = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_version(), target);
  }

  // optional bytes biz_attr = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_biz_attr(), target);
  }

  // optional uint32 ctime = 6 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ctime(), target);
  }

  // optional uint32 mtime = 7 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_mtime(), target);
  }

  // optional uint32 forbid = 8;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_reservedattr(i), target, stream);
  }

  // optional .ClientCos.Authority auth = 10;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_auth(), target);
  }

  // repeated .ClientCos.CustomHeader customheader = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_customheader(i), target, stream);
  }

  // repeated .ClientCos.CustomHeader customheader_plat = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_plat_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_customheader_plat(i), target, stream);
  }

  // optional bytes real_sha = 13;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        13, this->_internal_real_sha(), target);
  }

  // optional bytes storage_type = 14;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        14, this->_internal_storage_type(), target);
  }

  // repeated .ClientCos.ObjTag taglist = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_taglist(i), target, stream);
  }

  // optional .ClientCos.ObjExpireAttr objexpireattr = 16;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::objexpireattr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SpObjAttrModifyReq)
  return target;
}

size_t SpObjAttrModifyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.SpObjAttrModifyReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_sk()) {
    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());
  }

  if (_internal_has_flag()) {
    // required uint32 flag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());
  }

  return total_size;
}
size_t SpObjAttrModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SpObjAttrModifyReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000083) ^ 0x00000083) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());

    // required uint32 flag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ReservedAttr reservedattr = 9;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 11;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader_plat = 12;
  total_size += 1UL * this->_internal_customheader_plat_size();
  for (const auto& msg : this->customheader_plat_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ObjTag taglist = 15;
  total_size += 1UL * this->_internal_taglist_size();
  for (const auto& msg : this->taglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007cu) {
    // optional bytes version = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes biz_attr = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes real_sha = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional bytes storage_type = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional .ClientCos.ObjExpireAttr objexpireattr = 16;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objexpireattr_);
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional uint32 ctime = 6 [default = 0];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 mtime = 7 [default = 0];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

    // optional uint32 forbid = 8;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional .ClientCos.Authority auth = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpObjAttrModifyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SpObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SpObjAttrModifyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpObjAttrModifyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SpObjAttrModifyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SpObjAttrModifyReq)
    MergeFrom(*source);
  }
}

void SpObjAttrModifyReq::MergeFrom(const SpObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SpObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reservedattr_.MergeFrom(from.reservedattr_);
  customheader_.MergeFrom(from.customheader_);
  customheader_plat_.MergeFrom(from.customheader_plat_);
  taglist_.MergeFrom(from.taglist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_objexpireattr()->::ClientCos::ObjExpireAttr::MergeFrom(from._internal_objexpireattr());
    }
    if (cached_has_bits & 0x00000080u) {
      flag_ = from.flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000200u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000400u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00000800u) {
      auth_ = from.auth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpObjAttrModifyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SpObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpObjAttrModifyReq::CopyFrom(const SpObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SpObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpObjAttrModifyReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_plat_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(taglist_)) return false;
  return true;
}

void SpObjAttrModifyReq::InternalSwap(SpObjAttrModifyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reservedattr_.InternalSwap(&other->reservedattr_);
  customheader_.InternalSwap(&other->customheader_);
  customheader_plat_.InternalSwap(&other->customheader_plat_);
  taglist_.InternalSwap(&other->taglist_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpObjAttrModifyReq, auth_)
      + sizeof(SpObjAttrModifyReq::auth_)
      - PROTOBUF_FIELD_OFFSET(SpObjAttrModifyReq, objexpireattr_)>(
          reinterpret_cast<char*>(&objexpireattr_),
          reinterpret_cast<char*>(&other->objexpireattr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpObjAttrModifyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpObjAttrModifyRsp::_Internal {
 public:
};

SpObjAttrModifyRsp::SpObjAttrModifyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SpObjAttrModifyRsp)
}
SpObjAttrModifyRsp::SpObjAttrModifyRsp(const SpObjAttrModifyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SpObjAttrModifyRsp)
}

void SpObjAttrModifyRsp::SharedCtor() {
}

SpObjAttrModifyRsp::~SpObjAttrModifyRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SpObjAttrModifyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpObjAttrModifyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SpObjAttrModifyRsp::ArenaDtor(void* object) {
  SpObjAttrModifyRsp* _this = reinterpret_cast< SpObjAttrModifyRsp* >(object);
  (void)_this;
}
void SpObjAttrModifyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpObjAttrModifyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpObjAttrModifyRsp& SpObjAttrModifyRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpObjAttrModifyRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SpObjAttrModifyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SpObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpObjAttrModifyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpObjAttrModifyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SpObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SpObjAttrModifyRsp)
  return target;
}

size_t SpObjAttrModifyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SpObjAttrModifyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpObjAttrModifyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SpObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SpObjAttrModifyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpObjAttrModifyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SpObjAttrModifyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SpObjAttrModifyRsp)
    MergeFrom(*source);
  }
}

void SpObjAttrModifyRsp::MergeFrom(const SpObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SpObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SpObjAttrModifyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SpObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpObjAttrModifyRsp::CopyFrom(const SpObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SpObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpObjAttrModifyRsp::IsInitialized() const {
  return true;
}

void SpObjAttrModifyRsp::InternalSwap(SpObjAttrModifyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpObjAttrModifyRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjAttrQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjAttrQueryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ObjAttrQueryReq::ObjAttrQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjAttrQueryReq)
}
ObjAttrQueryReq::ObjAttrQueryReq(const ObjAttrQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjAttrQueryReq)
}

void ObjAttrQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ObjAttrQueryReq::~ObjAttrQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjAttrQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjAttrQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjAttrQueryReq::ArenaDtor(void* object) {
  ObjAttrQueryReq* _this = reinterpret_cast< ObjAttrQueryReq* >(object);
  (void)_this;
}
void ObjAttrQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjAttrQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjAttrQueryReq& ObjAttrQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjAttrQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjAttrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjAttrQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjAttrQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjAttrQueryReq)
  return target;
}

size_t ObjAttrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjAttrQueryReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes path = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_path());
    }

    // optional bytes version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjAttrQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjAttrQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjAttrQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjAttrQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjAttrQueryReq)
    MergeFrom(*source);
  }
}

void ObjAttrQueryReq::MergeFrom(const ObjAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void ObjAttrQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjAttrQueryReq::CopyFrom(const ObjAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjAttrQueryReq::IsInitialized() const {
  return true;
}

void ObjAttrQueryReq::InternalSwap(ObjAttrQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjAttrQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjAttrQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjAttrQueryRsp>()._has_bits_);
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_file_length(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_slicesize(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_delete_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_islatest(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_upload_source(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ClientCos::CasInfo& casinfo(const ObjAttrQueryRsp* msg);
  static void set_has_casinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::ClientCos::SseInfo& sseinfo(const ObjAttrQueryRsp* msg);
  static void set_has_sseinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_tagnum(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::ClientCos::ObjExpireAttr& objexpireattr(const ObjAttrQueryRsp* msg);
  static void set_has_objexpireattr(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_fast_upload_key(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::ClientCos::OwnerInfo& owner(const ObjAttrQueryRsp* msg);
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_lock_expired_time(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::ClientCos::LockInfo& lockinfo(const ObjAttrQueryRsp* msg);
  static void set_has_lockinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_is_v4(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00003001) ^ 0x00003001) != 0;
  }
};

const ::ClientCos::CasInfo&
ObjAttrQueryRsp::_Internal::casinfo(const ObjAttrQueryRsp* msg) {
  return *msg->casinfo_;
}
const ::ClientCos::SseInfo&
ObjAttrQueryRsp::_Internal::sseinfo(const ObjAttrQueryRsp* msg) {
  return *msg->sseinfo_;
}
const ::ClientCos::ObjExpireAttr&
ObjAttrQueryRsp::_Internal::objexpireattr(const ObjAttrQueryRsp* msg) {
  return *msg->objexpireattr_;
}
const ::ClientCos::OwnerInfo&
ObjAttrQueryRsp::_Internal::owner(const ObjAttrQueryRsp* msg) {
  return *msg->owner_;
}
const ::ClientCos::LockInfo&
ObjAttrQueryRsp::_Internal::lockinfo(const ObjAttrQueryRsp* msg) {
  return *msg->lockinfo_;
}
ObjAttrQueryRsp::ObjAttrQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reservedattr_(arena),
  customheader_(arena),
  taglist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjAttrQueryRsp)
}
ObjAttrQueryRsp::ObjAttrQueryRsp(const ObjAttrQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      reservedattr_(from.reservedattr_),
      customheader_(from.customheader_),
      taglist_(from.taglist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha()) {
    sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  upload_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_upload_source()) {
    upload_source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_upload_source(), 
      GetArena());
  }
  fast_upload_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fast_upload_key()) {
    fast_upload_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fast_upload_key(), 
      GetArena());
  }
  if (from._internal_has_casinfo()) {
    casinfo_ = new ::ClientCos::CasInfo(*from.casinfo_);
  } else {
    casinfo_ = nullptr;
  }
  if (from._internal_has_sseinfo()) {
    sseinfo_ = new ::ClientCos::SseInfo(*from.sseinfo_);
  } else {
    sseinfo_ = nullptr;
  }
  if (from._internal_has_objexpireattr()) {
    objexpireattr_ = new ::ClientCos::ObjExpireAttr(*from.objexpireattr_);
  } else {
    objexpireattr_ = nullptr;
  }
  if (from._internal_has_owner()) {
    owner_ = new ::ClientCos::OwnerInfo(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  if (from._internal_has_lockinfo()) {
    lockinfo_ = new ::ClientCos::LockInfo(*from.lockinfo_);
  } else {
    lockinfo_ = nullptr;
  }
  ::memcpy(&ctime_, &from.ctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&lock_expired_time_) -
    reinterpret_cast<char*>(&ctime_)) + sizeof(lock_expired_time_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjAttrQueryRsp)
}

void ObjAttrQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto.base);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fast_upload_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&casinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&lock_expired_time_) -
      reinterpret_cast<char*>(&casinfo_)) + sizeof(lock_expired_time_));
}

ObjAttrQueryRsp::~ObjAttrQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjAttrQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjAttrQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fast_upload_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete casinfo_;
  if (this != internal_default_instance()) delete sseinfo_;
  if (this != internal_default_instance()) delete objexpireattr_;
  if (this != internal_default_instance()) delete owner_;
  if (this != internal_default_instance()) delete lockinfo_;
}

void ObjAttrQueryRsp::ArenaDtor(void* object) {
  ObjAttrQueryRsp* _this = reinterpret_cast< ObjAttrQueryRsp* >(object);
  (void)_this;
}
void ObjAttrQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjAttrQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjAttrQueryRsp& ObjAttrQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjAttrQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjAttrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reservedattr_.Clear();
  customheader_.Clear();
  taglist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      upload_source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      fast_upload_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(casinfo_ != nullptr);
      casinfo_->Clear();
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(sseinfo_ != nullptr);
      sseinfo_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(objexpireattr_ != nullptr);
      objexpireattr_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(owner_ != nullptr);
      owner_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(lockinfo_ != nullptr);
      lockinfo_->Clear();
    }
  }
  if (cached_has_bits & 0x0000f000u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_length_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(file_length_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&forbid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tagnum_) -
        reinterpret_cast<char*>(&forbid_)) + sizeof(tagnum_));
  }
  lock_expired_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjAttrQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes biz_attr = 1 [default = ""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 ctime = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 3 [default = 0];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_length = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_file_length(&has_bits);
          file_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sha = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 slicesize = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_slicesize(&has_bits);
          slicesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool delete_marker = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_delete_marker(&has_bits);
          delete_marker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool islatest = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_islatest(&has_bits);
          islatest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes upload_source = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_upload_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasInfo casinfo = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_casinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SseInfo sseinfo = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_sseinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 tagnum = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_tagnum(&has_bits);
          tagnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjExpireAttr objexpireattr = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_objexpireattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ObjTag taglist = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_taglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      // optional string fast_upload_key = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_fast_upload_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ObjAttrQueryRsp.fast_upload_key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo owner = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 lock_expired_time = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_lock_expired_time(&has_bits);
          lock_expired_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.LockInfo lockinfo = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_lockinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_v4 = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_is_v4(&has_bits);
          is_v4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjAttrQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes biz_attr = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_biz_attr(), target);
  }

  // required uint32 ctime = 2 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ctime(), target);
  }

  // required uint32 mtime = 3 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mtime(), target);
  }

  // optional uint64 file_size = 4;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_file_size(), target);
  }

  // optional uint64 file_length = 5;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_file_length(), target);
  }

  // optional bytes sha = 6;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_sha(), target);
  }

  // optional uint32 forbid = 7;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_reservedattr(i), target, stream);
  }

  // optional .ClientCos.Authority auth = 9;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_auth(), target);
  }

  // repeated .ClientCos.CustomHeader customheader = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_customheader(i), target, stream);
  }

  // optional bytes real_sha = 11;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_real_sha(), target);
  }

  // optional uint32 slicesize = 12;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_slicesize(), target);
  }

  // optional uint32 type = 13;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_type(), target);
  }

  // optional bytes storage_type = 14;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        14, this->_internal_storage_type(), target);
  }

  // optional bytes version = 15;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        15, this->_internal_version(), target);
  }

  // optional bool delete_marker = 16;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_delete_marker(), target);
  }

  // optional bool islatest = 17;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_islatest(), target);
  }

  // optional bytes upload_source = 18;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        18, this->_internal_upload_source(), target);
  }

  // optional .ClientCos.CasInfo casinfo = 19;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::casinfo(this), target, stream);
  }

  // optional .ClientCos.SseInfo sseinfo = 20;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::sseinfo(this), target, stream);
  }

  // optional uint32 tagnum = 21;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_tagnum(), target);
  }

  // optional .ClientCos.ObjExpireAttr objexpireattr = 22;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::objexpireattr(this), target, stream);
  }

  // repeated .ClientCos.ObjTag taglist = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, this->_internal_taglist(i), target, stream);
  }

  // optional string fast_upload_key = 24;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fast_upload_key().data(), static_cast<int>(this->_internal_fast_upload_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ObjAttrQueryRsp.fast_upload_key");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_fast_upload_key(), target);
  }

  // optional .ClientCos.OwnerInfo owner = 25;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::owner(this), target, stream);
  }

  // optional uint64 lock_expired_time = 26;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(26, this->_internal_lock_expired_time(), target);
  }

  // optional .ClientCos.LockInfo lockinfo = 27;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::lockinfo(this), target, stream);
  }

  // optional bool is_v4 = 28;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_is_v4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjAttrQueryRsp)
  return target;
}

size_t ObjAttrQueryRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ObjAttrQueryRsp)
  size_t total_size = 0;

  if (_internal_has_biz_attr()) {
    // required bytes biz_attr = 1 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_biz_attr());
  }

  if (_internal_has_ctime()) {
    // required uint32 ctime = 2 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ctime());
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 3 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t ObjAttrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjAttrQueryRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00003001) ^ 0x00003001) == 0) {  // All required fields are present.
    // required bytes biz_attr = 1 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_biz_attr());

    // required uint32 ctime = 2 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ctime());

    // required uint32 mtime = 3 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 10;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ObjTag taglist = 23;
  total_size += 2UL * this->_internal_taglist_size();
  for (const auto& msg : this->taglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional bytes sha = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sha());
    }

    // optional bytes real_sha = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional bytes storage_type = 14;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional bytes version = 15;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes upload_source = 18;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_upload_source());
    }

    // optional string fast_upload_key = 24;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_fast_upload_key());
    }

    // optional .ClientCos.CasInfo casinfo = 19;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casinfo_);
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional .ClientCos.SseInfo sseinfo = 20;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sseinfo_);
    }

    // optional .ClientCos.ObjExpireAttr objexpireattr = 22;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objexpireattr_);
    }

    // optional .ClientCos.OwnerInfo owner = 25;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *owner_);
    }

    // optional .ClientCos.LockInfo lockinfo = 27;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lockinfo_);
    }

  }
  if (cached_has_bits & 0x0000c000u) {
    // optional uint64 file_size = 4;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_size());
    }

    // optional uint64 file_length = 5;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_length());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional uint32 forbid = 7;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional .ClientCos.Authority auth = 9;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional uint32 slicesize = 12;
    if (cached_has_bits & 0x00040000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_slicesize());
    }

    // optional uint32 type = 13;
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

    // optional bool delete_marker = 16;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool islatest = 17;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool is_v4 = 28;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional uint32 tagnum = 21;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_tagnum());
    }

  }
  // optional uint64 lock_expired_time = 26;
  if (cached_has_bits & 0x01000000u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_lock_expired_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjAttrQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjAttrQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjAttrQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjAttrQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjAttrQueryRsp)
    MergeFrom(*source);
  }
}

void ObjAttrQueryRsp::MergeFrom(const ObjAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reservedattr_.MergeFrom(from.reservedattr_);
  customheader_.MergeFrom(from.customheader_);
  taglist_.MergeFrom(from.taglist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sha(from._internal_sha());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_upload_source(from._internal_upload_source());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_fast_upload_key(from._internal_fast_upload_key());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_casinfo()->::ClientCos::CasInfo::MergeFrom(from._internal_casinfo());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_sseinfo()->::ClientCos::SseInfo::MergeFrom(from._internal_sseinfo());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_objexpireattr()->::ClientCos::ObjExpireAttr::MergeFrom(from._internal_objexpireattr());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_owner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_owner());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_lockinfo()->::ClientCos::LockInfo::MergeFrom(from._internal_lockinfo());
    }
    if (cached_has_bits & 0x00001000u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00002000u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00004000u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00008000u) {
      file_length_ = from.file_length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00020000u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00040000u) {
      slicesize_ = from.slicesize_;
    }
    if (cached_has_bits & 0x00080000u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00100000u) {
      delete_marker_ = from.delete_marker_;
    }
    if (cached_has_bits & 0x00200000u) {
      islatest_ = from.islatest_;
    }
    if (cached_has_bits & 0x00400000u) {
      is_v4_ = from.is_v4_;
    }
    if (cached_has_bits & 0x00800000u) {
      tagnum_ = from.tagnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x01000000u) {
    _internal_set_lock_expired_time(from._internal_lock_expired_time());
  }
}

void ObjAttrQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjAttrQueryRsp::CopyFrom(const ObjAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjAttrQueryRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(taglist_)) return false;
  return true;
}

void ObjAttrQueryRsp::InternalSwap(ObjAttrQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reservedattr_.InternalSwap(&other->reservedattr_);
  customheader_.InternalSwap(&other->customheader_);
  taglist_.InternalSwap(&other->taglist_);
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha_.Swap(&other->sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  upload_source_.Swap(&other->upload_source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fast_upload_key_.Swap(&other->fast_upload_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjAttrQueryRsp, lock_expired_time_)
      + sizeof(ObjAttrQueryRsp::lock_expired_time_)
      - PROTOBUF_FIELD_OFFSET(ObjAttrQueryRsp, casinfo_)>(
          reinterpret_cast<char*>(&casinfo_),
          reinterpret_cast<char*>(&other->casinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjAttrQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteReq::_Internal {
 public:
  using HasBits = decltype(std::declval<DeleteReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

DeleteReq::DeleteReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DeleteReq)
}
DeleteReq::DeleteReq(const DeleteReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.DeleteReq)
}

void DeleteReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteReq::~DeleteReq() {
  // @@protoc_insertion_point(destructor:ClientCos.DeleteReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteReq::ArenaDtor(void* object) {
  DeleteReq* _this = reinterpret_cast< DeleteReq* >(object);
  (void)_this;
}
void DeleteReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteReq& DeleteReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DeleteReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DeleteReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DeleteReq)
  return target;
}

size_t DeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DeleteReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DeleteReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DeleteReq)
    MergeFrom(*source);
  }
}

void DeleteReq::MergeFrom(const DeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_path()) {
    _internal_set_path(from._internal_path());
  }
}

void DeleteReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteReq::CopyFrom(const DeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void DeleteReq::InternalSwap(DeleteReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteRsp::_Internal {
 public:
};

DeleteRsp::DeleteRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DeleteRsp)
}
DeleteRsp::DeleteRsp(const DeleteRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.DeleteRsp)
}

void DeleteRsp::SharedCtor() {
}

DeleteRsp::~DeleteRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.DeleteRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteRsp::ArenaDtor(void* object) {
  DeleteRsp* _this = reinterpret_cast< DeleteRsp* >(object);
  (void)_this;
}
void DeleteRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRsp& DeleteRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DeleteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DeleteRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DeleteRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DeleteRsp)
  return target;
}

size_t DeleteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DeleteRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DeleteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DeleteRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DeleteRsp)
    MergeFrom(*source);
  }
}

void DeleteRsp::MergeFrom(const DeleteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DeleteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DeleteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRsp::CopyFrom(const DeleteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DeleteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRsp::IsInitialized() const {
  return true;
}

void DeleteRsp::InternalSwap(DeleteRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ListReq>()._has_bits_);
  static void set_has_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_delimiter(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_need_x_cos(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_need_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000004f) ^ 0x0000004f) != 0;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ListReq::_i_give_permission_to_break_this_code_default_delimiter_{{{"/", 1}}, {nullptr}};
ListReq::ListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListReq)
}
ListReq::ListReq(const ListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_prefix()) {
    prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prefix(), 
      GetArena());
  }
  offset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_offset()) {
    offset_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_offset(), 
      GetArena());
  }
  delimiter_.UnsafeSetDefault(nullptr);
  if (from._internal_has_delimiter()) {
    delimiter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, from._internal_delimiter(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListReq)
}

void ListReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListReq_cosv4_5fclient_2eproto.base);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  offset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.UnsafeSetDefault(nullptr);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&need_tag_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(need_tag_));
  count_ = 200u;
}

ListReq::~ListReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  offset_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.DestroyNoArena(nullptr);
}

void ListReq::ArenaDtor(void* object) {
  ListReq* _this = reinterpret_cast< ListReq* >(object);
  (void)_this;
}
void ListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListReq& ListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      prefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      offset_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      delimiter_.ClearToDefault(::ClientCos::ListReq::_i_give_permission_to_break_this_code_default_delimiter_, GetArena());
       }
  }
  ::memset(&flag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&need_tag_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(need_tag_));
  count_ = 200u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes prefix = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes offset = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_offset();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes delimiter = 3 [default = "/"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_delimiter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 count = 4 [default = 200];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool flag = 5 [default = false];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool need_x_cos = 6 [default = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_need_x_cos(&has_bits);
          need_x_cos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool need_tag = 7 [default = false];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_need_tag(&has_bits);
          need_tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes prefix = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_prefix(), target);
  }

  // required bytes offset = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_offset(), target);
  }

  // required bytes delimiter = 3 [default = "/"];
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_delimiter(), target);
  }

  // required uint32 count = 4 [default = 200];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_count(), target);
  }

  // required bool flag = 5 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_flag(), target);
  }

  // optional bool need_x_cos = 6 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_need_x_cos(), target);
  }

  // optional bool need_tag = 7 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_need_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListReq)
  return target;
}

size_t ListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ListReq)
  size_t total_size = 0;

  if (_internal_has_prefix()) {
    // required bytes prefix = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prefix());
  }

  if (_internal_has_offset()) {
    // required bytes offset = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_offset());
  }

  if (_internal_has_delimiter()) {
    // required bytes delimiter = 3 [default = "/"];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delimiter());
  }

  if (_internal_has_flag()) {
    // required bool flag = 5 [default = false];
    total_size += 1 + 1;
  }

  if (_internal_has_count()) {
    // required uint32 count = 4 [default = 200];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  return total_size;
}
size_t ListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000004f) ^ 0x0000004f) == 0) {  // All required fields are present.
    // required bytes prefix = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prefix());

    // required bytes offset = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_offset());

    // required bytes delimiter = 3 [default = "/"];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delimiter());

    // required bool flag = 5 [default = false];
    total_size += 1 + 1;

    // required uint32 count = 4 [default = 200];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000030u) {
    // optional bool need_x_cos = 6 [default = false];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool need_tag = 7 [default = false];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListReq)
    MergeFrom(*source);
  }
}

void ListReq::MergeFrom(const ListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_prefix(from._internal_prefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_offset(from._internal_offset());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_delimiter(from._internal_delimiter());
    }
    if (cached_has_bits & 0x00000008u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      need_x_cos_ = from.need_x_cos_;
    }
    if (cached_has_bits & 0x00000020u) {
      need_tag_ = from.need_tag_;
    }
    if (cached_has_bits & 0x00000040u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReq::CopyFrom(const ListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ListReq::InternalSwap(ListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prefix_.Swap(&other->prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  offset_.Swap(&other->offset_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  delimiter_.Swap(&other->delimiter_, nullptr, GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListReq, need_tag_)
      + sizeof(ListReq::need_tag_)
      - PROTOBUF_FIELD_OFFSET(ListReq, flag_)>(
          reinterpret_cast<char*>(&flag_),
          reinterpret_cast<char*>(&other->flag_));
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ListRsp>()._has_bits_);
  static void set_has_next_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_listover(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ListRsp::ListRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  objs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListRsp)
}
ListRsp::ListRsp(const ListRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      objs_(from.objs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_offset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_offset()) {
    next_offset_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_offset(), 
      GetArena());
  }
  listover_ = from.listover_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListRsp)
}

void ListRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListRsp_cosv4_5fclient_2eproto.base);
  next_offset_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  listover_ = false;
}

ListRsp::~ListRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ListRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_offset_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRsp::ArenaDtor(void* object) {
  ListRsp* _this = reinterpret_cast< ListRsp* >(object);
  (void)_this;
}
void ListRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListRsp& ListRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    next_offset_.ClearNonDefaultToEmpty();
  }
  listover_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.ObjItem objs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes next_offset = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_offset();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool listover = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_listover(&has_bits);
          listover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.ObjItem objs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_objs(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes next_offset = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_next_offset(), target);
  }

  // optional bool listover = 3 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_listover(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListRsp)
  return target;
}

size_t ListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ObjItem objs = 1;
  total_size += 1UL * this->_internal_objs_size();
  for (const auto& msg : this->objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes next_offset = 2 [default = ""];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_next_offset());
    }

    // optional bool listover = 3 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListRsp)
    MergeFrom(*source);
  }
}

void ListRsp::MergeFrom(const ListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objs_.MergeFrom(from.objs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_next_offset(from._internal_next_offset());
    }
    if (cached_has_bits & 0x00000002u) {
      listover_ = from.listover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRsp::CopyFrom(const ListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRsp::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(objs_)) return false;
  return true;
}

void ListRsp::InternalSwap(ListRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  objs_.InternalSwap(&other->objs_);
  next_offset_.Swap(&other->next_offset_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(listover_, other->listover_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListMutiobjReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ListMutiobjReq>()._has_bits_);
  static void set_has_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_objnamemarker(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uploadkeymarker(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delimiter(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000002f) ^ 0x0000002f) != 0;
  }
};

ListMutiobjReq::ListMutiobjReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListMutiobjReq)
}
ListMutiobjReq::ListMutiobjReq(const ListMutiobjReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_prefix()) {
    prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prefix(), 
      GetArena());
  }
  objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_objnamemarker()) {
    objnamemarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_objnamemarker(), 
      GetArena());
  }
  uploadkeymarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uploadkeymarker()) {
    uploadkeymarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uploadkeymarker(), 
      GetArena());
  }
  delimiter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_delimiter()) {
    delimiter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delimiter(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListMutiobjReq)
}

void ListMutiobjReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListMutiobjReq_cosv4_5fclient_2eproto.base);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadkeymarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flag_ = false;
  count_ = 200u;
}

ListMutiobjReq::~ListMutiobjReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ListMutiobjReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListMutiobjReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objnamemarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadkeymarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListMutiobjReq::ArenaDtor(void* object) {
  ListMutiobjReq* _this = reinterpret_cast< ListMutiobjReq* >(object);
  (void)_this;
}
void ListMutiobjReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMutiobjReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMutiobjReq& ListMutiobjReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListMutiobjReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListMutiobjReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListMutiobjReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      prefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      objnamemarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      uploadkeymarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      delimiter_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    flag_ = false;
    count_ = 200u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMutiobjReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes prefix = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes objnamemarker = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_objnamemarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes uploadkeymarker = 3 [default = ""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_uploadkeymarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes delimiter = 4 [default = ""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_delimiter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 count = 5 [default = 200];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool flag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListMutiobjReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListMutiobjReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes prefix = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_prefix(), target);
  }

  // required bytes objnamemarker = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_objnamemarker(), target);
  }

  // required bytes uploadkeymarker = 3 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_uploadkeymarker(), target);
  }

  // required bytes delimiter = 4 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_delimiter(), target);
  }

  // required uint32 count = 5 [default = 200];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_count(), target);
  }

  // optional bool flag = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListMutiobjReq)
  return target;
}

size_t ListMutiobjReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ListMutiobjReq)
  size_t total_size = 0;

  if (_internal_has_prefix()) {
    // required bytes prefix = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prefix());
  }

  if (_internal_has_objnamemarker()) {
    // required bytes objnamemarker = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_objnamemarker());
  }

  if (_internal_has_uploadkeymarker()) {
    // required bytes uploadkeymarker = 3 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uploadkeymarker());
  }

  if (_internal_has_delimiter()) {
    // required bytes delimiter = 4 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delimiter());
  }

  if (_internal_has_count()) {
    // required uint32 count = 5 [default = 200];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  return total_size;
}
size_t ListMutiobjReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListMutiobjReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000002f) ^ 0x0000002f) == 0) {  // All required fields are present.
    // required bytes prefix = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prefix());

    // required bytes objnamemarker = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_objnamemarker());

    // required bytes uploadkeymarker = 3 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uploadkeymarker());

    // required bytes delimiter = 4 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delimiter());

    // required uint32 count = 5 [default = 200];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool flag = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMutiobjReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListMutiobjReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMutiobjReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListMutiobjReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListMutiobjReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListMutiobjReq)
    MergeFrom(*source);
  }
}

void ListMutiobjReq::MergeFrom(const ListMutiobjReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListMutiobjReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_prefix(from._internal_prefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_objnamemarker(from._internal_objnamemarker());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_uploadkeymarker(from._internal_uploadkeymarker());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_delimiter(from._internal_delimiter());
    }
    if (cached_has_bits & 0x00000010u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000020u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListMutiobjReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListMutiobjReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMutiobjReq::CopyFrom(const ListMutiobjReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListMutiobjReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMutiobjReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ListMutiobjReq::InternalSwap(ListMutiobjReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prefix_.Swap(&other->prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  objnamemarker_.Swap(&other->objnamemarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uploadkeymarker_.Swap(&other->uploadkeymarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  delimiter_.Swap(&other->delimiter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flag_, other->flag_);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMutiobjReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListMutiobjRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ListMutiobjRsp>()._has_bits_);
  static void set_has_next_objnamemarker(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_next_uploadkeymarker(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_listover(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ListMutiobjRsp::ListMutiobjRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  objs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListMutiobjRsp)
}
ListMutiobjRsp::ListMutiobjRsp(const ListMutiobjRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      objs_(from.objs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_objnamemarker()) {
    next_objnamemarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_objnamemarker(), 
      GetArena());
  }
  next_uploadkeymarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_uploadkeymarker()) {
    next_uploadkeymarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_uploadkeymarker(), 
      GetArena());
  }
  listover_ = from.listover_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListMutiobjRsp)
}

void ListMutiobjRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListMutiobjRsp_cosv4_5fclient_2eproto.base);
  next_objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  next_uploadkeymarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  listover_ = false;
}

ListMutiobjRsp::~ListMutiobjRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ListMutiobjRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListMutiobjRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_objnamemarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  next_uploadkeymarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListMutiobjRsp::ArenaDtor(void* object) {
  ListMutiobjRsp* _this = reinterpret_cast< ListMutiobjRsp* >(object);
  (void)_this;
}
void ListMutiobjRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMutiobjRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMutiobjRsp& ListMutiobjRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListMutiobjRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListMutiobjRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListMutiobjRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      next_objnamemarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      next_uploadkeymarker_.ClearNonDefaultToEmpty();
    }
  }
  listover_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMutiobjRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.MutiObjItem objs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes next_objnamemarker = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_objnamemarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes next_uploadkeymarker = 3 [default = ""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_next_uploadkeymarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool listover = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_listover(&has_bits);
          listover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListMutiobjRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListMutiobjRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.MutiObjItem objs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_objs(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes next_objnamemarker = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_next_objnamemarker(), target);
  }

  // optional bytes next_uploadkeymarker = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_next_uploadkeymarker(), target);
  }

  // optional bool listover = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_listover(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListMutiobjRsp)
  return target;
}

size_t ListMutiobjRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListMutiobjRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.MutiObjItem objs = 1;
  total_size += 1UL * this->_internal_objs_size();
  for (const auto& msg : this->objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes next_objnamemarker = 2 [default = ""];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_next_objnamemarker());
    }

    // optional bytes next_uploadkeymarker = 3 [default = ""];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_next_uploadkeymarker());
    }

    // optional bool listover = 4 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMutiobjRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListMutiobjRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMutiobjRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListMutiobjRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListMutiobjRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListMutiobjRsp)
    MergeFrom(*source);
  }
}

void ListMutiobjRsp::MergeFrom(const ListMutiobjRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListMutiobjRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objs_.MergeFrom(from.objs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_next_objnamemarker(from._internal_next_objnamemarker());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_next_uploadkeymarker(from._internal_next_uploadkeymarker());
    }
    if (cached_has_bits & 0x00000004u) {
      listover_ = from.listover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListMutiobjRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListMutiobjRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMutiobjRsp::CopyFrom(const ListMutiobjRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListMutiobjRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMutiobjRsp::IsInitialized() const {
  return true;
}

void ListMutiobjRsp::InternalSwap(ListMutiobjRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  objs_.InternalSwap(&other->objs_);
  next_objnamemarker_.Swap(&other->next_objnamemarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  next_uploadkeymarker_.Swap(&other->next_uploadkeymarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(listover_, other->listover_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMutiobjRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListObjVerReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ListObjVerReq>()._has_bits_);
  static void set_has_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_objnamemarker(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_versionmarker(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delimiter(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_need_x_cos(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_need_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000009f) ^ 0x0000009f) != 0;
  }
};

ListObjVerReq::ListObjVerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListObjVerReq)
}
ListObjVerReq::ListObjVerReq(const ListObjVerReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_prefix()) {
    prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prefix(), 
      GetArena());
  }
  objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_objnamemarker()) {
    objnamemarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_objnamemarker(), 
      GetArena());
  }
  versionmarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_versionmarker()) {
    versionmarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_versionmarker(), 
      GetArena());
  }
  delimiter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_delimiter()) {
    delimiter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delimiter(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListObjVerReq)
}

void ListObjVerReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListObjVerReq_cosv4_5fclient_2eproto.base);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  versionmarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&need_tag_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(need_tag_));
  count_ = 200u;
}

ListObjVerReq::~ListObjVerReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ListObjVerReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListObjVerReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objnamemarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  versionmarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListObjVerReq::ArenaDtor(void* object) {
  ListObjVerReq* _this = reinterpret_cast< ListObjVerReq* >(object);
  (void)_this;
}
void ListObjVerReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListObjVerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListObjVerReq& ListObjVerReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListObjVerReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListObjVerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListObjVerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      prefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      objnamemarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      versionmarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      delimiter_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&flag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&need_tag_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(need_tag_));
  count_ = 200u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListObjVerReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes prefix = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes objnamemarker = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_objnamemarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes versionmarker = 3 [default = ""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_versionmarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes delimiter = 4 [default = ""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_delimiter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 count = 5 [default = 200];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool flag = 6 [default = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool need_x_cos = 7 [default = false];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_need_x_cos(&has_bits);
          need_x_cos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool need_tag = 8 [default = false];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_need_tag(&has_bits);
          need_tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListObjVerReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListObjVerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes prefix = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_prefix(), target);
  }

  // required bytes objnamemarker = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_objnamemarker(), target);
  }

  // required bytes versionmarker = 3 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_versionmarker(), target);
  }

  // required bytes delimiter = 4 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_delimiter(), target);
  }

  // required uint32 count = 5 [default = 200];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_count(), target);
  }

  // required bool flag = 6 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_flag(), target);
  }

  // optional bool need_x_cos = 7 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_need_x_cos(), target);
  }

  // optional bool need_tag = 8 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_need_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListObjVerReq)
  return target;
}

size_t ListObjVerReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ListObjVerReq)
  size_t total_size = 0;

  if (_internal_has_prefix()) {
    // required bytes prefix = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prefix());
  }

  if (_internal_has_objnamemarker()) {
    // required bytes objnamemarker = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_objnamemarker());
  }

  if (_internal_has_versionmarker()) {
    // required bytes versionmarker = 3 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_versionmarker());
  }

  if (_internal_has_delimiter()) {
    // required bytes delimiter = 4 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delimiter());
  }

  if (_internal_has_flag()) {
    // required bool flag = 6 [default = false];
    total_size += 1 + 1;
  }

  if (_internal_has_count()) {
    // required uint32 count = 5 [default = 200];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  return total_size;
}
size_t ListObjVerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListObjVerReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000009f) ^ 0x0000009f) == 0) {  // All required fields are present.
    // required bytes prefix = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prefix());

    // required bytes objnamemarker = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_objnamemarker());

    // required bytes versionmarker = 3 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_versionmarker());

    // required bytes delimiter = 4 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delimiter());

    // required bool flag = 6 [default = false];
    total_size += 1 + 1;

    // required uint32 count = 5 [default = 200];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000060u) {
    // optional bool need_x_cos = 7 [default = false];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool need_tag = 8 [default = false];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListObjVerReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListObjVerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListObjVerReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListObjVerReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListObjVerReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListObjVerReq)
    MergeFrom(*source);
  }
}

void ListObjVerReq::MergeFrom(const ListObjVerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListObjVerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_prefix(from._internal_prefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_objnamemarker(from._internal_objnamemarker());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_versionmarker(from._internal_versionmarker());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_delimiter(from._internal_delimiter());
    }
    if (cached_has_bits & 0x00000010u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000020u) {
      need_x_cos_ = from.need_x_cos_;
    }
    if (cached_has_bits & 0x00000040u) {
      need_tag_ = from.need_tag_;
    }
    if (cached_has_bits & 0x00000080u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListObjVerReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListObjVerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListObjVerReq::CopyFrom(const ListObjVerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListObjVerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListObjVerReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ListObjVerReq::InternalSwap(ListObjVerReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prefix_.Swap(&other->prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  objnamemarker_.Swap(&other->objnamemarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  versionmarker_.Swap(&other->versionmarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  delimiter_.Swap(&other->delimiter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListObjVerReq, need_tag_)
      + sizeof(ListObjVerReq::need_tag_)
      - PROTOBUF_FIELD_OFFSET(ListObjVerReq, flag_)>(
          reinterpret_cast<char*>(&flag_),
          reinterpret_cast<char*>(&other->flag_));
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListObjVerReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListObjVerRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ListObjVerRsp>()._has_bits_);
  static void set_has_next_objnamemarker(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_next_versionmarker(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_listover(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ListObjVerRsp::ListObjVerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  objs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListObjVerRsp)
}
ListObjVerRsp::ListObjVerRsp(const ListObjVerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      objs_(from.objs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_objnamemarker()) {
    next_objnamemarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_objnamemarker(), 
      GetArena());
  }
  next_versionmarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_versionmarker()) {
    next_versionmarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_versionmarker(), 
      GetArena());
  }
  listover_ = from.listover_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListObjVerRsp)
}

void ListObjVerRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListObjVerRsp_cosv4_5fclient_2eproto.base);
  next_objnamemarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  next_versionmarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  listover_ = false;
}

ListObjVerRsp::~ListObjVerRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ListObjVerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListObjVerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_objnamemarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  next_versionmarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListObjVerRsp::ArenaDtor(void* object) {
  ListObjVerRsp* _this = reinterpret_cast< ListObjVerRsp* >(object);
  (void)_this;
}
void ListObjVerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListObjVerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListObjVerRsp& ListObjVerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListObjVerRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListObjVerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListObjVerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      next_objnamemarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      next_versionmarker_.ClearNonDefaultToEmpty();
    }
  }
  listover_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListObjVerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.ObjItem objs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes next_objnamemarker = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_objnamemarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes next_versionmarker = 3 [default = ""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_next_versionmarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool listover = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_listover(&has_bits);
          listover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListObjVerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListObjVerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.ObjItem objs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_objs(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes next_objnamemarker = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_next_objnamemarker(), target);
  }

  // optional bytes next_versionmarker = 3 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_next_versionmarker(), target);
  }

  // optional bool listover = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_listover(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListObjVerRsp)
  return target;
}

size_t ListObjVerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListObjVerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ObjItem objs = 1;
  total_size += 1UL * this->_internal_objs_size();
  for (const auto& msg : this->objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes next_objnamemarker = 2 [default = ""];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_next_objnamemarker());
    }

    // optional bytes next_versionmarker = 3 [default = ""];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_next_versionmarker());
    }

    // optional bool listover = 4 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListObjVerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListObjVerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ListObjVerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListObjVerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListObjVerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListObjVerRsp)
    MergeFrom(*source);
  }
}

void ListObjVerRsp::MergeFrom(const ListObjVerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListObjVerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objs_.MergeFrom(from.objs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_next_objnamemarker(from._internal_next_objnamemarker());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_next_versionmarker(from._internal_next_versionmarker());
    }
    if (cached_has_bits & 0x00000004u) {
      listover_ = from.listover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListObjVerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListObjVerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListObjVerRsp::CopyFrom(const ListObjVerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListObjVerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListObjVerRsp::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(objs_)) return false;
  return true;
}

void ListObjVerRsp::InternalSwap(ListObjVerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  objs_.InternalSwap(&other->objs_);
  next_objnamemarker_.Swap(&other->next_objnamemarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  next_versionmarker_.Swap(&other->next_versionmarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(listover_, other->listover_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListObjVerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnfinObjAttrModifyReq::_Internal {
 public:
  using HasBits = decltype(std::declval<UnfinObjAttrModifyReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uploadid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

UnfinObjAttrModifyReq::UnfinObjAttrModifyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reservedattr_(arena),
  customheader_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.UnfinObjAttrModifyReq)
}
UnfinObjAttrModifyReq::UnfinObjAttrModifyReq(const UnfinObjAttrModifyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      reservedattr_(from.reservedattr_),
      customheader_(from.customheader_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uploadid()) {
    uploadid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uploadid(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(auth_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.UnfinObjAttrModifyReq)
}

void UnfinObjAttrModifyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&auth_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(auth_));
}

UnfinObjAttrModifyReq::~UnfinObjAttrModifyReq() {
  // @@protoc_insertion_point(destructor:ClientCos.UnfinObjAttrModifyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnfinObjAttrModifyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnfinObjAttrModifyReq::ArenaDtor(void* object) {
  UnfinObjAttrModifyReq* _this = reinterpret_cast< UnfinObjAttrModifyReq* >(object);
  (void)_this;
}
void UnfinObjAttrModifyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnfinObjAttrModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnfinObjAttrModifyReq& UnfinObjAttrModifyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnfinObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void UnfinObjAttrModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.UnfinObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reservedattr_.Clear();
  customheader_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uploadid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&flag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_) -
        reinterpret_cast<char*>(&flag_)) + sizeof(auth_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnfinObjAttrModifyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes uploadid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uploadid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnfinObjAttrModifyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.UnfinObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required bytes uploadid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uploadid(), target);
  }

  // required uint32 flag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_flag(), target);
  }

  // optional bytes biz_attr = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_biz_attr(), target);
  }

  // optional uint32 forbid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_reservedattr(i), target, stream);
  }

  // repeated .ClientCos.CustomHeader customheader = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_customheader(i), target, stream);
  }

  // optional .ClientCos.Authority auth = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_auth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.UnfinObjAttrModifyReq)
  return target;
}

size_t UnfinObjAttrModifyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.UnfinObjAttrModifyReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_uploadid()) {
    // required bytes uploadid = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uploadid());
  }

  if (_internal_has_flag()) {
    // required uint32 flag = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());
  }

  return total_size;
}
size_t UnfinObjAttrModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.UnfinObjAttrModifyReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes uploadid = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uploadid());

    // required uint32 flag = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ReservedAttr reservedattr = 6;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 7;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bytes biz_attr = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_biz_attr());
  }

  if (cached_has_bits & 0x00000030u) {
    // optional uint32 forbid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional .ClientCos.Authority auth = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnfinObjAttrModifyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.UnfinObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfinObjAttrModifyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnfinObjAttrModifyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.UnfinObjAttrModifyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.UnfinObjAttrModifyReq)
    MergeFrom(*source);
  }
}

void UnfinObjAttrModifyReq::MergeFrom(const UnfinObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.UnfinObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reservedattr_.MergeFrom(from.reservedattr_);
  customheader_.MergeFrom(from.customheader_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uploadid(from._internal_uploadid());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000008u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00000020u) {
      auth_ = from.auth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UnfinObjAttrModifyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.UnfinObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfinObjAttrModifyReq::CopyFrom(const UnfinObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.UnfinObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfinObjAttrModifyReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  return true;
}

void UnfinObjAttrModifyReq::InternalSwap(UnfinObjAttrModifyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reservedattr_.InternalSwap(&other->reservedattr_);
  customheader_.InternalSwap(&other->customheader_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uploadid_.Swap(&other->uploadid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnfinObjAttrModifyReq, auth_)
      + sizeof(UnfinObjAttrModifyReq::auth_)
      - PROTOBUF_FIELD_OFFSET(UnfinObjAttrModifyReq, flag_)>(
          reinterpret_cast<char*>(&flag_),
          reinterpret_cast<char*>(&other->flag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnfinObjAttrModifyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnfinObjAttrModifyRsp::_Internal {
 public:
};

UnfinObjAttrModifyRsp::UnfinObjAttrModifyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.UnfinObjAttrModifyRsp)
}
UnfinObjAttrModifyRsp::UnfinObjAttrModifyRsp(const UnfinObjAttrModifyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.UnfinObjAttrModifyRsp)
}

void UnfinObjAttrModifyRsp::SharedCtor() {
}

UnfinObjAttrModifyRsp::~UnfinObjAttrModifyRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.UnfinObjAttrModifyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnfinObjAttrModifyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UnfinObjAttrModifyRsp::ArenaDtor(void* object) {
  UnfinObjAttrModifyRsp* _this = reinterpret_cast< UnfinObjAttrModifyRsp* >(object);
  (void)_this;
}
void UnfinObjAttrModifyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnfinObjAttrModifyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnfinObjAttrModifyRsp& UnfinObjAttrModifyRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnfinObjAttrModifyRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void UnfinObjAttrModifyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.UnfinObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnfinObjAttrModifyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnfinObjAttrModifyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.UnfinObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.UnfinObjAttrModifyRsp)
  return target;
}

size_t UnfinObjAttrModifyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.UnfinObjAttrModifyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnfinObjAttrModifyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.UnfinObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfinObjAttrModifyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnfinObjAttrModifyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.UnfinObjAttrModifyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.UnfinObjAttrModifyRsp)
    MergeFrom(*source);
  }
}

void UnfinObjAttrModifyRsp::MergeFrom(const UnfinObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.UnfinObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UnfinObjAttrModifyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.UnfinObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfinObjAttrModifyRsp::CopyFrom(const UnfinObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.UnfinObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfinObjAttrModifyRsp::IsInitialized() const {
  return true;
}

void UnfinObjAttrModifyRsp::InternalSwap(UnfinObjAttrModifyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnfinObjAttrModifyRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppAttrQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<AppAttrQueryReq>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AppAttrQueryReq::AppAttrQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppAttrQueryReq)
}
AppAttrQueryReq::AppAttrQueryReq(const AppAttrQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_appid()) {
    appid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppAttrQueryReq)
}

void AppAttrQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppAttrQueryReq_cosv4_5fclient_2eproto.base);
  appid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AppAttrQueryReq::~AppAttrQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.AppAttrQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppAttrQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  appid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppAttrQueryReq::ArenaDtor(void* object) {
  AppAttrQueryReq* _this = reinterpret_cast< AppAttrQueryReq* >(object);
  (void)_this;
}
void AppAttrQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppAttrQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppAttrQueryReq& AppAttrQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppAttrQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppAttrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    appid_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppAttrQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_appid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppAttrQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_appid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppAttrQueryReq)
  return target;
}

size_t AppAttrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppAttrQueryReq)
  size_t total_size = 0;

  // required bytes appid = 1;
  if (_internal_has_appid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_appid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppAttrQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AppAttrQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppAttrQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppAttrQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppAttrQueryReq)
    MergeFrom(*source);
  }
}

void AppAttrQueryReq::MergeFrom(const AppAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_appid()) {
    _internal_set_appid(from._internal_appid());
  }
}

void AppAttrQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppAttrQueryReq::CopyFrom(const AppAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppAttrQueryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void AppAttrQueryReq::InternalSwap(AppAttrQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  appid_.Swap(&other->appid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AppAttrQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppAttrQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<AppAttrQueryRsp>()._has_bits_);
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AppAttrQueryRsp::AppAttrQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppAttrQueryRsp)
}
AppAttrQueryRsp::AppAttrQueryRsp(const AppAttrQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctime_, &from.ctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
    reinterpret_cast<char*>(&ctime_)) + sizeof(mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppAttrQueryRsp)
}

void AppAttrQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctime_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
      reinterpret_cast<char*>(&ctime_)) + sizeof(mtime_));
}

AppAttrQueryRsp::~AppAttrQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.AppAttrQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppAttrQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AppAttrQueryRsp::ArenaDtor(void* object) {
  AppAttrQueryRsp* _this = reinterpret_cast< AppAttrQueryRsp* >(object);
  (void)_this;
}
void AppAttrQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppAttrQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppAttrQueryRsp& AppAttrQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppAttrQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppAttrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mtime_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppAttrQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.KeyPair keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppAttrQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.KeyPair keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_keys_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_keys(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 ctime = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ctime(), target);
  }

  // optional uint32 mtime = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppAttrQueryRsp)
  return target;
}

size_t AppAttrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppAttrQueryRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.KeyPair keys = 1;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 ctime = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 mtime = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppAttrQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AppAttrQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppAttrQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppAttrQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppAttrQueryRsp)
    MergeFrom(*source);
  }
}

void AppAttrQueryRsp::MergeFrom(const AppAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtime_ = from.mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppAttrQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppAttrQueryRsp::CopyFrom(const AppAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppAttrQueryRsp::IsInitialized() const {
  return true;
}

void AppAttrQueryRsp::InternalSwap(AppAttrQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  keys_.InternalSwap(&other->keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppAttrQueryRsp, mtime_)
      + sizeof(AppAttrQueryRsp::mtime_)
      - PROTOBUF_FIELD_OFFSET(AppAttrQueryRsp, ctime_)>(
          reinterpret_cast<char*>(&ctime_),
          reinterpret_cast<char*>(&other->ctime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppAttrQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppAttrModifyReq::_Internal {
 public:
  using HasBits = decltype(std::declval<AppAttrModifyReq>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AppAttrModifyReq::AppAttrModifyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppAttrModifyReq)
}
AppAttrModifyReq::AppAttrModifyReq(const AppAttrModifyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_appid()) {
    appid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppAttrModifyReq)
}

void AppAttrModifyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppAttrModifyReq_cosv4_5fclient_2eproto.base);
  appid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AppAttrModifyReq::~AppAttrModifyReq() {
  // @@protoc_insertion_point(destructor:ClientCos.AppAttrModifyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppAttrModifyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  appid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppAttrModifyReq::ArenaDtor(void* object) {
  AppAttrModifyReq* _this = reinterpret_cast< AppAttrModifyReq* >(object);
  (void)_this;
}
void AppAttrModifyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppAttrModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppAttrModifyReq& AppAttrModifyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppAttrModifyReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppAttrModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    appid_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppAttrModifyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_appid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.KeyPair keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppAttrModifyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_appid(), target);
  }

  // repeated .ClientCos.KeyPair keys = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_keys_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_keys(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppAttrModifyReq)
  return target;
}

size_t AppAttrModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppAttrModifyReq)
  size_t total_size = 0;

  // required bytes appid = 1;
  if (_internal_has_appid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_appid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.KeyPair keys = 2;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppAttrModifyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AppAttrModifyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppAttrModifyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppAttrModifyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppAttrModifyReq)
    MergeFrom(*source);
  }
}

void AppAttrModifyReq::MergeFrom(const AppAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from._internal_has_appid()) {
    _internal_set_appid(from._internal_appid());
  }
}

void AppAttrModifyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppAttrModifyReq::CopyFrom(const AppAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppAttrModifyReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void AppAttrModifyReq::InternalSwap(AppAttrModifyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  keys_.InternalSwap(&other->keys_);
  appid_.Swap(&other->appid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AppAttrModifyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppAttrModifyRsp::_Internal {
 public:
};

AppAttrModifyRsp::AppAttrModifyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppAttrModifyRsp)
}
AppAttrModifyRsp::AppAttrModifyRsp(const AppAttrModifyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppAttrModifyRsp)
}

void AppAttrModifyRsp::SharedCtor() {
}

AppAttrModifyRsp::~AppAttrModifyRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.AppAttrModifyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppAttrModifyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AppAttrModifyRsp::ArenaDtor(void* object) {
  AppAttrModifyRsp* _this = reinterpret_cast< AppAttrModifyRsp* >(object);
  (void)_this;
}
void AppAttrModifyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppAttrModifyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppAttrModifyRsp& AppAttrModifyRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppAttrModifyRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppAttrModifyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppAttrModifyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppAttrModifyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppAttrModifyRsp)
  return target;
}

size_t AppAttrModifyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppAttrModifyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppAttrModifyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AppAttrModifyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppAttrModifyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppAttrModifyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppAttrModifyRsp)
    MergeFrom(*source);
  }
}

void AppAttrModifyRsp::MergeFrom(const AppAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AppAttrModifyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppAttrModifyRsp::CopyFrom(const AppAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppAttrModifyRsp::IsInitialized() const {
  return true;
}

void AppAttrModifyRsp::InternalSwap(AppAttrModifyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppAttrModifyRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreviewFileAttrQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<PreviewFileAttrQueryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sign(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_refer(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PreviewFileAttrQueryReq::PreviewFileAttrQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.PreviewFileAttrQueryReq)
}
PreviewFileAttrQueryReq::PreviewFileAttrQueryReq(const PreviewFileAttrQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  sign_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sign()) {
    sign_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sign(), 
      GetArena());
  }
  refer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_refer()) {
    refer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refer(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.PreviewFileAttrQueryReq)
}

void PreviewFileAttrQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreviewFileAttrQueryReq::~PreviewFileAttrQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.PreviewFileAttrQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewFileAttrQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewFileAttrQueryReq::ArenaDtor(void* object) {
  PreviewFileAttrQueryReq* _this = reinterpret_cast< PreviewFileAttrQueryReq* >(object);
  (void)_this;
}
void PreviewFileAttrQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewFileAttrQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewFileAttrQueryReq& PreviewFileAttrQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewFileAttrQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void PreviewFileAttrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.PreviewFileAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sign_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      refer_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewFileAttrQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string sign = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sign();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.PreviewFileAttrQueryReq.sign");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string refer = 3 [default = ""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_refer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.PreviewFileAttrQueryReq.refer");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewFileAttrQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.PreviewFileAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional string sign = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sign().data(), static_cast<int>(this->_internal_sign().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.PreviewFileAttrQueryReq.sign");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sign(), target);
  }

  // optional string refer = 3 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_refer().data(), static_cast<int>(this->_internal_refer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.PreviewFileAttrQueryReq.refer");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_refer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.PreviewFileAttrQueryReq)
  return target;
}

size_t PreviewFileAttrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.PreviewFileAttrQueryReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional string sign = 2 [default = ""];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sign());
    }

    // optional string refer = 3 [default = ""];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_refer());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewFileAttrQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.PreviewFileAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewFileAttrQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewFileAttrQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.PreviewFileAttrQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.PreviewFileAttrQueryReq)
    MergeFrom(*source);
  }
}

void PreviewFileAttrQueryReq::MergeFrom(const PreviewFileAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.PreviewFileAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sign(from._internal_sign());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_refer(from._internal_refer());
    }
  }
}

void PreviewFileAttrQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.PreviewFileAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewFileAttrQueryReq::CopyFrom(const PreviewFileAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.PreviewFileAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewFileAttrQueryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void PreviewFileAttrQueryReq::InternalSwap(PreviewFileAttrQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sign_.Swap(&other->sign_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  refer_.Swap(&other->refer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewFileAttrQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreviewFileAttrQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<PreviewFileAttrQueryRsp>()._has_bits_);
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_file_length(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_preview(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

PreviewFileAttrQueryRsp::PreviewFileAttrQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.PreviewFileAttrQueryRsp)
}
PreviewFileAttrQueryRsp::PreviewFileAttrQueryRsp(const PreviewFileAttrQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha()) {
    sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha(), 
      GetArena());
  }
  ::memcpy(&file_size_, &from.file_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&preview_) -
    reinterpret_cast<char*>(&file_size_)) + sizeof(preview_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.PreviewFileAttrQueryRsp)
}

void PreviewFileAttrQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto.base);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&file_size_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&preview_) -
      reinterpret_cast<char*>(&file_size_)) + sizeof(preview_));
}

PreviewFileAttrQueryRsp::~PreviewFileAttrQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.PreviewFileAttrQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewFileAttrQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewFileAttrQueryRsp::ArenaDtor(void* object) {
  PreviewFileAttrQueryRsp* _this = reinterpret_cast< PreviewFileAttrQueryRsp* >(object);
  (void)_this;
}
void PreviewFileAttrQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewFileAttrQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewFileAttrQueryRsp& PreviewFileAttrQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewFileAttrQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void PreviewFileAttrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.PreviewFileAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&file_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&preview_) -
        reinterpret_cast<char*>(&file_size_)) + sizeof(preview_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewFileAttrQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes biz_attr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_length = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_file_length(&has_bits);
          file_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sha = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool preview = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_preview(&has_bits);
          preview_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewFileAttrQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.PreviewFileAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes biz_attr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_biz_attr(), target);
  }

  // optional uint64 file_size = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_file_size(), target);
  }

  // optional uint64 file_length = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_file_length(), target);
  }

  // optional bytes sha = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_sha(), target);
  }

  // optional uint32 ctime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ctime(), target);
  }

  // optional uint32 mtime = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_mtime(), target);
  }

  // optional .ClientCos.Authority auth = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_auth(), target);
  }

  // optional bool preview = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_preview(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.PreviewFileAttrQueryRsp)
  return target;
}

size_t PreviewFileAttrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.PreviewFileAttrQueryRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes biz_attr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes sha = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sha());
    }

    // optional uint64 file_size = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_size());
    }

    // optional uint64 file_length = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_length());
    }

    // optional uint32 ctime = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 mtime = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

    // optional .ClientCos.Authority auth = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional bool preview = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewFileAttrQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.PreviewFileAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewFileAttrQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewFileAttrQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.PreviewFileAttrQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.PreviewFileAttrQueryRsp)
    MergeFrom(*source);
  }
}

void PreviewFileAttrQueryRsp::MergeFrom(const PreviewFileAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.PreviewFileAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sha(from._internal_sha());
    }
    if (cached_has_bits & 0x00000004u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_length_ = from.file_length_;
    }
    if (cached_has_bits & 0x00000010u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000020u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000040u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00000080u) {
      preview_ = from.preview_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PreviewFileAttrQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.PreviewFileAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewFileAttrQueryRsp::CopyFrom(const PreviewFileAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.PreviewFileAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewFileAttrQueryRsp::IsInitialized() const {
  return true;
}

void PreviewFileAttrQueryRsp::InternalSwap(PreviewFileAttrQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha_.Swap(&other->sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PreviewFileAttrQueryRsp, preview_)
      + sizeof(PreviewFileAttrQueryRsp::preview_)
      - PROTOBUF_FIELD_OFFSET(PreviewFileAttrQueryRsp, file_size_)>(
          reinterpret_cast<char*>(&file_size_),
          reinterpret_cast<char*>(&other->file_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewFileAttrQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjModTimeStampReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjModTimeStampReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ObjModTimeStampReq::ObjModTimeStampReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjModTimeStampReq)
}
ObjModTimeStampReq::ObjModTimeStampReq(const ObjModTimeStampReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  ::memcpy(&ctime_, &from.ctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
    reinterpret_cast<char*>(&ctime_)) + sizeof(mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjModTimeStampReq)
}

void ObjModTimeStampReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctime_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
      reinterpret_cast<char*>(&ctime_)) + sizeof(mtime_));
}

ObjModTimeStampReq::~ObjModTimeStampReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjModTimeStampReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjModTimeStampReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjModTimeStampReq::ArenaDtor(void* object) {
  ObjModTimeStampReq* _this = reinterpret_cast< ObjModTimeStampReq* >(object);
  (void)_this;
}
void ObjModTimeStampReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjModTimeStampReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjModTimeStampReq& ObjModTimeStampReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjModTimeStampReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjModTimeStampReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjModTimeStampReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mtime_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjModTimeStampReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjModTimeStampReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjModTimeStampReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional uint32 ctime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ctime(), target);
  }

  // optional uint32 mtime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjModTimeStampReq)
  return target;
}

size_t ObjModTimeStampReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjModTimeStampReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional uint32 ctime = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 mtime = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjModTimeStampReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjModTimeStampReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjModTimeStampReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjModTimeStampReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjModTimeStampReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjModTimeStampReq)
    MergeFrom(*source);
  }
}

void ObjModTimeStampReq::MergeFrom(const ObjModTimeStampReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjModTimeStampReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000004u) {
      mtime_ = from.mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjModTimeStampReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjModTimeStampReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjModTimeStampReq::CopyFrom(const ObjModTimeStampReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjModTimeStampReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjModTimeStampReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ObjModTimeStampReq::InternalSwap(ObjModTimeStampReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjModTimeStampReq, mtime_)
      + sizeof(ObjModTimeStampReq::mtime_)
      - PROTOBUF_FIELD_OFFSET(ObjModTimeStampReq, ctime_)>(
          reinterpret_cast<char*>(&ctime_),
          reinterpret_cast<char*>(&other->ctime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjModTimeStampReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjModTimeStampRsp::_Internal {
 public:
};

ObjModTimeStampRsp::ObjModTimeStampRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjModTimeStampRsp)
}
ObjModTimeStampRsp::ObjModTimeStampRsp(const ObjModTimeStampRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjModTimeStampRsp)
}

void ObjModTimeStampRsp::SharedCtor() {
}

ObjModTimeStampRsp::~ObjModTimeStampRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjModTimeStampRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjModTimeStampRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjModTimeStampRsp::ArenaDtor(void* object) {
  ObjModTimeStampRsp* _this = reinterpret_cast< ObjModTimeStampRsp* >(object);
  (void)_this;
}
void ObjModTimeStampRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjModTimeStampRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjModTimeStampRsp& ObjModTimeStampRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjModTimeStampRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjModTimeStampRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjModTimeStampRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjModTimeStampRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjModTimeStampRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjModTimeStampRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjModTimeStampRsp)
  return target;
}

size_t ObjModTimeStampRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjModTimeStampRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjModTimeStampRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjModTimeStampRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjModTimeStampRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjModTimeStampRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjModTimeStampRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjModTimeStampRsp)
    MergeFrom(*source);
  }
}

void ObjModTimeStampRsp::MergeFrom(const ObjModTimeStampRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjModTimeStampRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjModTimeStampRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjModTimeStampRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjModTimeStampRsp::CopyFrom(const ObjModTimeStampRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjModTimeStampRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjModTimeStampRsp::IsInitialized() const {
  return true;
}

void ObjModTimeStampRsp::InternalSwap(ObjModTimeStampRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjModTimeStampRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class delObj::_Internal {
 public:
  using HasBits = decltype(std::declval<delObj>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

delObj::delObj(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.delObj)
}
delObj::delObj(const delObj& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.delObj)
}

void delObj::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delObj_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

delObj::~delObj() {
  // @@protoc_insertion_point(destructor:ClientCos.delObj)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void delObj::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void delObj::ArenaDtor(void* object) {
  delObj* _this = reinterpret_cast< delObj* >(object);
  (void)_this;
}
void delObj::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delObj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delObj& delObj::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delObj_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void delObj::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.delObj)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delObj::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delObj::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.delObj)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.delObj)
  return target;
}

size_t delObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.delObj)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delObj::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.delObj)
  GOOGLE_DCHECK_NE(&from, this);
  const delObj* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delObj>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.delObj)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.delObj)
    MergeFrom(*source);
  }
}

void delObj::MergeFrom(const delObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.delObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void delObj::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.delObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delObj::CopyFrom(const delObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.delObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delObj::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void delObj::InternalSwap(delObj* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata delObj::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileBatchDelReq::_Internal {
 public:
};

FileBatchDelReq::FileBatchDelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  obj_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileBatchDelReq)
}
FileBatchDelReq::FileBatchDelReq(const FileBatchDelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      obj_(from.obj_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileBatchDelReq)
}

void FileBatchDelReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileBatchDelReq_cosv4_5fclient_2eproto.base);
}

FileBatchDelReq::~FileBatchDelReq() {
  // @@protoc_insertion_point(destructor:ClientCos.FileBatchDelReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileBatchDelReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FileBatchDelReq::ArenaDtor(void* object) {
  FileBatchDelReq* _this = reinterpret_cast< FileBatchDelReq* >(object);
  (void)_this;
}
void FileBatchDelReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileBatchDelReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileBatchDelReq& FileBatchDelReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileBatchDelReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileBatchDelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileBatchDelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileBatchDelReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.delObj obj = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_obj(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileBatchDelReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileBatchDelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.delObj obj = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_obj_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_obj(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileBatchDelReq)
  return target;
}

size_t FileBatchDelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileBatchDelReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.delObj obj = 1;
  total_size += 1UL * this->_internal_obj_size();
  for (const auto& msg : this->obj_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileBatchDelReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileBatchDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FileBatchDelReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileBatchDelReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileBatchDelReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileBatchDelReq)
    MergeFrom(*source);
  }
}

void FileBatchDelReq::MergeFrom(const FileBatchDelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileBatchDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_.MergeFrom(from.obj_);
}

void FileBatchDelReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileBatchDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBatchDelReq::CopyFrom(const FileBatchDelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileBatchDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBatchDelReq::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(obj_)) return false;
  return true;
}

void FileBatchDelReq::InternalSwap(FileBatchDelReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_.InternalSwap(&other->obj_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileBatchDelReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileDelState::_Internal {
 public:
  using HasBits = decltype(std::declval<FileDelState>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_retmsg(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delete_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_add_delmarker(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

FileDelState::FileDelState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileDelState)
}
FileDelState::FileDelState(const FileDelState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  retmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_retmsg()) {
    retmsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_retmsg(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_delmarker_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(add_delmarker_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileDelState)
}

void FileDelState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileDelState_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&add_delmarker_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(add_delmarker_));
}

FileDelState::~FileDelState() {
  // @@protoc_insertion_point(destructor:ClientCos.FileDelState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileDelState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDelState::ArenaDtor(void* object) {
  FileDelState* _this = reinterpret_cast< FileDelState* >(object);
  (void)_this;
}
void FileDelState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDelState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDelState& FileDelState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileDelState_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileDelState::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileDelState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      retmsg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&retcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&add_delmarker_) -
        reinterpret_cast<char*>(&retcode_)) + sizeof(add_delmarker_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDelState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string retmsg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_retmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.FileDelState.retmsg");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool delete_marker = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_delete_marker(&has_bits);
          delete_marker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool add_delmarker = 6 [default = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_add_delmarker(&has_bits);
          add_delmarker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileDelState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileDelState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required int32 retcode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_retcode(), target);
  }

  // required string retmsg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_retmsg().data(), static_cast<int>(this->_internal_retmsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.FileDelState.retmsg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_retmsg(), target);
  }

  // optional bytes version = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_version(), target);
  }

  // optional bool delete_marker = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_delete_marker(), target);
  }

  // optional bool add_delmarker = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_add_delmarker(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileDelState)
  return target;
}

size_t FileDelState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.FileDelState)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_retmsg()) {
    // required string retmsg = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_retmsg());
  }

  if (_internal_has_retcode()) {
    // required int32 retcode = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_retcode());
  }

  return total_size;
}
size_t FileDelState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileDelState)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required string retmsg = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_retmsg());

    // required int32 retcode = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_retcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (cached_has_bits & 0x00000030u) {
    // optional bool delete_marker = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool add_delmarker = 6 [default = false];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDelState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileDelState)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDelState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileDelState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileDelState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileDelState)
    MergeFrom(*source);
  }
}

void FileDelState::MergeFrom(const FileDelState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileDelState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_retmsg(from._internal_retmsg());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000008u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      delete_marker_ = from.delete_marker_;
    }
    if (cached_has_bits & 0x00000020u) {
      add_delmarker_ = from.add_delmarker_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileDelState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileDelState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDelState::CopyFrom(const FileDelState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileDelState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDelState::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void FileDelState::InternalSwap(FileDelState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  retmsg_.Swap(&other->retmsg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileDelState, add_delmarker_)
      + sizeof(FileDelState::add_delmarker_)
      - PROTOBUF_FIELD_OFFSET(FileDelState, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDelState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileBatchDelRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<FileBatchDelRsp>()._has_bits_);
  static void set_has_extraattr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FileBatchDelRsp::FileBatchDelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  delstate_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileBatchDelRsp)
}
FileBatchDelRsp::FileBatchDelRsp(const FileBatchDelRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      delstate_(from.delstate_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extraattr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_extraattr()) {
    extraattr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_extraattr(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileBatchDelRsp)
}

void FileBatchDelRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileBatchDelRsp_cosv4_5fclient_2eproto.base);
  extraattr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FileBatchDelRsp::~FileBatchDelRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.FileBatchDelRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileBatchDelRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  extraattr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileBatchDelRsp::ArenaDtor(void* object) {
  FileBatchDelRsp* _this = reinterpret_cast< FileBatchDelRsp* >(object);
  (void)_this;
}
void FileBatchDelRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileBatchDelRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileBatchDelRsp& FileBatchDelRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileBatchDelRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileBatchDelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileBatchDelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delstate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    extraattr_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileBatchDelRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.FileDelState delstate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_delstate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes extraattr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_extraattr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileBatchDelRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileBatchDelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.FileDelState delstate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_delstate_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_delstate(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes extraattr = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_extraattr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileBatchDelRsp)
  return target;
}

size_t FileBatchDelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileBatchDelRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.FileDelState delstate = 1;
  total_size += 1UL * this->_internal_delstate_size();
  for (const auto& msg : this->delstate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bytes extraattr = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_extraattr());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileBatchDelRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileBatchDelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FileBatchDelRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileBatchDelRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileBatchDelRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileBatchDelRsp)
    MergeFrom(*source);
  }
}

void FileBatchDelRsp::MergeFrom(const FileBatchDelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileBatchDelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delstate_.MergeFrom(from.delstate_);
  if (from._internal_has_extraattr()) {
    _internal_set_extraattr(from._internal_extraattr());
  }
}

void FileBatchDelRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileBatchDelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBatchDelRsp::CopyFrom(const FileBatchDelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileBatchDelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBatchDelRsp::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(delstate_)) return false;
  return true;
}

void FileBatchDelRsp::InternalSwap(FileBatchDelRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  delstate_.InternalSwap(&other->delstate_);
  extraattr_.Swap(&other->extraattr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FileBatchDelRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UploadDelmarkerReq::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadDelmarkerReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_ugc(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_trsf_args(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString UploadDelmarkerReq::_i_give_permission_to_break_this_code_default_storage_type_{{{"Standard", 8}}, {nullptr}};
UploadDelmarkerReq::UploadDelmarkerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.UploadDelmarkerReq)
}
UploadDelmarkerReq::UploadDelmarkerReq(const UploadDelmarkerReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(nullptr);
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  trsf_args_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_trsf_args()) {
    trsf_args_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trsf_args(), 
      GetArena());
  }
  is_ugc_ = from.is_ugc_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.UploadDelmarkerReq)
}

void UploadDelmarkerReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(nullptr);
  trsf_args_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_ugc_ = false;
}

UploadDelmarkerReq::~UploadDelmarkerReq() {
  // @@protoc_insertion_point(destructor:ClientCos.UploadDelmarkerReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadDelmarkerReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(nullptr);
  trsf_args_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadDelmarkerReq::ArenaDtor(void* object) {
  UploadDelmarkerReq* _this = reinterpret_cast< UploadDelmarkerReq* >(object);
  (void)_this;
}
void UploadDelmarkerReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadDelmarkerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadDelmarkerReq& UploadDelmarkerReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadDelmarkerReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void UploadDelmarkerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.UploadDelmarkerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      storage_type_.ClearToDefault(::ClientCos::UploadDelmarkerReq::_i_give_permission_to_break_this_code_default_storage_type_, GetArena());
       }
    if (cached_has_bits & 0x00000008u) {
      trsf_args_.ClearNonDefaultToEmpty();
    }
  }
  is_ugc_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadDelmarkerReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 3 [default = "Standard"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_ugc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_ugc(&has_bits);
          is_ugc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes trsf_args = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_trsf_args();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadDelmarkerReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.UploadDelmarkerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // optional bytes storage_type = 3 [default = "Standard"];
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_storage_type(), target);
  }

  // optional bool is_ugc = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_ugc(), target);
  }

  // optional bytes trsf_args = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_trsf_args(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.UploadDelmarkerReq)
  return target;
}

size_t UploadDelmarkerReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.UploadDelmarkerReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_version()) {
    // required bytes version = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  return total_size;
}
size_t UploadDelmarkerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.UploadDelmarkerReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes version = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001cu) {
    // optional bytes storage_type = 3 [default = "Standard"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional bytes trsf_args = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_trsf_args());
    }

    // optional bool is_ugc = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadDelmarkerReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.UploadDelmarkerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadDelmarkerReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadDelmarkerReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.UploadDelmarkerReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.UploadDelmarkerReq)
    MergeFrom(*source);
  }
}

void UploadDelmarkerReq::MergeFrom(const UploadDelmarkerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.UploadDelmarkerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_trsf_args(from._internal_trsf_args());
    }
    if (cached_has_bits & 0x00000010u) {
      is_ugc_ = from.is_ugc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UploadDelmarkerReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.UploadDelmarkerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadDelmarkerReq::CopyFrom(const UploadDelmarkerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.UploadDelmarkerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadDelmarkerReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void UploadDelmarkerReq::InternalSwap(UploadDelmarkerReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, nullptr, GetArena());
  trsf_args_.Swap(&other->trsf_args_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(is_ugc_, other->is_ugc_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadDelmarkerReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UploadDelmarkerRsp::_Internal {
 public:
};

UploadDelmarkerRsp::UploadDelmarkerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.UploadDelmarkerRsp)
}
UploadDelmarkerRsp::UploadDelmarkerRsp(const UploadDelmarkerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.UploadDelmarkerRsp)
}

void UploadDelmarkerRsp::SharedCtor() {
}

UploadDelmarkerRsp::~UploadDelmarkerRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.UploadDelmarkerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadDelmarkerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UploadDelmarkerRsp::ArenaDtor(void* object) {
  UploadDelmarkerRsp* _this = reinterpret_cast< UploadDelmarkerRsp* >(object);
  (void)_this;
}
void UploadDelmarkerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadDelmarkerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadDelmarkerRsp& UploadDelmarkerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadDelmarkerRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void UploadDelmarkerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.UploadDelmarkerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadDelmarkerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadDelmarkerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.UploadDelmarkerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.UploadDelmarkerRsp)
  return target;
}

size_t UploadDelmarkerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.UploadDelmarkerRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadDelmarkerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.UploadDelmarkerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadDelmarkerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadDelmarkerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.UploadDelmarkerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.UploadDelmarkerRsp)
    MergeFrom(*source);
  }
}

void UploadDelmarkerRsp::MergeFrom(const UploadDelmarkerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.UploadDelmarkerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UploadDelmarkerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.UploadDelmarkerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadDelmarkerRsp::CopyFrom(const UploadDelmarkerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.UploadDelmarkerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadDelmarkerRsp::IsInitialized() const {
  return true;
}

void UploadDelmarkerRsp::InternalSwap(UploadDelmarkerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadDelmarkerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileUnfinishAttrQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<FileUnfinishAttrQueryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uploadid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

FileUnfinishAttrQueryReq::FileUnfinishAttrQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileUnfinishAttrQueryReq)
}
FileUnfinishAttrQueryReq::FileUnfinishAttrQueryReq(const FileUnfinishAttrQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uploadid()) {
    uploadid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uploadid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileUnfinishAttrQueryReq)
}

void FileUnfinishAttrQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FileUnfinishAttrQueryReq::~FileUnfinishAttrQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.FileUnfinishAttrQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileUnfinishAttrQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileUnfinishAttrQueryReq::ArenaDtor(void* object) {
  FileUnfinishAttrQueryReq* _this = reinterpret_cast< FileUnfinishAttrQueryReq* >(object);
  (void)_this;
}
void FileUnfinishAttrQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileUnfinishAttrQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileUnfinishAttrQueryReq& FileUnfinishAttrQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileUnfinishAttrQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileUnfinishAttrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileUnfinishAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uploadid_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileUnfinishAttrQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uploadid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uploadid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileUnfinishAttrQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileUnfinishAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes uploadid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uploadid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileUnfinishAttrQueryReq)
  return target;
}

size_t FileUnfinishAttrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileUnfinishAttrQueryReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes uploadid = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uploadid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileUnfinishAttrQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileUnfinishAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FileUnfinishAttrQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileUnfinishAttrQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileUnfinishAttrQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileUnfinishAttrQueryReq)
    MergeFrom(*source);
  }
}

void FileUnfinishAttrQueryReq::MergeFrom(const FileUnfinishAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileUnfinishAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uploadid(from._internal_uploadid());
    }
  }
}

void FileUnfinishAttrQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileUnfinishAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileUnfinishAttrQueryReq::CopyFrom(const FileUnfinishAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileUnfinishAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUnfinishAttrQueryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void FileUnfinishAttrQueryReq::InternalSwap(FileUnfinishAttrQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uploadid_.Swap(&other->uploadid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FileUnfinishAttrQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileUnfinishAttrQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<FileUnfinishAttrQueryRsp>()._has_bits_);
  static void set_has_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_usr_slice_size(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_real_slice_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::storeinfo& info(const FileUnfinishAttrQueryRsp* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ClientCos::SseInfo& sseinfo(const FileUnfinishAttrQueryRsp* msg);
  static void set_has_sseinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ClientCos::CasInfo& casinfo(const FileUnfinishAttrQueryRsp* msg);
  static void set_has_casinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000081) ^ 0x00000081) != 0;
  }
};

const ::storeinfo&
FileUnfinishAttrQueryRsp::_Internal::info(const FileUnfinishAttrQueryRsp* msg) {
  return *msg->info_;
}
const ::ClientCos::SseInfo&
FileUnfinishAttrQueryRsp::_Internal::sseinfo(const FileUnfinishAttrQueryRsp* msg) {
  return *msg->sseinfo_;
}
const ::ClientCos::CasInfo&
FileUnfinishAttrQueryRsp::_Internal::casinfo(const FileUnfinishAttrQueryRsp* msg) {
  return *msg->casinfo_;
}
void FileUnfinishAttrQueryRsp::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
FileUnfinishAttrQueryRsp::FileUnfinishAttrQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileUnfinishAttrQueryRsp)
}
FileUnfinishAttrQueryRsp::FileUnfinishAttrQueryRsp(const FileUnfinishAttrQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha()) {
    sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uin()) {
    uin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uin(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  if (from._internal_has_info()) {
    info_ = new ::storeinfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  if (from._internal_has_sseinfo()) {
    sseinfo_ = new ::ClientCos::SseInfo(*from.sseinfo_);
  } else {
    sseinfo_ = nullptr;
  }
  if (from._internal_has_casinfo()) {
    casinfo_ = new ::ClientCos::CasInfo(*from.casinfo_);
  } else {
    casinfo_ = nullptr;
  }
  ::memcpy(&mtime_, &from.mtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
    reinterpret_cast<char*>(&mtime_)) + sizeof(file_size_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileUnfinishAttrQueryRsp)
}

void FileUnfinishAttrQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto.base);
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&info_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
      reinterpret_cast<char*>(&info_)) + sizeof(file_size_));
}

FileUnfinishAttrQueryRsp::~FileUnfinishAttrQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.FileUnfinishAttrQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileUnfinishAttrQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete sseinfo_;
  if (this != internal_default_instance()) delete casinfo_;
}

void FileUnfinishAttrQueryRsp::ArenaDtor(void* object) {
  FileUnfinishAttrQueryRsp* _this = reinterpret_cast< FileUnfinishAttrQueryRsp* >(object);
  (void)_this;
}
void FileUnfinishAttrQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileUnfinishAttrQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileUnfinishAttrQueryRsp& FileUnfinishAttrQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileUnfinishAttrQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileUnfinishAttrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileUnfinishAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      uin_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(info_ != nullptr);
      info_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(sseinfo_ != nullptr);
      sseinfo_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(casinfo_ != nullptr);
      casinfo_->Clear();
    }
  }
  mtime_ = 0u;
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_size_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(file_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileUnfinishAttrQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes sha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_uin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 usr_slice_size = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_usr_slice_size(&has_bits);
          usr_slice_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 real_slice_size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_real_slice_size(&has_bits);
          real_slice_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_size = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .storeinfo info = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SseInfo sseinfo = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_sseinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasInfo casinfo = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_casinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileUnfinishAttrQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileUnfinishAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes sha = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_sha(), target);
  }

  // required uint32 mtime = 2;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_mtime(), target);
  }

  // optional bytes storage_type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_storage_type(), target);
  }

  // optional bytes uin = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_uin(), target);
  }

  // optional uint32 ctime = 5;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ctime(), target);
  }

  // optional uint32 usr_slice_size = 6;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_usr_slice_size(), target);
  }

  // optional uint32 real_slice_size = 7;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_real_slice_size(), target);
  }

  // optional uint64 file_size = 8;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_file_size(), target);
  }

  // optional bytes real_sha = 9;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_real_sha(), target);
  }

  // optional .storeinfo info = 10;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::info(this), target, stream);
  }

  // optional .ClientCos.SseInfo sseinfo = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::sseinfo(this), target, stream);
  }

  // optional .ClientCos.CasInfo casinfo = 12;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::casinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileUnfinishAttrQueryRsp)
  return target;
}

size_t FileUnfinishAttrQueryRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.FileUnfinishAttrQueryRsp)
  size_t total_size = 0;

  if (_internal_has_sha()) {
    // required bytes sha = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sha());
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t FileUnfinishAttrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileUnfinishAttrQueryRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000081) ^ 0x00000081) == 0) {  // All required fields are present.
    // required bytes sha = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sha());

    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007eu) {
    // optional bytes storage_type = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional bytes uin = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uin());
    }

    // optional bytes real_sha = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional .storeinfo info = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *info_);
    }

    // optional .ClientCos.SseInfo sseinfo = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sseinfo_);
    }

    // optional .ClientCos.CasInfo casinfo = 12;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casinfo_);
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional uint32 ctime = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 usr_slice_size = 6;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_usr_slice_size());
    }

    // optional uint32 real_slice_size = 7;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_real_slice_size());
    }

    // optional uint64 file_size = 8;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_size());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileUnfinishAttrQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileUnfinishAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FileUnfinishAttrQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileUnfinishAttrQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileUnfinishAttrQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileUnfinishAttrQueryRsp)
    MergeFrom(*source);
  }
}

void FileUnfinishAttrQueryRsp::MergeFrom(const FileUnfinishAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileUnfinishAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_sha(from._internal_sha());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_uin(from._internal_uin());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_info()->::storeinfo::MergeFrom(from._internal_info());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_sseinfo()->::ClientCos::SseInfo::MergeFrom(from._internal_sseinfo());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_casinfo()->::ClientCos::CasInfo::MergeFrom(from._internal_casinfo());
    }
    if (cached_has_bits & 0x00000080u) {
      mtime_ = from.mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000200u) {
      usr_slice_size_ = from.usr_slice_size_;
    }
    if (cached_has_bits & 0x00000400u) {
      real_slice_size_ = from.real_slice_size_;
    }
    if (cached_has_bits & 0x00000800u) {
      file_size_ = from.file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileUnfinishAttrQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileUnfinishAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileUnfinishAttrQueryRsp::CopyFrom(const FileUnfinishAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileUnfinishAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUnfinishAttrQueryRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void FileUnfinishAttrQueryRsp::InternalSwap(FileUnfinishAttrQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sha_.Swap(&other->sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uin_.Swap(&other->uin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileUnfinishAttrQueryRsp, file_size_)
      + sizeof(FileUnfinishAttrQueryRsp::file_size_)
      - PROTOBUF_FIELD_OFFSET(FileUnfinishAttrQueryRsp, info_)>(
          reinterpret_cast<char*>(&info_),
          reinterpret_cast<char*>(&other->info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileUnfinishAttrQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReduceLifecycleReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ReduceLifecycleReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ReduceLifecycleReq::ReduceLifecycleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ops_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ReduceLifecycleReq)
}
ReduceLifecycleReq::ReduceLifecycleReq(const ReduceLifecycleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      ops_(from.ops_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.ReduceLifecycleReq)
}

void ReduceLifecycleReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReduceLifecycleReq::~ReduceLifecycleReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ReduceLifecycleReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReduceLifecycleReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReduceLifecycleReq::ArenaDtor(void* object) {
  ReduceLifecycleReq* _this = reinterpret_cast< ReduceLifecycleReq* >(object);
  (void)_this;
}
void ReduceLifecycleReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReduceLifecycleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReduceLifecycleReq& ReduceLifecycleReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReduceLifecycleReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ReduceLifecycleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ReduceLifecycleReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ops_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sk_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReduceLifecycleReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.Opinfo ops = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ops(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // required bytes sk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReduceLifecycleReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ReduceLifecycleReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // repeated .ClientCos.Opinfo ops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ops_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_ops(i), target, stream);
  }

  // required bytes sk = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ReduceLifecycleReq)
  return target;
}

size_t ReduceLifecycleReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ReduceLifecycleReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_sk()) {
    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());
  }

  return total_size;
}
size_t ReduceLifecycleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ReduceLifecycleReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.Opinfo ops = 2;
  total_size += 1UL * this->_internal_ops_size();
  for (const auto& msg : this->ops_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReduceLifecycleReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ReduceLifecycleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReduceLifecycleReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReduceLifecycleReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ReduceLifecycleReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ReduceLifecycleReq)
    MergeFrom(*source);
  }
}

void ReduceLifecycleReq::MergeFrom(const ReduceLifecycleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ReduceLifecycleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ops_.MergeFrom(from.ops_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sk(from._internal_sk());
    }
  }
}

void ReduceLifecycleReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ReduceLifecycleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReduceLifecycleReq::CopyFrom(const ReduceLifecycleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ReduceLifecycleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReduceLifecycleReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(ops_)) return false;
  return true;
}

void ReduceLifecycleReq::InternalSwap(ReduceLifecycleReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ops_.InternalSwap(&other->ops_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReduceLifecycleReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReduceLifecycleRsp::_Internal {
 public:
};

ReduceLifecycleRsp::ReduceLifecycleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ReduceLifecycleRsp)
}
ReduceLifecycleRsp::ReduceLifecycleRsp(const ReduceLifecycleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.ReduceLifecycleRsp)
}

void ReduceLifecycleRsp::SharedCtor() {
}

ReduceLifecycleRsp::~ReduceLifecycleRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ReduceLifecycleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReduceLifecycleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReduceLifecycleRsp::ArenaDtor(void* object) {
  ReduceLifecycleRsp* _this = reinterpret_cast< ReduceLifecycleRsp* >(object);
  (void)_this;
}
void ReduceLifecycleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReduceLifecycleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReduceLifecycleRsp& ReduceLifecycleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReduceLifecycleRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ReduceLifecycleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ReduceLifecycleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReduceLifecycleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReduceLifecycleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ReduceLifecycleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ReduceLifecycleRsp)
  return target;
}

size_t ReduceLifecycleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ReduceLifecycleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReduceLifecycleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ReduceLifecycleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReduceLifecycleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReduceLifecycleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ReduceLifecycleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ReduceLifecycleRsp)
    MergeFrom(*source);
  }
}

void ReduceLifecycleRsp::MergeFrom(const ReduceLifecycleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ReduceLifecycleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReduceLifecycleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ReduceLifecycleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReduceLifecycleRsp::CopyFrom(const ReduceLifecycleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ReduceLifecycleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReduceLifecycleRsp::IsInitialized() const {
  return true;
}

void ReduceLifecycleRsp::InternalSwap(ReduceLifecycleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReduceLifecycleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RetrieveLifecycleReq::_Internal {
 public:
  using HasBits = decltype(std::declval<RetrieveLifecycleReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fsize(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_src_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_dst_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_op(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000037) ^ 0x00000037) != 0;
  }
};

RetrieveLifecycleReq::RetrieveLifecycleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.RetrieveLifecycleReq)
}
RetrieveLifecycleReq::RetrieveLifecycleReq(const RetrieveLifecycleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  src_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_src_type()) {
    src_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_src_type(), 
      GetArena());
  }
  dst_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_dst_type()) {
    dst_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dst_type(), 
      GetArena());
  }
  ::memcpy(&fsize_, &from.fsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&fsize_)) + sizeof(op_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.RetrieveLifecycleReq)
}

void RetrieveLifecycleReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dst_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&fsize_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&fsize_)) + sizeof(op_));
}

RetrieveLifecycleReq::~RetrieveLifecycleReq() {
  // @@protoc_insertion_point(destructor:ClientCos.RetrieveLifecycleReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RetrieveLifecycleReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dst_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RetrieveLifecycleReq::ArenaDtor(void* object) {
  RetrieveLifecycleReq* _this = reinterpret_cast< RetrieveLifecycleReq* >(object);
  (void)_this;
}
void RetrieveLifecycleReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RetrieveLifecycleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RetrieveLifecycleReq& RetrieveLifecycleReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RetrieveLifecycleReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void RetrieveLifecycleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.RetrieveLifecycleReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sk_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      src_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      dst_type_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&fsize_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&op_) -
        reinterpret_cast<char*>(&fsize_)) + sizeof(op_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RetrieveLifecycleReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 fsize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_fsize(&has_bits);
          fsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes sk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes src_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_src_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes dst_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_dst_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ClientCos.Action op = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Action_IsValid(val))) {
            _internal_set_op(static_cast<::ClientCos::Action>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RetrieveLifecycleReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.RetrieveLifecycleReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required uint64 fsize = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_fsize(), target);
  }

  // required bytes sk = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sk(), target);
  }

  // required bytes src_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_src_type(), target);
  }

  // optional bytes dst_type = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_dst_type(), target);
  }

  // required .ClientCos.Action op = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_op(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.RetrieveLifecycleReq)
  return target;
}

size_t RetrieveLifecycleReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.RetrieveLifecycleReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_sk()) {
    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());
  }

  if (_internal_has_src_type()) {
    // required bytes src_type = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_src_type());
  }

  if (_internal_has_fsize()) {
    // required uint64 fsize = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_fsize());
  }

  if (_internal_has_op()) {
    // required .ClientCos.Action op = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_op());
  }

  return total_size;
}
size_t RetrieveLifecycleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.RetrieveLifecycleReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000037) ^ 0x00000037) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());

    // required bytes src_type = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_src_type());

    // required uint64 fsize = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_fsize());

    // required .ClientCos.Action op = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_op());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes dst_type = 5;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_dst_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RetrieveLifecycleReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.RetrieveLifecycleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RetrieveLifecycleReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RetrieveLifecycleReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.RetrieveLifecycleReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.RetrieveLifecycleReq)
    MergeFrom(*source);
  }
}

void RetrieveLifecycleReq::MergeFrom(const RetrieveLifecycleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.RetrieveLifecycleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_src_type(from._internal_src_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_dst_type(from._internal_dst_type());
    }
    if (cached_has_bits & 0x00000010u) {
      fsize_ = from.fsize_;
    }
    if (cached_has_bits & 0x00000020u) {
      op_ = from.op_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RetrieveLifecycleReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.RetrieveLifecycleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrieveLifecycleReq::CopyFrom(const RetrieveLifecycleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.RetrieveLifecycleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrieveLifecycleReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void RetrieveLifecycleReq::InternalSwap(RetrieveLifecycleReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  src_type_.Swap(&other->src_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dst_type_.Swap(&other->dst_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RetrieveLifecycleReq, op_)
      + sizeof(RetrieveLifecycleReq::op_)
      - PROTOBUF_FIELD_OFFSET(RetrieveLifecycleReq, fsize_)>(
          reinterpret_cast<char*>(&fsize_),
          reinterpret_cast<char*>(&other->fsize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RetrieveLifecycleReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RetrieveLifecycleRsp::_Internal {
 public:
};

RetrieveLifecycleRsp::RetrieveLifecycleRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.RetrieveLifecycleRsp)
}
RetrieveLifecycleRsp::RetrieveLifecycleRsp(const RetrieveLifecycleRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.RetrieveLifecycleRsp)
}

void RetrieveLifecycleRsp::SharedCtor() {
}

RetrieveLifecycleRsp::~RetrieveLifecycleRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.RetrieveLifecycleRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RetrieveLifecycleRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RetrieveLifecycleRsp::ArenaDtor(void* object) {
  RetrieveLifecycleRsp* _this = reinterpret_cast< RetrieveLifecycleRsp* >(object);
  (void)_this;
}
void RetrieveLifecycleRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RetrieveLifecycleRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RetrieveLifecycleRsp& RetrieveLifecycleRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RetrieveLifecycleRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void RetrieveLifecycleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.RetrieveLifecycleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RetrieveLifecycleRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RetrieveLifecycleRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.RetrieveLifecycleRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.RetrieveLifecycleRsp)
  return target;
}

size_t RetrieveLifecycleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.RetrieveLifecycleRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RetrieveLifecycleRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.RetrieveLifecycleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RetrieveLifecycleRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RetrieveLifecycleRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.RetrieveLifecycleRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.RetrieveLifecycleRsp)
    MergeFrom(*source);
  }
}

void RetrieveLifecycleRsp::MergeFrom(const RetrieveLifecycleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.RetrieveLifecycleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RetrieveLifecycleRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.RetrieveLifecycleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrieveLifecycleRsp::CopyFrom(const RetrieveLifecycleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.RetrieveLifecycleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrieveLifecycleRsp::IsInitialized() const {
  return true;
}

void RetrieveLifecycleRsp::InternalSwap(RetrieveLifecycleRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RetrieveLifecycleRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Opinfo::_Internal {
 public:
  using HasBits = decltype(std::declval<Opinfo>()._has_bits_);
  static void set_has_op(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_file_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_storage(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_src_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dst_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000010) ^ 0x00000010) != 0;
  }
};

Opinfo::Opinfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.Opinfo)
}
Opinfo::Opinfo(const Opinfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  src_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_src_type()) {
    src_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_src_type(), 
      GetArena());
  }
  dst_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_dst_type()) {
    dst_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dst_type(), 
      GetArena());
  }
  ::memcpy(&file_count_, &from.file_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&file_count_)) + sizeof(op_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.Opinfo)
}

void Opinfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Opinfo_cosv4_5fclient_2eproto.base);
  src_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dst_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&file_count_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&file_count_)) + sizeof(op_));
}

Opinfo::~Opinfo() {
  // @@protoc_insertion_point(destructor:ClientCos.Opinfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Opinfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  src_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dst_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Opinfo::ArenaDtor(void* object) {
  Opinfo* _this = reinterpret_cast< Opinfo* >(object);
  (void)_this;
}
void Opinfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Opinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Opinfo& Opinfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Opinfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void Opinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.Opinfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      src_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      dst_type_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&file_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&op_) -
        reinterpret_cast<char*>(&file_count_)) + sizeof(op_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Opinfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .ClientCos.Action op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Action_IsValid(val))) {
            _internal_set_op(static_cast<::ClientCos::Action>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint64 file_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_file_count(&has_bits);
          file_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 storage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_storage(&has_bits);
          storage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes src_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_src_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes dst_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_dst_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Opinfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.Opinfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ClientCos.Action op = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_op(), target);
  }

  // optional uint64 file_count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_file_count(), target);
  }

  // optional uint64 storage = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_storage(), target);
  }

  // optional bytes src_type = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_src_type(), target);
  }

  // optional bytes dst_type = 5;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_dst_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.Opinfo)
  return target;
}

size_t Opinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.Opinfo)
  size_t total_size = 0;

  // required .ClientCos.Action op = 1;
  if (_internal_has_op()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_op());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes src_type = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_src_type());
    }

    // optional bytes dst_type = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_dst_type());
    }

    // optional uint64 file_count = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_count());
    }

    // optional uint64 storage = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_storage());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Opinfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.Opinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Opinfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Opinfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.Opinfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.Opinfo)
    MergeFrom(*source);
  }
}

void Opinfo::MergeFrom(const Opinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.Opinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_src_type(from._internal_src_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_dst_type(from._internal_dst_type());
    }
    if (cached_has_bits & 0x00000004u) {
      file_count_ = from.file_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      storage_ = from.storage_;
    }
    if (cached_has_bits & 0x00000010u) {
      op_ = from.op_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Opinfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.Opinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Opinfo::CopyFrom(const Opinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.Opinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Opinfo::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void Opinfo::InternalSwap(Opinfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  src_type_.Swap(&other->src_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dst_type_.Swap(&other->dst_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Opinfo, op_)
      + sizeof(Opinfo::op_)
      - PROTOBUF_FIELD_OFFSET(Opinfo, file_count_)>(
          reinterpret_cast<char*>(&file_count_),
          reinterpret_cast<char*>(&other->file_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Opinfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReservedAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<ReservedAttr>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ReservedAttr::ReservedAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ReservedAttr)
}
ReservedAttr::ReservedAttr(const ReservedAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ReservedAttr)
}

void ReservedAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReservedAttr_cosv4_5fclient_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
}

ReservedAttr::~ReservedAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.ReservedAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReservedAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReservedAttr::ArenaDtor(void* object) {
  ReservedAttr* _this = reinterpret_cast< ReservedAttr* >(object);
  (void)_this;
}
void ReservedAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReservedAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReservedAttr& ReservedAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReservedAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ReservedAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ReservedAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmpty();
  }
  key_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReservedAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .ClientCos.ReservedAttrKey key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::ReservedAttrKey_IsValid(val))) {
            _internal_set_key(static_cast<::ClientCos::ReservedAttrKey>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required bytes value = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReservedAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ReservedAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ClientCos.ReservedAttrKey key = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_key(), target);
  }

  // required bytes value = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ReservedAttr)
  return target;
}

size_t ReservedAttr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ReservedAttr)
  size_t total_size = 0;

  if (_internal_has_value()) {
    // required bytes value = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  if (_internal_has_key()) {
    // required .ClientCos.ReservedAttrKey key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_key());
  }

  return total_size;
}
size_t ReservedAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ReservedAttr)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes value = 2 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());

    // required .ClientCos.ReservedAttrKey key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReservedAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ReservedAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const ReservedAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReservedAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ReservedAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ReservedAttr)
    MergeFrom(*source);
  }
}

void ReservedAttr::MergeFrom(const ReservedAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ReservedAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      key_ = from.key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReservedAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ReservedAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReservedAttr::CopyFrom(const ReservedAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ReservedAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReservedAttr::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ReservedAttr::InternalSwap(ReservedAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(key_, other->key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReservedAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CustomHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomHeader>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CustomHeader::CustomHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CustomHeader)
}
CustomHeader::CustomHeader(const CustomHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.CustomHeader)
}

void CustomHeader::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomHeader_cosv4_5fclient_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CustomHeader::~CustomHeader() {
  // @@protoc_insertion_point(destructor:ClientCos.CustomHeader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CustomHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CustomHeader::ArenaDtor(void* object) {
  CustomHeader* _this = reinterpret_cast< CustomHeader* >(object);
  (void)_this;
}
void CustomHeader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CustomHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomHeader& CustomHeader::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomHeader_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CustomHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CustomHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomHeader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CustomHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CustomHeader)
  return target;
}

size_t CustomHeader::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.CustomHeader)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  if (_internal_has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  return total_size;
}
size_t CustomHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CustomHeader)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());

    // required bytes value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomHeader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CustomHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomHeader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CustomHeader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CustomHeader)
    MergeFrom(*source);
  }
}

void CustomHeader::MergeFrom(const CustomHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CustomHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
}

void CustomHeader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CustomHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomHeader::CopyFrom(const CustomHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CustomHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomHeader::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CustomHeader::InternalSwap(CustomHeader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomHeader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CorsRule::_Internal {
 public:
  using HasBits = decltype(std::declval<CorsRule>()._has_bits_);
  static void set_has_origin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_methods(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_credentials(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_allow_headers(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_expose_headers(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_max_age(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CorsRule::CorsRule(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CorsRule)
}
CorsRule::CorsRule(const CorsRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  origin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_origin()) {
    origin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_origin(), 
      GetArena());
  }
  methods_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_methods()) {
    methods_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_methods(), 
      GetArena());
  }
  allow_headers_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_allow_headers()) {
    allow_headers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_allow_headers(), 
      GetArena());
  }
  expose_headers_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_expose_headers()) {
    expose_headers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_expose_headers(), 
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  ::memcpy(&credentials_, &from.credentials_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_age_) -
    reinterpret_cast<char*>(&credentials_)) + sizeof(max_age_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.CorsRule)
}

void CorsRule::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CorsRule_cosv4_5fclient_2eproto.base);
  origin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  methods_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  allow_headers_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expose_headers_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&credentials_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&max_age_) -
      reinterpret_cast<char*>(&credentials_)) + sizeof(max_age_));
}

CorsRule::~CorsRule() {
  // @@protoc_insertion_point(destructor:ClientCos.CorsRule)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CorsRule::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  origin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  methods_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  allow_headers_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expose_headers_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CorsRule::ArenaDtor(void* object) {
  CorsRule* _this = reinterpret_cast< CorsRule* >(object);
  (void)_this;
}
void CorsRule::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CorsRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CorsRule& CorsRule::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CorsRule_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CorsRule::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CorsRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      origin_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      methods_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      allow_headers_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      expose_headers_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000060u) {
    ::memset(&credentials_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_age_) -
        reinterpret_cast<char*>(&credentials_)) + sizeof(max_age_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CorsRule::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes origin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_origin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes methods = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_methods();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool credentials = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_credentials(&has_bits);
          credentials_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes allow_headers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_allow_headers();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes expose_headers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_expose_headers();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 max_age = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_max_age(&has_bits);
          max_age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CorsRule::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CorsRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_origin(), target);
  }

  // required bytes methods = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_methods(), target);
  }

  // optional bool credentials = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_credentials(), target);
  }

  // optional bytes allow_headers = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_allow_headers(), target);
  }

  // optional bytes expose_headers = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_expose_headers(), target);
  }

  // optional int32 max_age = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_max_age(), target);
  }

  // optional bytes id = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CorsRule)
  return target;
}

size_t CorsRule::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.CorsRule)
  size_t total_size = 0;

  if (_internal_has_origin()) {
    // required bytes origin = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_origin());
  }

  if (_internal_has_methods()) {
    // required bytes methods = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_methods());
  }

  return total_size;
}
size_t CorsRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CorsRule)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes origin = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_origin());

    // required bytes methods = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_methods());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007cu) {
    // optional bytes allow_headers = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_allow_headers());
    }

    // optional bytes expose_headers = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_expose_headers());
    }

    // optional bytes id = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_id());
    }

    // optional bool credentials = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional int32 max_age = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_max_age());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CorsRule::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CorsRule)
  GOOGLE_DCHECK_NE(&from, this);
  const CorsRule* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CorsRule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CorsRule)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CorsRule)
    MergeFrom(*source);
  }
}

void CorsRule::MergeFrom(const CorsRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CorsRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_origin(from._internal_origin());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_methods(from._internal_methods());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_allow_headers(from._internal_allow_headers());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_expose_headers(from._internal_expose_headers());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000020u) {
      credentials_ = from.credentials_;
    }
    if (cached_has_bits & 0x00000040u) {
      max_age_ = from.max_age_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CorsRule::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CorsRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CorsRule::CopyFrom(const CorsRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CorsRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CorsRule::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CorsRule::InternalSwap(CorsRule* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  origin_.Swap(&other->origin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  methods_.Swap(&other->methods_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  allow_headers_.Swap(&other->allow_headers_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  expose_headers_.Swap(&other->expose_headers_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CorsRule, max_age_)
      + sizeof(CorsRule::max_age_)
      - PROTOBUF_FIELD_OFFSET(CorsRule, credentials_)>(
          reinterpret_cast<char*>(&credentials_),
          reinterpret_cast<char*>(&other->credentials_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CorsRule::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Tag::_Internal {
 public:
  using HasBits = decltype(std::declval<Tag>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Tag::Tag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.Tag)
}
Tag::Tag(const Tag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.Tag)
}

void Tag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Tag_cosv4_5fclient_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:ClientCos.Tag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Tag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Tag::ArenaDtor(void* object) {
  Tag* _this = reinterpret_cast< Tag* >(object);
  (void)_this;
}
void Tag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tag& Tag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Tag_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Tag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.Tag)
  return target;
}

size_t Tag::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.Tag)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  if (_internal_has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  return total_size;
}
size_t Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.Tag)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());

    // required bytes value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const Tag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Tag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.Tag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.Tag)
    MergeFrom(*source);
  }
}

void Tag::MergeFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
}

void Tag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void Tag::InternalSwap(Tag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Tag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjTag::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjTag>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ObjTag::ObjTag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjTag)
}
ObjTag::ObjTag(const ObjTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjTag)
}

void ObjTag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjTag_cosv4_5fclient_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ObjTag::~ObjTag() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjTag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjTag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjTag::ArenaDtor(void* object) {
  ObjTag* _this = reinterpret_cast< ObjTag* >(object);
  (void)_this;
}
void ObjTag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjTag& ObjTag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjTag_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjTag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjTag)
  return target;
}

size_t ObjTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjTag)
  size_t total_size = 0;

  // required bytes key = 1;
  if (_internal_has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes value = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjTag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjTag)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjTag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjTag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjTag)
    MergeFrom(*source);
  }
}

void ObjTag::MergeFrom(const ObjTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
}

void ObjTag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjTag::CopyFrom(const ObjTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjTag::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ObjTag::InternalSwap(ObjTag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjTag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LockInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<LockInfo>()._has_bits_);
  static void set_has_days(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LockInfo::LockInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.LockInfo)
}
LockInfo::LockInfo(const LockInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  days_ = from.days_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.LockInfo)
}

void LockInfo::SharedCtor() {
  days_ = 0u;
}

LockInfo::~LockInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.LockInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LockInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LockInfo::ArenaDtor(void* object) {
  LockInfo* _this = reinterpret_cast< LockInfo* >(object);
  (void)_this;
}
void LockInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LockInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LockInfo& LockInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LockInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void LockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.LockInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  days_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LockInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 days = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_days(&has_bits);
          days_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LockInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.LockInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 days = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_days(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.LockInfo)
  return target;
}

size_t LockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.LockInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 days = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_days());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.LockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LockInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LockInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.LockInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.LockInfo)
    MergeFrom(*source);
  }
}

void LockInfo::MergeFrom(const LockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.LockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_days()) {
    _internal_set_days(from._internal_days());
  }
}

void LockInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.LockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockInfo::CopyFrom(const LockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.LockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockInfo::IsInitialized() const {
  return true;
}

void LockInfo::InternalSwap(LockInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(days_, other->days_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LockInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<AppAttr>()._has_bits_);
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_usr_slice_size(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_real_slice_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::ClientCos::ExtraAttr& extraattr(const AppAttr* msg);
  static void set_has_extraattr(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_ctime_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_multi_version_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_multi_version_hisflag(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_bucketnum(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_idcnum(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_refer_able(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_emptyreferconfig(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_cname_able(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_upload_source(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ctime_ms_temp(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_uin(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_nofile(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::ClientCos::CasInfo& casinfo(const AppAttr* msg);
  static void set_has_casinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::ClientCos::SseInfo& sseinfo(const AppAttr* msg);
  static void set_has_sseinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::ClientCos::WebsiteInfo& websiteinfo(const AppAttr* msg);
  static void set_has_websiteinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::ClientCos::ObjExpireAttr& objexpireattr(const AppAttr* msg);
  static void set_has_objexpireattr(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_camauth(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_is_v4(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_visit_v4(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_is_chunk(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::ClientCos::OwnerInfo& objowner(const AppAttr* msg);
  static void set_has_objowner(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::ClientCos::OwnerInfo& bucketowner(const AppAttr* msg);
  static void set_has_bucketowner(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_nslot(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_is_ugc(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::ClientCos::LockInfo& lockinfo(const AppAttr* msg);
  static void set_has_lockinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_mtime_temp(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_inventory(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_inventory_mtime(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::ClientCos::Migrateinfo& migrateinfo(const AppAttr* msg);
  static void set_has_migrateinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
};

const ::ClientCos::ExtraAttr&
AppAttr::_Internal::extraattr(const AppAttr* msg) {
  return *msg->extraattr_;
}
const ::ClientCos::CasInfo&
AppAttr::_Internal::casinfo(const AppAttr* msg) {
  return *msg->casinfo_;
}
const ::ClientCos::SseInfo&
AppAttr::_Internal::sseinfo(const AppAttr* msg) {
  return *msg->sseinfo_;
}
const ::ClientCos::WebsiteInfo&
AppAttr::_Internal::websiteinfo(const AppAttr* msg) {
  return *msg->websiteinfo_;
}
const ::ClientCos::ObjExpireAttr&
AppAttr::_Internal::objexpireattr(const AppAttr* msg) {
  return *msg->objexpireattr_;
}
const ::ClientCos::OwnerInfo&
AppAttr::_Internal::objowner(const AppAttr* msg) {
  return *msg->objowner_;
}
const ::ClientCos::OwnerInfo&
AppAttr::_Internal::bucketowner(const AppAttr* msg) {
  return *msg->bucketowner_;
}
const ::ClientCos::LockInfo&
AppAttr::_Internal::lockinfo(const AppAttr* msg) {
  return *msg->lockinfo_;
}
const ::ClientCos::Migrateinfo&
AppAttr::_Internal::migrateinfo(const AppAttr* msg) {
  return *msg->migrateinfo_;
}
AppAttr::AppAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  keys_(arena),
  cname_(arena),
  whiterefer_(arena),
  blackrefer_(arena),
  reservedattr_(arena),
  customheader_(arena),
  corsrule_(arena),
  tag_(arena),
  lfattr_(arena),
  customheader_plat_(arena),
  taglist_(arena),
  acls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppAttr)
}
AppAttr::AppAttr(const AppAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      keys_(from.keys_),
      cname_(from.cname_),
      whiterefer_(from.whiterefer_),
      blackrefer_(from.blackrefer_),
      reservedattr_(from.reservedattr_),
      customheader_(from.customheader_),
      corsrule_(from.corsrule_),
      tag_(from.tag_),
      lfattr_(from.lfattr_),
      customheader_plat_(from.customheader_plat_),
      taglist_(from.taglist_),
      acls_(from.acls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha()) {
    sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha(), 
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  upload_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_upload_source()) {
    upload_source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_upload_source(), 
      GetArena());
  }
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uin()) {
    uin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uin(), 
      GetArena());
  }
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_inventory()) {
    inventory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inventory(), 
      GetArena());
  }
  if (from._internal_has_extraattr()) {
    extraattr_ = new ::ClientCos::ExtraAttr(*from.extraattr_);
  } else {
    extraattr_ = nullptr;
  }
  if (from._internal_has_casinfo()) {
    casinfo_ = new ::ClientCos::CasInfo(*from.casinfo_);
  } else {
    casinfo_ = nullptr;
  }
  if (from._internal_has_sseinfo()) {
    sseinfo_ = new ::ClientCos::SseInfo(*from.sseinfo_);
  } else {
    sseinfo_ = nullptr;
  }
  if (from._internal_has_websiteinfo()) {
    websiteinfo_ = new ::ClientCos::WebsiteInfo(*from.websiteinfo_);
  } else {
    websiteinfo_ = nullptr;
  }
  if (from._internal_has_objexpireattr()) {
    objexpireattr_ = new ::ClientCos::ObjExpireAttr(*from.objexpireattr_);
  } else {
    objexpireattr_ = nullptr;
  }
  if (from._internal_has_objowner()) {
    objowner_ = new ::ClientCos::OwnerInfo(*from.objowner_);
  } else {
    objowner_ = nullptr;
  }
  if (from._internal_has_bucketowner()) {
    bucketowner_ = new ::ClientCos::OwnerInfo(*from.bucketowner_);
  } else {
    bucketowner_ = nullptr;
  }
  if (from._internal_has_lockinfo()) {
    lockinfo_ = new ::ClientCos::LockInfo(*from.lockinfo_);
  } else {
    lockinfo_ = nullptr;
  }
  if (from._internal_has_migrateinfo()) {
    migrateinfo_ = new ::ClientCos::Migrateinfo(*from.migrateinfo_);
  } else {
    migrateinfo_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&inventory_mtime_) -
    reinterpret_cast<char*>(&type_)) + sizeof(inventory_mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppAttr)
}

void AppAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppAttr_cosv4_5fclient_2eproto.base);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&extraattr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&inventory_mtime_) -
      reinterpret_cast<char*>(&extraattr_)) + sizeof(inventory_mtime_));
}

AppAttr::~AppAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.AppAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inventory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extraattr_;
  if (this != internal_default_instance()) delete casinfo_;
  if (this != internal_default_instance()) delete sseinfo_;
  if (this != internal_default_instance()) delete websiteinfo_;
  if (this != internal_default_instance()) delete objexpireattr_;
  if (this != internal_default_instance()) delete objowner_;
  if (this != internal_default_instance()) delete bucketowner_;
  if (this != internal_default_instance()) delete lockinfo_;
  if (this != internal_default_instance()) delete migrateinfo_;
}

void AppAttr::ArenaDtor(void* object) {
  AppAttr* _this = reinterpret_cast< AppAttr* >(object);
  (void)_this;
}
void AppAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppAttr& AppAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cname_.Clear();
  whiterefer_.Clear();
  blackrefer_.Clear();
  reservedattr_.Clear();
  customheader_.Clear();
  corsrule_.Clear();
  tag_.Clear();
  lfattr_.Clear();
  customheader_plat_.Clear();
  taglist_.Clear();
  acls_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      upload_source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      uin_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      inventory_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(extraattr_ != nullptr);
      extraattr_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(casinfo_ != nullptr);
      casinfo_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(sseinfo_ != nullptr);
      sseinfo_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(websiteinfo_ != nullptr);
      websiteinfo_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(objexpireattr_ != nullptr);
      objexpireattr_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(objowner_ != nullptr);
      objowner_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(bucketowner_ != nullptr);
      bucketowner_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(lockinfo_ != nullptr);
      lockinfo_->Clear();
    }
  }
  if (cached_has_bits & 0x00010000u) {
    GOOGLE_DCHECK(migrateinfo_ != nullptr);
    migrateinfo_->Clear();
  }
  if (cached_has_bits & 0x00fe0000u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ctime_ms_) -
        reinterpret_cast<char*>(&type_)) + sizeof(ctime_ms_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&multi_version_hisflag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ctime_ms_temp_) -
        reinterpret_cast<char*>(&multi_version_hisflag_)) + sizeof(ctime_ms_temp_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&camauth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&inventory_mtime_) -
        reinterpret_cast<char*>(&camauth_)) + sizeof(inventory_mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes biz_attr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_type(&_has_bits_);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sha = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bytes path = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.KeyPair keys = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string cname = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cname();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.AppAttr.cname");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string whiterefer = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_whiterefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.AppAttr.whiterefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string blackrefer = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blackrefer();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.AppAttr.blackrefer");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 usr_slice_size = 10 [default = 0];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_usr_slice_size(&_has_bits_);
          usr_slice_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 11 [default = 0];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_forbid(&_has_bits_);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 real_slice_size = 13 [default = 0];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_real_slice_size(&_has_bits_);
          real_slice_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CorsRule corsrule = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_corsrule(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ExtraAttr extraattr = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_extraattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 ctime_ms = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_ctime_ms(&_has_bits_);
          ctime_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 multi_version_flag = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_multi_version_flag(&_has_bits_);
          multi_version_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 multi_version_hisflag = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_multi_version_hisflag(&_has_bits_);
          multi_version_hisflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.Tag tag = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_tag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 bucketnum = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_bucketnum(&_has_bits_);
          bucketnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 idcnum = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_idcnum(&_has_bits_);
          idcnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.LFAttr lfattr = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_lfattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool refer_able = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_refer_able(&_has_bits_);
          refer_able_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool emptyreferconfig = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_emptyreferconfig(&_has_bits_);
          emptyreferconfig_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool cname_able = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_cname_able(&_has_bits_);
          cname_able_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes upload_source = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_upload_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 ctime_ms_temp = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_ctime_ms_temp(&_has_bits_);
          ctime_ms_temp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader_plat = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_customheader_plat(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<250>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes uin = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_uin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool nofile = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_nofile(&_has_bits_);
          nofile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasInfo casinfo = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_casinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SseInfo sseinfo = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_sseinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.WebsiteInfo websiteinfo = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_websiteinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ObjTag taglist = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_taglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<298>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjExpireAttr objexpireattr = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_objexpireattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CamAuth camauth = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CamAuth_IsValid(val))) {
            _internal_set_camauth(static_cast<::ClientCos::CamAuth>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(39, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool is_v4 = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_is_v4(&_has_bits_);
          is_v4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visit_v4 = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_visit_v4(&_has_bits_);
          visit_v4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_chunk = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_is_chunk(&_has_bits_);
          is_chunk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo objOwner = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_objowner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo bucketOwner = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketowner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.AclInfo acls = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_acls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<362>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.NSlot nslot = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::NSlot_IsValid(val))) {
            _internal_set_nslot(static_cast<::ClientCos::NSlot>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(46, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool is_ugc = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_is_ugc(&_has_bits_);
          is_ugc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.LockInfo lockinfo = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_lockinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime_temp = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_mtime_temp(&_has_bits_);
          mtime_temp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes inventory = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_inventory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 inventory_mtime = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_inventory_mtime(&_has_bits_);
          inventory_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Migrateinfo migrateinfo = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_migrateinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes biz_attr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_biz_attr(), target);
  }

  // optional uint32 type = 2;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_type(), target);
  }

  // optional bytes sha = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sha(), target);
  }

  // optional .ClientCos.Authority auth = 4;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_auth(), target);
  }

  // optional bytes path = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_path(), target);
  }

  // repeated .ClientCos.KeyPair keys = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_keys_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_keys(i), target, stream);
  }

  // repeated string cname = 7;
  for (int i = 0, n = this->_internal_cname_size(); i < n; i++) {
    const auto& s = this->_internal_cname(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.AppAttr.cname");
    target = stream->WriteString(7, s, target);
  }

  // repeated string whiterefer = 8;
  for (int i = 0, n = this->_internal_whiterefer_size(); i < n; i++) {
    const auto& s = this->_internal_whiterefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.AppAttr.whiterefer");
    target = stream->WriteString(8, s, target);
  }

  // repeated string blackrefer = 9;
  for (int i = 0, n = this->_internal_blackrefer_size(); i < n; i++) {
    const auto& s = this->_internal_blackrefer(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.AppAttr.blackrefer");
    target = stream->WriteString(9, s, target);
  }

  // optional uint32 usr_slice_size = 10 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_usr_slice_size(), target);
  }

  // optional uint32 forbid = 11 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_reservedattr(i), target, stream);
  }

  // optional uint32 real_slice_size = 13 [default = 0];
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_real_slice_size(), target);
  }

  // repeated .ClientCos.CustomHeader customheader = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_customheader(i), target, stream);
  }

  // repeated .ClientCos.CorsRule corsrule = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_corsrule_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_corsrule(i), target, stream);
  }

  // optional bytes real_sha = 16;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        16, this->_internal_real_sha(), target);
  }

  // optional .ClientCos.ExtraAttr extraattr = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::extraattr(this), target, stream);
  }

  // optional uint64 ctime_ms = 18;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(18, this->_internal_ctime_ms(), target);
  }

  // optional bytes version = 19;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        19, this->_internal_version(), target);
  }

  // optional uint32 multi_version_flag = 20;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_multi_version_flag(), target);
  }

  // optional uint32 multi_version_hisflag = 21;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_multi_version_hisflag(), target);
  }

  // repeated .ClientCos.Tag tag = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, this->_internal_tag(i), target, stream);
  }

  // optional uint32 bucketnum = 23;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_bucketnum(), target);
  }

  // optional uint32 idcnum = 24;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_idcnum(), target);
  }

  // repeated .ClientCos.LFAttr lfattr = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_lfattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, this->_internal_lfattr(i), target, stream);
  }

  // optional bool refer_able = 26;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_refer_able(), target);
  }

  // optional bool emptyreferconfig = 27;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(27, this->_internal_emptyreferconfig(), target);
  }

  // optional bool cname_able = 28;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_cname_able(), target);
  }

  // optional bytes upload_source = 29;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        29, this->_internal_upload_source(), target);
  }

  // optional uint64 ctime_ms_temp = 30;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(30, this->_internal_ctime_ms_temp(), target);
  }

  // repeated .ClientCos.CustomHeader customheader_plat = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_plat_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, this->_internal_customheader_plat(i), target, stream);
  }

  // optional bytes uin = 32;
  if (cached_has_bits & 0x00000040u) {
    target = stream->WriteBytesMaybeAliased(
        32, this->_internal_uin(), target);
  }

  // optional bool nofile = 33;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(33, this->_internal_nofile(), target);
  }

  // optional .ClientCos.CasInfo casinfo = 34;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        34, _Internal::casinfo(this), target, stream);
  }

  // optional .ClientCos.SseInfo sseinfo = 35;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::sseinfo(this), target, stream);
  }

  // optional .ClientCos.WebsiteInfo websiteinfo = 36;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        36, _Internal::websiteinfo(this), target, stream);
  }

  // repeated .ClientCos.ObjTag taglist = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, this->_internal_taglist(i), target, stream);
  }

  // optional .ClientCos.ObjExpireAttr objexpireattr = 38;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        38, _Internal::objexpireattr(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ClientCos.CamAuth camauth = 39;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      39, this->_internal_camauth(), target);
  }

  // optional bool is_v4 = 40;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_is_v4(), target);
  }

  // optional bool visit_v4 = 41;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(41, this->_internal_visit_v4(), target);
  }

  // optional bool is_chunk = 42;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_is_chunk(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.OwnerInfo objOwner = 43;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::objowner(this), target, stream);
  }

  // optional .ClientCos.OwnerInfo bucketOwner = 44;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        44, _Internal::bucketowner(this), target, stream);
  }

  // repeated .ClientCos.AclInfo acls = 45;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acls_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, this->_internal_acls(i), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional .ClientCos.NSlot nslot = 46;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      46, this->_internal_nslot(), target);
  }

  // optional bool is_ugc = 47;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(47, this->_internal_is_ugc(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.LockInfo lockinfo = 48;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        48, _Internal::lockinfo(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 mtime_temp = 49;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(49, this->_internal_mtime_temp(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes inventory = 50;
  if (cached_has_bits & 0x00000080u) {
    target = stream->WriteBytesMaybeAliased(
        50, this->_internal_inventory(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 inventory_mtime = 51;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(51, this->_internal_inventory_mtime(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.Migrateinfo migrateinfo = 52;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        52, _Internal::migrateinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppAttr)
  return target;
}

size_t AppAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppAttr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.KeyPair keys = 6;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string cname = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cname_.size());
  for (int i = 0, n = cname_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cname_.Get(i));
  }

  // repeated string whiterefer = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(whiterefer_.size());
  for (int i = 0, n = whiterefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      whiterefer_.Get(i));
  }

  // repeated string blackrefer = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(blackrefer_.size());
  for (int i = 0, n = blackrefer_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      blackrefer_.Get(i));
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 12;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 14;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CorsRule corsrule = 15;
  total_size += 1UL * this->_internal_corsrule_size();
  for (const auto& msg : this->corsrule_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.Tag tag = 22;
  total_size += 2UL * this->_internal_tag_size();
  for (const auto& msg : this->tag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.LFAttr lfattr = 25;
  total_size += 2UL * this->_internal_lfattr_size();
  for (const auto& msg : this->lfattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader_plat = 31;
  total_size += 2UL * this->_internal_customheader_plat_size();
  for (const auto& msg : this->customheader_plat_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ObjTag taglist = 37;
  total_size += 2UL * this->_internal_taglist_size();
  for (const auto& msg : this->taglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.AclInfo acls = 45;
  total_size += 2UL * this->_internal_acls_size();
  for (const auto& msg : this->acls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes biz_attr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes sha = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sha());
    }

    // optional bytes path = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_path());
    }

    // optional bytes real_sha = 16;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional bytes version = 19;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes upload_source = 29;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_upload_source());
    }

    // optional bytes uin = 32;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uin());
    }

    // optional bytes inventory = 50;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_inventory());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .ClientCos.ExtraAttr extraattr = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *extraattr_);
    }

    // optional .ClientCos.CasInfo casinfo = 34;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casinfo_);
    }

    // optional .ClientCos.SseInfo sseinfo = 35;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sseinfo_);
    }

    // optional .ClientCos.WebsiteInfo websiteinfo = 36;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *websiteinfo_);
    }

    // optional .ClientCos.ObjExpireAttr objexpireattr = 38;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objexpireattr_);
    }

    // optional .ClientCos.OwnerInfo objOwner = 43;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objowner_);
    }

    // optional .ClientCos.OwnerInfo bucketOwner = 44;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bucketowner_);
    }

    // optional .ClientCos.LockInfo lockinfo = 48;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lockinfo_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .ClientCos.Migrateinfo migrateinfo = 52;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *migrateinfo_);
    }

    // optional uint32 type = 2;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

    // optional .ClientCos.Authority auth = 4;
    if (cached_has_bits & 0x00040000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional uint32 usr_slice_size = 10 [default = 0];
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_usr_slice_size());
    }

    // optional uint32 forbid = 11 [default = 0];
    if (cached_has_bits & 0x00100000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional uint32 real_slice_size = 13 [default = 0];
    if (cached_has_bits & 0x00200000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_real_slice_size());
    }

    // optional uint32 multi_version_flag = 20;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_multi_version_flag());
    }

    // optional uint64 ctime_ms = 18;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_ctime_ms());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional uint32 multi_version_hisflag = 21;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_multi_version_hisflag());
    }

    // optional uint32 bucketnum = 23;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bucketnum());
    }

    // optional uint32 idcnum = 24;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_idcnum());
    }

    // optional bool refer_able = 26;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool emptyreferconfig = 27;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool cname_able = 28;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool nofile = 33;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional uint64 ctime_ms_temp = 30;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_ctime_ms_temp());
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .ClientCos.CamAuth camauth = 39;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_camauth());
    }

    // optional bool is_v4 = 40;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool visit_v4 = 41;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool is_chunk = 42;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool is_ugc = 47;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional .ClientCos.NSlot nslot = 46;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_nslot());
    }

    // optional uint32 mtime_temp = 49;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime_temp());
    }

    // optional uint32 inventory_mtime = 51;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_inventory_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const AppAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppAttr)
    MergeFrom(*source);
  }
}

void AppAttr::MergeFrom(const AppAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cname_.MergeFrom(from.cname_);
  whiterefer_.MergeFrom(from.whiterefer_);
  blackrefer_.MergeFrom(from.blackrefer_);
  reservedattr_.MergeFrom(from.reservedattr_);
  customheader_.MergeFrom(from.customheader_);
  corsrule_.MergeFrom(from.corsrule_);
  tag_.MergeFrom(from.tag_);
  lfattr_.MergeFrom(from.lfattr_);
  customheader_plat_.MergeFrom(from.customheader_plat_);
  taglist_.MergeFrom(from.taglist_);
  acls_.MergeFrom(from.acls_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sha(from._internal_sha());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_upload_source(from._internal_upload_source());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_uin(from._internal_uin());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_set_inventory(from._internal_inventory());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_extraattr()->::ClientCos::ExtraAttr::MergeFrom(from._internal_extraattr());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_casinfo()->::ClientCos::CasInfo::MergeFrom(from._internal_casinfo());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_sseinfo()->::ClientCos::SseInfo::MergeFrom(from._internal_sseinfo());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_websiteinfo()->::ClientCos::WebsiteInfo::MergeFrom(from._internal_websiteinfo());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_objexpireattr()->::ClientCos::ObjExpireAttr::MergeFrom(from._internal_objexpireattr());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_objowner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_objowner());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_bucketowner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_bucketowner());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_lockinfo()->::ClientCos::LockInfo::MergeFrom(from._internal_lockinfo());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_migrateinfo()->::ClientCos::Migrateinfo::MergeFrom(from._internal_migrateinfo());
    }
    if (cached_has_bits & 0x00020000u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00040000u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00080000u) {
      usr_slice_size_ = from.usr_slice_size_;
    }
    if (cached_has_bits & 0x00100000u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00200000u) {
      real_slice_size_ = from.real_slice_size_;
    }
    if (cached_has_bits & 0x00400000u) {
      multi_version_flag_ = from.multi_version_flag_;
    }
    if (cached_has_bits & 0x00800000u) {
      ctime_ms_ = from.ctime_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      multi_version_hisflag_ = from.multi_version_hisflag_;
    }
    if (cached_has_bits & 0x02000000u) {
      bucketnum_ = from.bucketnum_;
    }
    if (cached_has_bits & 0x04000000u) {
      idcnum_ = from.idcnum_;
    }
    if (cached_has_bits & 0x08000000u) {
      refer_able_ = from.refer_able_;
    }
    if (cached_has_bits & 0x10000000u) {
      emptyreferconfig_ = from.emptyreferconfig_;
    }
    if (cached_has_bits & 0x20000000u) {
      cname_able_ = from.cname_able_;
    }
    if (cached_has_bits & 0x40000000u) {
      nofile_ = from.nofile_;
    }
    if (cached_has_bits & 0x80000000u) {
      ctime_ms_temp_ = from.ctime_ms_temp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      camauth_ = from.camauth_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_v4_ = from.is_v4_;
    }
    if (cached_has_bits & 0x00000004u) {
      visit_v4_ = from.visit_v4_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_chunk_ = from.is_chunk_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_ugc_ = from.is_ugc_;
    }
    if (cached_has_bits & 0x00000020u) {
      nslot_ = from.nslot_;
    }
    if (cached_has_bits & 0x00000040u) {
      mtime_temp_ = from.mtime_temp_;
    }
    if (cached_has_bits & 0x00000080u) {
      inventory_mtime_ = from.inventory_mtime_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void AppAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppAttr::CopyFrom(const AppAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppAttr::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(corsrule_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(tag_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(lfattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_plat_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(taglist_)) return false;
  if (_internal_has_websiteinfo()) {
    if (!websiteinfo_->IsInitialized()) return false;
  }
  return true;
}

void AppAttr::InternalSwap(AppAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  keys_.InternalSwap(&other->keys_);
  cname_.InternalSwap(&other->cname_);
  whiterefer_.InternalSwap(&other->whiterefer_);
  blackrefer_.InternalSwap(&other->blackrefer_);
  reservedattr_.InternalSwap(&other->reservedattr_);
  customheader_.InternalSwap(&other->customheader_);
  corsrule_.InternalSwap(&other->corsrule_);
  tag_.InternalSwap(&other->tag_);
  lfattr_.InternalSwap(&other->lfattr_);
  customheader_plat_.InternalSwap(&other->customheader_plat_);
  taglist_.InternalSwap(&other->taglist_);
  acls_.InternalSwap(&other->acls_);
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha_.Swap(&other->sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  upload_source_.Swap(&other->upload_source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uin_.Swap(&other->uin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  inventory_.Swap(&other->inventory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppAttr, inventory_mtime_)
      + sizeof(AppAttr::inventory_mtime_)
      - PROTOBUF_FIELD_OFFSET(AppAttr, extraattr_)>(
          reinterpret_cast<char*>(&extraattr_),
          reinterpret_cast<char*>(&other->extraattr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class KeyPair::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyPair>()._has_bits_);
  static void set_has_accesskey(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_secretkey(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyPair::KeyPair(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.KeyPair)
}
KeyPair::KeyPair(const KeyPair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accesskey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_accesskey()) {
    accesskey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accesskey(), 
      GetArena());
  }
  secretkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_secretkey()) {
    secretkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_secretkey(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.KeyPair)
}

void KeyPair::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyPair_cosv4_5fclient_2eproto.base);
  accesskey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secretkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

KeyPair::~KeyPair() {
  // @@protoc_insertion_point(destructor:ClientCos.KeyPair)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyPair::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accesskey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secretkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyPair::ArenaDtor(void* object) {
  KeyPair* _this = reinterpret_cast< KeyPair* >(object);
  (void)_this;
}
void KeyPair::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyPair& KeyPair::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyPair_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void KeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.KeyPair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      accesskey_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      secretkey_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyPair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string accesskey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_accesskey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.KeyPair.accesskey");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string secretkey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_secretkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.KeyPair.secretkey");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyPair::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.KeyPair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string accesskey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_accesskey().data(), static_cast<int>(this->_internal_accesskey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.KeyPair.accesskey");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accesskey(), target);
  }

  // optional string secretkey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_secretkey().data(), static_cast<int>(this->_internal_secretkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.KeyPair.secretkey");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secretkey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.KeyPair)
  return target;
}

size_t KeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.KeyPair)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string accesskey = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_accesskey());
    }

    // optional string secretkey = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_secretkey());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyPair::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyPair* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyPair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.KeyPair)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.KeyPair)
    MergeFrom(*source);
  }
}

void KeyPair::MergeFrom(const KeyPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_accesskey(from._internal_accesskey());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_secretkey(from._internal_secretkey());
    }
  }
}

void KeyPair::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyPair::CopyFrom(const KeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyPair::IsInitialized() const {
  return true;
}

void KeyPair::InternalSwap(KeyPair* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accesskey_.Swap(&other->accesskey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secretkey_.Swap(&other->secretkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyPair::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjItem::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjItem>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_upload_size(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ctime_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_delete_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_islatest(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::ClientCos::ObjExpireAttr& objexpireattr(const ObjItem* msg);
  static void set_has_objexpireattr(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::ClientCos::SseInfo& sseinfo(const ObjItem* msg);
  static void set_has_sseinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_is_ugc(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
};

const ::ClientCos::ObjExpireAttr&
ObjItem::_Internal::objexpireattr(const ObjItem* msg) {
  return *msg->objexpireattr_;
}
const ::ClientCos::SseInfo&
ObjItem::_Internal::sseinfo(const ObjItem* msg) {
  return *msg->sseinfo_;
}
ObjItem::ObjItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reservedattr_(arena),
  taglist_(arena),
  customheader_(arena),
  x_cos_customheader_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjItem)
}
ObjItem::ObjItem(const ObjItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      reservedattr_(from.reservedattr_),
      taglist_(from.taglist_),
      customheader_(from.customheader_),
      x_cos_customheader_(from.x_cos_customheader_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha()) {
    sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  if (from._internal_has_objexpireattr()) {
    objexpireattr_ = new ::ClientCos::ObjExpireAttr(*from.objexpireattr_);
  } else {
    objexpireattr_ = nullptr;
  }
  if (from._internal_has_sseinfo()) {
    sseinfo_ = new ::ClientCos::SseInfo(*from.sseinfo_);
  } else {
    sseinfo_ = nullptr;
  }
  ::memcpy(&file_size_, &from.file_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&forbid_) -
    reinterpret_cast<char*>(&file_size_)) + sizeof(forbid_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjItem)
}

void ObjItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjItem_cosv4_5fclient_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&objexpireattr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&forbid_) -
      reinterpret_cast<char*>(&objexpireattr_)) + sizeof(forbid_));
}

ObjItem::~ObjItem() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete objexpireattr_;
  if (this != internal_default_instance()) delete sseinfo_;
}

void ObjItem::ArenaDtor(void* object) {
  ObjItem* _this = reinterpret_cast< ObjItem* >(object);
  (void)_this;
}
void ObjItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjItem& ObjItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjItem_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reservedattr_.Clear();
  taglist_.Clear();
  customheader_.Clear();
  x_cos_customheader_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(objexpireattr_ != nullptr);
      objexpireattr_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(sseinfo_ != nullptr);
      sseinfo_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&file_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delete_marker_) -
        reinterpret_cast<char*>(&file_size_)) + sizeof(delete_marker_));
  }
  if (cached_has_bits & 0x00070000u) {
    ::memset(&islatest_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&forbid_) -
        reinterpret_cast<char*>(&islatest_)) + sizeof(forbid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 upload_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_upload_size(&has_bits);
          upload_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 ctime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 mtime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes biz_attr = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sha = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 ctime_ms = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_ctime_ms(&has_bits);
          ctime_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool delete_marker = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_delete_marker(&has_bits);
          delete_marker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool islatest = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_islatest(&has_bits);
          islatest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ObjTag taglist = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_taglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjExpireAttr objexpireattr = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_objexpireattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SseInfo sseinfo = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_sseinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader x_cos_customheader = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_x_cos_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_ugc = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_is_ugc(&has_bits);
          is_ugc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional uint64 file_size = 3;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_file_size(), target);
  }

  // optional uint64 upload_size = 4;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_upload_size(), target);
  }

  // optional uint64 ctime = 5;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_ctime(), target);
  }

  // optional uint64 mtime = 6;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_mtime(), target);
  }

  // optional bytes biz_attr = 7;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_biz_attr(), target);
  }

  // optional bytes sha = 8;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_sha(), target);
  }

  // optional .ClientCos.Authority auth = 9;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_auth(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_reservedattr(i), target, stream);
  }

  // optional bytes real_sha = 11;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_real_sha(), target);
  }

  // optional bytes version = 12;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_version(), target);
  }

  // optional uint64 ctime_ms = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_ctime_ms(), target);
  }

  // optional bytes storage_type = 14;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        14, this->_internal_storage_type(), target);
  }

  // optional bool delete_marker = 15;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_delete_marker(), target);
  }

  // optional bool islatest = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_islatest(), target);
  }

  // optional uint32 type = 17;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_type(), target);
  }

  // repeated .ClientCos.ObjTag taglist = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, this->_internal_taglist(i), target, stream);
  }

  // optional .ClientCos.ObjExpireAttr objexpireattr = 19;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::objexpireattr(this), target, stream);
  }

  // repeated .ClientCos.CustomHeader customheader = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, this->_internal_customheader(i), target, stream);
  }

  // optional .ClientCos.SseInfo sseinfo = 21;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::sseinfo(this), target, stream);
  }

  // repeated .ClientCos.CustomHeader x_cos_customheader = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_x_cos_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, this->_internal_x_cos_customheader(i), target, stream);
  }

  // optional uint32 forbid = 23;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_forbid(), target);
  }

  // optional bool is_ugc = 24;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_is_ugc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjItem)
  return target;
}

size_t ObjItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ReservedAttr reservedattr = 10;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ObjTag taglist = 18;
  total_size += 2UL * this->_internal_taglist_size();
  for (const auto& msg : this->taglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 20;
  total_size += 2UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader x_cos_customheader = 22;
  total_size += 2UL * this->_internal_x_cos_customheader_size();
  for (const auto& msg : this->x_cos_customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_name());
    }

    // optional bytes biz_attr = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_biz_attr());
    }

    // optional bytes sha = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sha());
    }

    // optional bytes real_sha = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional bytes version = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes storage_type = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional .ClientCos.ObjExpireAttr objexpireattr = 19;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objexpireattr_);
    }

    // optional .ClientCos.SseInfo sseinfo = 21;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sseinfo_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint64 file_size = 3;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_size());
    }

    // optional uint64 upload_size = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_upload_size());
    }

    // optional uint64 ctime = 5;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_ctime());
    }

    // optional uint64 mtime = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_mtime());
    }

    // optional uint64 ctime_ms = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_ctime_ms());
    }

    // optional .ClientCos.Authority auth = 9;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

    // optional uint32 type = 17;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

    // optional bool delete_marker = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00070000u) {
    // optional bool islatest = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool is_ugc = 24;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional uint32 forbid = 23;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjItem)
    MergeFrom(*source);
  }
}

void ObjItem::MergeFrom(const ObjItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reservedattr_.MergeFrom(from.reservedattr_);
  taglist_.MergeFrom(from.taglist_);
  customheader_.MergeFrom(from.customheader_);
  x_cos_customheader_.MergeFrom(from.x_cos_customheader_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_sha(from._internal_sha());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_objexpireattr()->::ClientCos::ObjExpireAttr::MergeFrom(from._internal_objexpireattr());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_sseinfo()->::ClientCos::SseInfo::MergeFrom(from._internal_sseinfo());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000200u) {
      upload_size_ = from.upload_size_;
    }
    if (cached_has_bits & 0x00000400u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000800u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00001000u) {
      ctime_ms_ = from.ctime_ms_;
    }
    if (cached_has_bits & 0x00002000u) {
      auth_ = from.auth_;
    }
    if (cached_has_bits & 0x00004000u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00008000u) {
      delete_marker_ = from.delete_marker_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      islatest_ = from.islatest_;
    }
    if (cached_has_bits & 0x00020000u) {
      is_ugc_ = from.is_ugc_;
    }
    if (cached_has_bits & 0x00040000u) {
      forbid_ = from.forbid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjItem::CopyFrom(const ObjItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjItem::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(taglist_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(x_cos_customheader_)) return false;
  return true;
}

void ObjItem::InternalSwap(ObjItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reservedattr_.InternalSwap(&other->reservedattr_);
  taglist_.InternalSwap(&other->taglist_);
  customheader_.InternalSwap(&other->customheader_);
  x_cos_customheader_.InternalSwap(&other->x_cos_customheader_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha_.Swap(&other->sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjItem, forbid_)
      + sizeof(ObjItem::forbid_)
      - PROTOBUF_FIELD_OFFSET(ObjItem, objexpireattr_)>(
          reinterpret_cast<char*>(&objexpireattr_),
          reinterpret_cast<char*>(&other->objexpireattr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MutiObjItem::_Internal {
 public:
  using HasBits = decltype(std::declval<MutiObjItem>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uploadkey(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

MutiObjItem::MutiObjItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.MutiObjItem)
}
MutiObjItem::MutiObjItem(const MutiObjItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  uploadkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uploadkey()) {
    uploadkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uploadkey(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uin()) {
    uin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uin(), 
      GetArena());
  }
  ::memcpy(&ctime_, &from.ctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
    reinterpret_cast<char*>(&ctime_)) + sizeof(file_size_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.MutiObjItem)
}

void MutiObjItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MutiObjItem_cosv4_5fclient_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctime_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
      reinterpret_cast<char*>(&ctime_)) + sizeof(file_size_));
}

MutiObjItem::~MutiObjItem() {
  // @@protoc_insertion_point(destructor:ClientCos.MutiObjItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MutiObjItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MutiObjItem::ArenaDtor(void* object) {
  MutiObjItem* _this = reinterpret_cast< MutiObjItem* >(object);
  (void)_this;
}
void MutiObjItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MutiObjItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MutiObjItem& MutiObjItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MutiObjItem_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void MutiObjItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.MutiObjItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uploadkey_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      uin_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_size_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(file_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MutiObjItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uploadkey = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_uploadkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ctime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uin = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_uin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_size = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MutiObjItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.MutiObjItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional bytes uploadkey = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_uploadkey(), target);
  }

  // optional uint32 ctime = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ctime(), target);
  }

  // optional uint32 mtime = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_mtime(), target);
  }

  // optional bytes storage_type = 6;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_storage_type(), target);
  }

  // optional bytes uin = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_uin(), target);
  }

  // optional uint64 file_size = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_file_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.MutiObjItem)
  return target;
}

size_t MutiObjItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.MutiObjItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_name());
    }

    // optional bytes uploadkey = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uploadkey());
    }

    // optional bytes storage_type = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional bytes uin = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uin());
    }

    // optional uint32 ctime = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_ctime());
    }

    // optional uint32 mtime = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

    // optional uint64 file_size = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_size());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MutiObjItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.MutiObjItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MutiObjItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MutiObjItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.MutiObjItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.MutiObjItem)
    MergeFrom(*source);
  }
}

void MutiObjItem::MergeFrom(const MutiObjItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.MutiObjItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uploadkey(from._internal_uploadkey());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_uin(from._internal_uin());
    }
    if (cached_has_bits & 0x00000010u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000020u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000040u) {
      file_size_ = from.file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MutiObjItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.MutiObjItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutiObjItem::CopyFrom(const MutiObjItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.MutiObjItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutiObjItem::IsInitialized() const {
  return true;
}

void MutiObjItem::InternalSwap(MutiObjItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uploadkey_.Swap(&other->uploadkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uin_.Swap(&other->uin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MutiObjItem, file_size_)
      + sizeof(MutiObjItem::file_size_)
      - PROTOBUF_FIELD_OFFSET(MutiObjItem, ctime_)>(
          reinterpret_cast<char*>(&ctime_),
          reinterpret_cast<char*>(&other->ctime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MutiObjItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DelObjExpireAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<DelObjExpireAttr>()._has_bits_);
  static void set_has_op(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_islatest(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_isdeletemarker(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_next_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_next_version_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_next_version_seed(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

DelObjExpireAttr::DelObjExpireAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DelObjExpireAttr)
}
DelObjExpireAttr::DelObjExpireAttr(const DelObjExpireAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_version()) {
    next_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_version(), 
      GetArena());
  }
  ::memcpy(&op_, &from.op_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_version_ctime_) -
    reinterpret_cast<char*>(&op_)) + sizeof(next_version_ctime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.DelObjExpireAttr)
}

void DelObjExpireAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base);
  next_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&op_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&next_version_ctime_) -
      reinterpret_cast<char*>(&op_)) + sizeof(next_version_ctime_));
}

DelObjExpireAttr::~DelObjExpireAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.DelObjExpireAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DelObjExpireAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DelObjExpireAttr::ArenaDtor(void* object) {
  DelObjExpireAttr* _this = reinterpret_cast< DelObjExpireAttr* >(object);
  (void)_this;
}
void DelObjExpireAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DelObjExpireAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelObjExpireAttr& DelObjExpireAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelObjExpireAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DelObjExpireAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DelObjExpireAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    next_version_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&op_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&next_version_ctime_) -
        reinterpret_cast<char*>(&op_)) + sizeof(next_version_ctime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelObjExpireAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_op(&has_bits);
          op_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool isLatest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_islatest(&has_bits);
          islatest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool isDeleteMarker = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_isdeletemarker(&has_bits);
          isdeletemarker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes next_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_next_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 next_version_ctime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_next_version_ctime(&has_bits);
          next_version_ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 next_version_seed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_next_version_seed(&has_bits);
          next_version_seed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DelObjExpireAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DelObjExpireAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 op = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_op(), target);
  }

  // optional bool isLatest = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_islatest(), target);
  }

  // optional bool isDeleteMarker = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_isdeletemarker(), target);
  }

  // optional bytes next_version = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_next_version(), target);
  }

  // optional uint32 next_version_ctime = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_next_version_ctime(), target);
  }

  // optional uint64 next_version_seed = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_next_version_seed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DelObjExpireAttr)
  return target;
}

size_t DelObjExpireAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DelObjExpireAttr)
  size_t total_size = 0;

  // required uint32 op = 1;
  if (_internal_has_op()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_op());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes next_version = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_next_version());
  }

  if (cached_has_bits & 0x0000003cu) {
    // optional bool isLatest = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool isDeleteMarker = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint64 next_version_seed = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_next_version_seed());
    }

    // optional uint32 next_version_ctime = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_next_version_ctime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelObjExpireAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DelObjExpireAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const DelObjExpireAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelObjExpireAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DelObjExpireAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DelObjExpireAttr)
    MergeFrom(*source);
  }
}

void DelObjExpireAttr::MergeFrom(const DelObjExpireAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DelObjExpireAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_next_version(from._internal_next_version());
    }
    if (cached_has_bits & 0x00000002u) {
      op_ = from.op_;
    }
    if (cached_has_bits & 0x00000004u) {
      islatest_ = from.islatest_;
    }
    if (cached_has_bits & 0x00000008u) {
      isdeletemarker_ = from.isdeletemarker_;
    }
    if (cached_has_bits & 0x00000010u) {
      next_version_seed_ = from.next_version_seed_;
    }
    if (cached_has_bits & 0x00000020u) {
      next_version_ctime_ = from.next_version_ctime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DelObjExpireAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DelObjExpireAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelObjExpireAttr::CopyFrom(const DelObjExpireAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DelObjExpireAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelObjExpireAttr::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void DelObjExpireAttr::InternalSwap(DelObjExpireAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  next_version_.Swap(&other->next_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DelObjExpireAttr, next_version_ctime_)
      + sizeof(DelObjExpireAttr::next_version_ctime_)
      - PROTOBUF_FIELD_OFFSET(DelObjExpireAttr, op_)>(
          reinterpret_cast<char*>(&op_),
          reinterpret_cast<char*>(&other->op_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DelObjExpireAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DelExpireFileReq::_Internal {
 public:
  using HasBits = decltype(std::declval<DelExpireFileReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::ClientCos::DelObjExpireAttr& expire_attr(const DelExpireFileReq* msg);
  static void set_has_expire_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000005) ^ 0x00000005) != 0;
  }
};

const ::ClientCos::DelObjExpireAttr&
DelExpireFileReq::_Internal::expire_attr(const DelExpireFileReq* msg) {
  return *msg->expire_attr_;
}
DelExpireFileReq::DelExpireFileReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DelExpireFileReq)
}
DelExpireFileReq::DelExpireFileReq(const DelExpireFileReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  if (from._internal_has_expire_attr()) {
    expire_attr_ = new ::ClientCos::DelObjExpireAttr(*from.expire_attr_);
  } else {
    expire_attr_ = nullptr;
  }
  ::memcpy(&mtime_, &from.mtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
    reinterpret_cast<char*>(&mtime_)) + sizeof(switch_flag_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.DelExpireFileReq)
}

void DelExpireFileReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DelExpireFileReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&expire_attr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
      reinterpret_cast<char*>(&expire_attr_)) + sizeof(switch_flag_));
}

DelExpireFileReq::~DelExpireFileReq() {
  // @@protoc_insertion_point(destructor:ClientCos.DelExpireFileReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DelExpireFileReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_attr_;
}

void DelExpireFileReq::ArenaDtor(void* object) {
  DelExpireFileReq* _this = reinterpret_cast< DelExpireFileReq* >(object);
  (void)_this;
}
void DelExpireFileReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DelExpireFileReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelExpireFileReq& DelExpireFileReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelExpireFileReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DelExpireFileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DelExpireFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(expire_attr_ != nullptr);
      expire_attr_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&mtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&switch_flag_) -
        reinterpret_cast<char*>(&mtime_)) + sizeof(switch_flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelExpireFileReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelObjExpireAttr expire_attr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_expire_attr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DelExpireFileReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DelExpireFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required uint32 mtime = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_mtime(), target);
  }

  // optional bool switch_flag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_switch_flag(), target);
  }

  // optional .ClientCos.DelObjExpireAttr expire_attr = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::expire_attr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DelExpireFileReq)
  return target;
}

size_t DelExpireFileReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.DelExpireFileReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t DelExpireFileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DelExpireFileReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.DelObjExpireAttr expire_attr = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expire_attr_);
  }

  // optional bool switch_flag = 3;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelExpireFileReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DelExpireFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelExpireFileReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelExpireFileReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DelExpireFileReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DelExpireFileReq)
    MergeFrom(*source);
  }
}

void DelExpireFileReq::MergeFrom(const DelExpireFileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DelExpireFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_expire_attr()->::ClientCos::DelObjExpireAttr::MergeFrom(from._internal_expire_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000008u) {
      switch_flag_ = from.switch_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DelExpireFileReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DelExpireFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelExpireFileReq::CopyFrom(const DelExpireFileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DelExpireFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelExpireFileReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_expire_attr()) {
    if (!expire_attr_->IsInitialized()) return false;
  }
  return true;
}

void DelExpireFileReq::InternalSwap(DelExpireFileReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DelExpireFileReq, switch_flag_)
      + sizeof(DelExpireFileReq::switch_flag_)
      - PROTOBUF_FIELD_OFFSET(DelExpireFileReq, expire_attr_)>(
          reinterpret_cast<char*>(&expire_attr_),
          reinterpret_cast<char*>(&other->expire_attr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DelExpireFileReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DelExpireFileRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<DelExpireFileRsp>()._has_bits_);
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DelExpireFileRsp::DelExpireFileRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DelExpireFileRsp)
}
DelExpireFileRsp::DelExpireFileRsp(const DelExpireFileRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mtime_ = from.mtime_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.DelExpireFileRsp)
}

void DelExpireFileRsp::SharedCtor() {
  mtime_ = 0u;
}

DelExpireFileRsp::~DelExpireFileRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.DelExpireFileRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DelExpireFileRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DelExpireFileRsp::ArenaDtor(void* object) {
  DelExpireFileRsp* _this = reinterpret_cast< DelExpireFileRsp* >(object);
  (void)_this;
}
void DelExpireFileRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DelExpireFileRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelExpireFileRsp& DelExpireFileRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelExpireFileRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DelExpireFileRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DelExpireFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mtime_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelExpireFileRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 mtime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DelExpireFileRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DelExpireFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 mtime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DelExpireFileRsp)
  return target;
}

size_t DelExpireFileRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DelExpireFileRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 mtime = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelExpireFileRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DelExpireFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelExpireFileRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelExpireFileRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DelExpireFileRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DelExpireFileRsp)
    MergeFrom(*source);
  }
}

void DelExpireFileRsp::MergeFrom(const DelExpireFileRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DelExpireFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mtime()) {
    _internal_set_mtime(from._internal_mtime());
  }
}

void DelExpireFileRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DelExpireFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelExpireFileRsp::CopyFrom(const DelExpireFileRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DelExpireFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelExpireFileRsp::IsInitialized() const {
  return true;
}

void DelExpireFileRsp::InternalSwap(DelExpireFileRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mtime_, other->mtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelExpireFileRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StorageTypeAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<StorageTypeAttr>()._has_bits_);
  static void set_has_min_del_days(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_min_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

StorageTypeAttr::StorageTypeAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.StorageTypeAttr)
}
StorageTypeAttr::StorageTypeAttr(const StorageTypeAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&min_del_days_, &from.min_del_days_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_file_size_) -
    reinterpret_cast<char*>(&min_del_days_)) + sizeof(min_file_size_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.StorageTypeAttr)
}

void StorageTypeAttr::SharedCtor() {
  min_del_days_ = 0u;
  min_file_size_ = 64000u;
}

StorageTypeAttr::~StorageTypeAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.StorageTypeAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StorageTypeAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StorageTypeAttr::ArenaDtor(void* object) {
  StorageTypeAttr* _this = reinterpret_cast< StorageTypeAttr* >(object);
  (void)_this;
}
void StorageTypeAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StorageTypeAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StorageTypeAttr& StorageTypeAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StorageTypeAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void StorageTypeAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.StorageTypeAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    min_del_days_ = 0u;
    min_file_size_ = 64000u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageTypeAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 min_del_days = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_min_del_days(&has_bits);
          min_del_days_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 min_file_size = 2 [default = 64000];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_min_file_size(&has_bits);
          min_file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StorageTypeAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.StorageTypeAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 min_del_days = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_min_del_days(), target);
  }

  // optional uint32 min_file_size = 2 [default = 64000];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_min_file_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.StorageTypeAttr)
  return target;
}

size_t StorageTypeAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.StorageTypeAttr)
  size_t total_size = 0;

  // required uint32 min_del_days = 1;
  if (_internal_has_min_del_days()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_min_del_days());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 min_file_size = 2 [default = 64000];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_min_file_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageTypeAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.StorageTypeAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageTypeAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StorageTypeAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.StorageTypeAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.StorageTypeAttr)
    MergeFrom(*source);
  }
}

void StorageTypeAttr::MergeFrom(const StorageTypeAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.StorageTypeAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      min_del_days_ = from.min_del_days_;
    }
    if (cached_has_bits & 0x00000002u) {
      min_file_size_ = from.min_file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StorageTypeAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.StorageTypeAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageTypeAttr::CopyFrom(const StorageTypeAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.StorageTypeAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageTypeAttr::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void StorageTypeAttr::InternalSwap(StorageTypeAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(min_del_days_, other->min_del_days_);
  swap(min_file_size_, other->min_file_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageTypeAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LFAttr::_Internal {
 public:
  using HasBits = decltype(std::declval<LFAttr>()._has_bits_);
  static void set_has_storagetype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ClientCos::StorageTypeAttr& storagetypeattr(const LFAttr* msg);
  static void set_has_storagetypeattr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ClientCos::StorageTypeAttr&
LFAttr::_Internal::storagetypeattr(const LFAttr* msg) {
  return *msg->storagetypeattr_;
}
LFAttr::LFAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.LFAttr)
}
LFAttr::LFAttr(const LFAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  storagetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storagetype()) {
    storagetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storagetype(), 
      GetArena());
  }
  if (from._internal_has_storagetypeattr()) {
    storagetypeattr_ = new ::ClientCos::StorageTypeAttr(*from.storagetypeattr_);
  } else {
    storagetypeattr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.LFAttr)
}

void LFAttr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LFAttr_cosv4_5fclient_2eproto.base);
  storagetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storagetypeattr_ = nullptr;
}

LFAttr::~LFAttr() {
  // @@protoc_insertion_point(destructor:ClientCos.LFAttr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LFAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  storagetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete storagetypeattr_;
}

void LFAttr::ArenaDtor(void* object) {
  LFAttr* _this = reinterpret_cast< LFAttr* >(object);
  (void)_this;
}
void LFAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LFAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LFAttr& LFAttr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LFAttr_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void LFAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.LFAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      storagetype_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(storagetypeattr_ != nullptr);
      storagetypeattr_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LFAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes storagetype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_storagetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ClientCos.StorageTypeAttr storagetypeattr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_storagetypeattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LFAttr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.LFAttr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes storagetype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_storagetype(), target);
  }

  // required .ClientCos.StorageTypeAttr storagetypeattr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::storagetypeattr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.LFAttr)
  return target;
}

size_t LFAttr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.LFAttr)
  size_t total_size = 0;

  if (_internal_has_storagetype()) {
    // required bytes storagetype = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_storagetype());
  }

  if (_internal_has_storagetypeattr()) {
    // required .ClientCos.StorageTypeAttr storagetypeattr = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *storagetypeattr_);
  }

  return total_size;
}
size_t LFAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.LFAttr)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes storagetype = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_storagetype());

    // required .ClientCos.StorageTypeAttr storagetypeattr = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *storagetypeattr_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LFAttr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.LFAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const LFAttr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LFAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.LFAttr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.LFAttr)
    MergeFrom(*source);
  }
}

void LFAttr::MergeFrom(const LFAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.LFAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_storagetype(from._internal_storagetype());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_storagetypeattr()->::ClientCos::StorageTypeAttr::MergeFrom(from._internal_storagetypeattr());
    }
  }
}

void LFAttr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.LFAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LFAttr::CopyFrom(const LFAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.LFAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LFAttr::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_storagetypeattr()) {
    if (!storagetypeattr_->IsInitialized()) return false;
  }
  return true;
}

void LFAttr::InternalSwap(LFAttr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  storagetype_.Swap(&other->storagetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(storagetypeattr_, other->storagetypeattr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LFAttr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileDelReq::_Internal {
 public:
  using HasBits = decltype(std::declval<FileDelReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uploadid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_isexpirereq(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ClientCos::DelObjExpireAttr& expire_attr(const FileDelReq* msg);
  static void set_has_expire_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::ClientCos::DelObjExpireAttr&
FileDelReq::_Internal::expire_attr(const FileDelReq* msg) {
  return *msg->expire_attr_;
}
FileDelReq::FileDelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileDelReq)
}
FileDelReq::FileDelReq(const FileDelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uploadid()) {
    uploadid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uploadid(), 
      GetArena());
  }
  if (from._internal_has_expire_attr()) {
    expire_attr_ = new ::ClientCos::DelObjExpireAttr(*from.expire_attr_);
  } else {
    expire_attr_ = nullptr;
  }
  ::memcpy(&switch_flag_, &from.switch_flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&isexpirereq_) -
    reinterpret_cast<char*>(&switch_flag_)) + sizeof(isexpirereq_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileDelReq)
}

void FileDelReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileDelReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&expire_attr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&isexpirereq_) -
      reinterpret_cast<char*>(&expire_attr_)) + sizeof(isexpirereq_));
}

FileDelReq::~FileDelReq() {
  // @@protoc_insertion_point(destructor:ClientCos.FileDelReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileDelReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_attr_;
}

void FileDelReq::ArenaDtor(void* object) {
  FileDelReq* _this = reinterpret_cast< FileDelReq* >(object);
  (void)_this;
}
void FileDelReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDelReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDelReq& FileDelReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileDelReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileDelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileDelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uploadid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(expire_attr_ != nullptr);
      expire_attr_->Clear();
    }
  }
  ::memset(&switch_flag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isexpirereq_) -
      reinterpret_cast<char*>(&switch_flag_)) + sizeof(isexpirereq_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDelReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uploadid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uploadid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool isExpireReq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_isexpirereq(&has_bits);
          isexpirereq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelObjExpireAttr expire_attr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_expire_attr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileDelReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileDelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes uploadid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uploadid(), target);
  }

  // optional bool switch_flag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_switch_flag(), target);
  }

  // optional bool isExpireReq = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_isexpirereq(), target);
  }

  // optional .ClientCos.DelObjExpireAttr expire_attr = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::expire_attr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileDelReq)
  return target;
}

size_t FileDelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileDelReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional bytes uploadid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uploadid());
    }

    // optional .ClientCos.DelObjExpireAttr expire_attr = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expire_attr_);
    }

    // optional bool switch_flag = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool isExpireReq = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDelReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDelReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileDelReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileDelReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileDelReq)
    MergeFrom(*source);
  }
}

void FileDelReq::MergeFrom(const FileDelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uploadid(from._internal_uploadid());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_expire_attr()->::ClientCos::DelObjExpireAttr::MergeFrom(from._internal_expire_attr());
    }
    if (cached_has_bits & 0x00000008u) {
      switch_flag_ = from.switch_flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      isexpirereq_ = from.isexpirereq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileDelReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDelReq::CopyFrom(const FileDelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDelReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_expire_attr()) {
    if (!expire_attr_->IsInitialized()) return false;
  }
  return true;
}

void FileDelReq::InternalSwap(FileDelReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uploadid_.Swap(&other->uploadid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileDelReq, isexpirereq_)
      + sizeof(FileDelReq::isexpirereq_)
      - PROTOBUF_FIELD_OFFSET(FileDelReq, expire_attr_)>(
          reinterpret_cast<char*>(&expire_attr_),
          reinterpret_cast<char*>(&other->expire_attr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDelReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileDelRsp::_Internal {
 public:
};

FileDelRsp::FileDelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileDelRsp)
}
FileDelRsp::FileDelRsp(const FileDelRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileDelRsp)
}

void FileDelRsp::SharedCtor() {
}

FileDelRsp::~FileDelRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.FileDelRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileDelRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FileDelRsp::ArenaDtor(void* object) {
  FileDelRsp* _this = reinterpret_cast< FileDelRsp* >(object);
  (void)_this;
}
void FileDelRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDelRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDelRsp& FileDelRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileDelRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileDelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileDelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDelRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileDelRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileDelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileDelRsp)
  return target;
}

size_t FileDelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileDelRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDelRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileDelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDelRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileDelRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileDelRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileDelRsp)
    MergeFrom(*source);
  }
}

void FileDelRsp::MergeFrom(const FileDelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileDelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FileDelRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileDelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDelRsp::CopyFrom(const FileDelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileDelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDelRsp::IsInitialized() const {
  return true;
}

void FileDelRsp::InternalSwap(FileDelRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDelRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExpireFileDelNoVerReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ExpireFileDelNoVerReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ClientCos::DelObjExpireAttr& expire_attr(const ExpireFileDelNoVerReq* msg);
  static void set_has_expire_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::ClientCos::DelObjExpireAttr&
ExpireFileDelNoVerReq::_Internal::expire_attr(const ExpireFileDelNoVerReq* msg) {
  return *msg->expire_attr_;
}
ExpireFileDelNoVerReq::ExpireFileDelNoVerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ExpireFileDelNoVerReq)
}
ExpireFileDelNoVerReq::ExpireFileDelNoVerReq(const ExpireFileDelNoVerReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  if (from._internal_has_expire_attr()) {
    expire_attr_ = new ::ClientCos::DelObjExpireAttr(*from.expire_attr_);
  } else {
    expire_attr_ = nullptr;
  }
  switch_flag_ = from.switch_flag_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ExpireFileDelNoVerReq)
}

void ExpireFileDelNoVerReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&expire_attr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
      reinterpret_cast<char*>(&expire_attr_)) + sizeof(switch_flag_));
}

ExpireFileDelNoVerReq::~ExpireFileDelNoVerReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ExpireFileDelNoVerReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExpireFileDelNoVerReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_attr_;
}

void ExpireFileDelNoVerReq::ArenaDtor(void* object) {
  ExpireFileDelNoVerReq* _this = reinterpret_cast< ExpireFileDelNoVerReq* >(object);
  (void)_this;
}
void ExpireFileDelNoVerReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpireFileDelNoVerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpireFileDelNoVerReq& ExpireFileDelNoVerReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpireFileDelNoVerReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ExpireFileDelNoVerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ExpireFileDelNoVerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(expire_attr_ != nullptr);
      expire_attr_->Clear();
    }
  }
  switch_flag_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpireFileDelNoVerReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelObjExpireAttr expire_attr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_expire_attr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpireFileDelNoVerReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ExpireFileDelNoVerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bool switch_flag = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_switch_flag(), target);
  }

  // optional .ClientCos.DelObjExpireAttr expire_attr = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::expire_attr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ExpireFileDelNoVerReq)
  return target;
}

size_t ExpireFileDelNoVerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ExpireFileDelNoVerReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional .ClientCos.DelObjExpireAttr expire_attr = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expire_attr_);
    }

    // optional bool switch_flag = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpireFileDelNoVerReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ExpireFileDelNoVerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpireFileDelNoVerReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpireFileDelNoVerReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ExpireFileDelNoVerReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ExpireFileDelNoVerReq)
    MergeFrom(*source);
  }
}

void ExpireFileDelNoVerReq::MergeFrom(const ExpireFileDelNoVerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ExpireFileDelNoVerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_expire_attr()->::ClientCos::DelObjExpireAttr::MergeFrom(from._internal_expire_attr());
    }
    if (cached_has_bits & 0x00000004u) {
      switch_flag_ = from.switch_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExpireFileDelNoVerReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ExpireFileDelNoVerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpireFileDelNoVerReq::CopyFrom(const ExpireFileDelNoVerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ExpireFileDelNoVerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpireFileDelNoVerReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_expire_attr()) {
    if (!expire_attr_->IsInitialized()) return false;
  }
  return true;
}

void ExpireFileDelNoVerReq::InternalSwap(ExpireFileDelNoVerReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExpireFileDelNoVerReq, switch_flag_)
      + sizeof(ExpireFileDelNoVerReq::switch_flag_)
      - PROTOBUF_FIELD_OFFSET(ExpireFileDelNoVerReq, expire_attr_)>(
          reinterpret_cast<char*>(&expire_attr_),
          reinterpret_cast<char*>(&other->expire_attr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpireFileDelNoVerReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExpireFileDelNoverRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ExpireFileDelNoverRsp>()._has_bits_);
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ExpireFileDelNoverRsp::ExpireFileDelNoverRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ExpireFileDelNoverRsp)
}
ExpireFileDelNoverRsp::ExpireFileDelNoverRsp(const ExpireFileDelNoverRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  mtime_ = from.mtime_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ExpireFileDelNoverRsp)
}

void ExpireFileDelNoverRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mtime_ = 0u;
}

ExpireFileDelNoverRsp::~ExpireFileDelNoverRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ExpireFileDelNoverRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExpireFileDelNoverRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExpireFileDelNoverRsp::ArenaDtor(void* object) {
  ExpireFileDelNoverRsp* _this = reinterpret_cast< ExpireFileDelNoverRsp* >(object);
  (void)_this;
}
void ExpireFileDelNoverRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpireFileDelNoverRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpireFileDelNoverRsp& ExpireFileDelNoverRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpireFileDelNoverRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ExpireFileDelNoverRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ExpireFileDelNoverRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    version_.ClearNonDefaultToEmpty();
  }
  mtime_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpireFileDelNoverRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpireFileDelNoverRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ExpireFileDelNoverRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_version(), target);
  }

  // required uint32 mtime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ExpireFileDelNoverRsp)
  return target;
}

size_t ExpireFileDelNoverRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ExpireFileDelNoverRsp)
  size_t total_size = 0;

  if (_internal_has_version()) {
    // required bytes version = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t ExpireFileDelNoverRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ExpireFileDelNoverRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes version = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());

    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpireFileDelNoverRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ExpireFileDelNoverRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpireFileDelNoverRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpireFileDelNoverRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ExpireFileDelNoverRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ExpireFileDelNoverRsp)
    MergeFrom(*source);
  }
}

void ExpireFileDelNoverRsp::MergeFrom(const ExpireFileDelNoverRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ExpireFileDelNoverRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000002u) {
      mtime_ = from.mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExpireFileDelNoverRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ExpireFileDelNoverRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpireFileDelNoverRsp::CopyFrom(const ExpireFileDelNoverRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ExpireFileDelNoverRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpireFileDelNoverRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ExpireFileDelNoverRsp::InternalSwap(ExpireFileDelNoverRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(mtime_, other->mtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpireFileDelNoverRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExpireFileDelVerReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ExpireFileDelVerReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ClientCos::DelObjExpireAttr& expire_attr(const ExpireFileDelVerReq* msg);
  static void set_has_expire_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

const ::ClientCos::DelObjExpireAttr&
ExpireFileDelVerReq::_Internal::expire_attr(const ExpireFileDelVerReq* msg) {
  return *msg->expire_attr_;
}
ExpireFileDelVerReq::ExpireFileDelVerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ExpireFileDelVerReq)
}
ExpireFileDelVerReq::ExpireFileDelVerReq(const ExpireFileDelVerReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  if (from._internal_has_expire_attr()) {
    expire_attr_ = new ::ClientCos::DelObjExpireAttr(*from.expire_attr_);
  } else {
    expire_attr_ = nullptr;
  }
  ::memcpy(&mtime_, &from.mtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
    reinterpret_cast<char*>(&mtime_)) + sizeof(switch_flag_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ExpireFileDelVerReq)
}

void ExpireFileDelVerReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&expire_attr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
      reinterpret_cast<char*>(&expire_attr_)) + sizeof(switch_flag_));
}

ExpireFileDelVerReq::~ExpireFileDelVerReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ExpireFileDelVerReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExpireFileDelVerReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_attr_;
}

void ExpireFileDelVerReq::ArenaDtor(void* object) {
  ExpireFileDelVerReq* _this = reinterpret_cast< ExpireFileDelVerReq* >(object);
  (void)_this;
}
void ExpireFileDelVerReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpireFileDelVerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpireFileDelVerReq& ExpireFileDelVerReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpireFileDelVerReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ExpireFileDelVerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ExpireFileDelVerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(expire_attr_ != nullptr);
      expire_attr_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&mtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&switch_flag_) -
        reinterpret_cast<char*>(&mtime_)) + sizeof(switch_flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpireFileDelVerReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.DelObjExpireAttr expire_attr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_expire_attr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpireFileDelVerReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ExpireFileDelVerReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // required uint32 mtime = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mtime(), target);
  }

  // optional bool switch_flag = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_switch_flag(), target);
  }

  // optional .ClientCos.DelObjExpireAttr expire_attr = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::expire_attr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ExpireFileDelVerReq)
  return target;
}

size_t ExpireFileDelVerReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ExpireFileDelVerReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_version()) {
    // required bytes version = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t ExpireFileDelVerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ExpireFileDelVerReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes version = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());

    // required uint32 mtime = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.DelObjExpireAttr expire_attr = 5;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expire_attr_);
  }

  // optional bool switch_flag = 4;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpireFileDelVerReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ExpireFileDelVerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpireFileDelVerReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpireFileDelVerReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ExpireFileDelVerReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ExpireFileDelVerReq)
    MergeFrom(*source);
  }
}

void ExpireFileDelVerReq::MergeFrom(const ExpireFileDelVerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ExpireFileDelVerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_expire_attr()->::ClientCos::DelObjExpireAttr::MergeFrom(from._internal_expire_attr());
    }
    if (cached_has_bits & 0x00000008u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000010u) {
      switch_flag_ = from.switch_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExpireFileDelVerReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ExpireFileDelVerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpireFileDelVerReq::CopyFrom(const ExpireFileDelVerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ExpireFileDelVerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpireFileDelVerReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_expire_attr()) {
    if (!expire_attr_->IsInitialized()) return false;
  }
  return true;
}

void ExpireFileDelVerReq::InternalSwap(ExpireFileDelVerReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExpireFileDelVerReq, switch_flag_)
      + sizeof(ExpireFileDelVerReq::switch_flag_)
      - PROTOBUF_FIELD_OFFSET(ExpireFileDelVerReq, expire_attr_)>(
          reinterpret_cast<char*>(&expire_attr_),
          reinterpret_cast<char*>(&other->expire_attr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpireFileDelVerReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ExpireFileDelVerRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ExpireFileDelVerRsp>()._has_bits_);
  static void set_has_delete_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ExpireFileDelVerRsp::ExpireFileDelVerRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ExpireFileDelVerRsp)
}
ExpireFileDelVerRsp::ExpireFileDelVerRsp(const ExpireFileDelVerRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&delete_marker_, &from.delete_marker_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
    reinterpret_cast<char*>(&delete_marker_)) + sizeof(mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ExpireFileDelVerRsp)
}

void ExpireFileDelVerRsp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&delete_marker_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&mtime_) -
      reinterpret_cast<char*>(&delete_marker_)) + sizeof(mtime_));
}

ExpireFileDelVerRsp::~ExpireFileDelVerRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ExpireFileDelVerRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExpireFileDelVerRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExpireFileDelVerRsp::ArenaDtor(void* object) {
  ExpireFileDelVerRsp* _this = reinterpret_cast< ExpireFileDelVerRsp* >(object);
  (void)_this;
}
void ExpireFileDelVerRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpireFileDelVerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpireFileDelVerRsp& ExpireFileDelVerRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpireFileDelVerRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ExpireFileDelVerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ExpireFileDelVerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&delete_marker_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mtime_) -
        reinterpret_cast<char*>(&delete_marker_)) + sizeof(mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpireFileDelVerRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bool delete_marker = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_delete_marker(&has_bits);
          delete_marker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpireFileDelVerRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ExpireFileDelVerRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool delete_marker = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_delete_marker(), target);
  }

  // required uint32 mtime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ExpireFileDelVerRsp)
  return target;
}

size_t ExpireFileDelVerRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ExpireFileDelVerRsp)
  size_t total_size = 0;

  if (_internal_has_delete_marker()) {
    // required bool delete_marker = 1;
    total_size += 1 + 1;
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t ExpireFileDelVerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ExpireFileDelVerRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool delete_marker = 1;
    total_size += 1 + 1;

    // required uint32 mtime = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpireFileDelVerRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ExpireFileDelVerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpireFileDelVerRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpireFileDelVerRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ExpireFileDelVerRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ExpireFileDelVerRsp)
    MergeFrom(*source);
  }
}

void ExpireFileDelVerRsp::MergeFrom(const ExpireFileDelVerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ExpireFileDelVerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      delete_marker_ = from.delete_marker_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtime_ = from.mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExpireFileDelVerRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ExpireFileDelVerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpireFileDelVerRsp::CopyFrom(const ExpireFileDelVerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ExpireFileDelVerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpireFileDelVerRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ExpireFileDelVerRsp::InternalSwap(ExpireFileDelVerRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExpireFileDelVerRsp, mtime_)
      + sizeof(ExpireFileDelVerRsp::mtime_)
      - PROTOBUF_FIELD_OFFSET(ExpireFileDelVerRsp, delete_marker_)>(
          reinterpret_cast<char*>(&delete_marker_),
          reinterpret_cast<char*>(&other->delete_marker_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpireFileDelVerRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketPriAttrReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBucketPriAttrReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_nofile(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_visit_v4(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SetBucketPriAttrReq::SetBucketPriAttrReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketPriAttrReq)
}
SetBucketPriAttrReq::SetBucketPriAttrReq(const SetBucketPriAttrReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&visit_v4_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(visit_v4_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketPriAttrReq)
}

void SetBucketPriAttrReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&visit_v4_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(visit_v4_));
}

SetBucketPriAttrReq::~SetBucketPriAttrReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketPriAttrReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketPriAttrReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetBucketPriAttrReq::ArenaDtor(void* object) {
  SetBucketPriAttrReq* _this = reinterpret_cast< SetBucketPriAttrReq* >(object);
  (void)_this;
}
void SetBucketPriAttrReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketPriAttrReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketPriAttrReq& SetBucketPriAttrReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketPriAttrReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketPriAttrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketPriAttrReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&flag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visit_v4_) -
        reinterpret_cast<char*>(&flag_)) + sizeof(visit_v4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketPriAttrReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool nofile = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_nofile(&has_bits);
          nofile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visit_v4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_visit_v4(&has_bits);
          visit_v4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketPriAttrReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketPriAttrReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required uint32 flag = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flag(), target);
  }

  // optional bool nofile = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_nofile(), target);
  }

  // optional bool visit_v4 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_visit_v4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketPriAttrReq)
  return target;
}

size_t SetBucketPriAttrReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.SetBucketPriAttrReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_flag()) {
    // required uint32 flag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());
  }

  return total_size;
}
size_t SetBucketPriAttrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketPriAttrReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required uint32 flag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    // optional bool nofile = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool visit_v4 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketPriAttrReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketPriAttrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketPriAttrReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketPriAttrReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketPriAttrReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketPriAttrReq)
    MergeFrom(*source);
  }
}

void SetBucketPriAttrReq::MergeFrom(const SetBucketPriAttrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketPriAttrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000004u) {
      nofile_ = from.nofile_;
    }
    if (cached_has_bits & 0x00000008u) {
      visit_v4_ = from.visit_v4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetBucketPriAttrReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketPriAttrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketPriAttrReq::CopyFrom(const SetBucketPriAttrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketPriAttrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketPriAttrReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SetBucketPriAttrReq::InternalSwap(SetBucketPriAttrReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetBucketPriAttrReq, visit_v4_)
      + sizeof(SetBucketPriAttrReq::visit_v4_)
      - PROTOBUF_FIELD_OFFSET(SetBucketPriAttrReq, flag_)>(
          reinterpret_cast<char*>(&flag_),
          reinterpret_cast<char*>(&other->flag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketPriAttrReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketPriAttrRsp::_Internal {
 public:
};

SetBucketPriAttrRsp::SetBucketPriAttrRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketPriAttrRsp)
}
SetBucketPriAttrRsp::SetBucketPriAttrRsp(const SetBucketPriAttrRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketPriAttrRsp)
}

void SetBucketPriAttrRsp::SharedCtor() {
}

SetBucketPriAttrRsp::~SetBucketPriAttrRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketPriAttrRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketPriAttrRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetBucketPriAttrRsp::ArenaDtor(void* object) {
  SetBucketPriAttrRsp* _this = reinterpret_cast< SetBucketPriAttrRsp* >(object);
  (void)_this;
}
void SetBucketPriAttrRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketPriAttrRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketPriAttrRsp& SetBucketPriAttrRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketPriAttrRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketPriAttrRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketPriAttrRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketPriAttrRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketPriAttrRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketPriAttrRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketPriAttrRsp)
  return target;
}

size_t SetBucketPriAttrRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketPriAttrRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketPriAttrRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketPriAttrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketPriAttrRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketPriAttrRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketPriAttrRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketPriAttrRsp)
    MergeFrom(*source);
  }
}

void SetBucketPriAttrRsp::MergeFrom(const SetBucketPriAttrRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketPriAttrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetBucketPriAttrRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketPriAttrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketPriAttrRsp::CopyFrom(const SetBucketPriAttrRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketPriAttrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketPriAttrRsp::IsInitialized() const {
  return true;
}

void SetBucketPriAttrRsp::InternalSwap(SetBucketPriAttrRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketPriAttrRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileDownToCASReq::_Internal {
 public:
  using HasBits = decltype(std::declval<FileDownToCASReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_archive_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_check_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000017) ^ 0x00000017) != 0;
  }
};

FileDownToCASReq::FileDownToCASReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileDownToCASReq)
}
FileDownToCASReq::FileDownToCASReq(const FileDownToCASReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  archive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_archive_id()) {
    archive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_archive_id(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  ::memcpy(&check_mtime_, &from.check_mtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
    reinterpret_cast<char*>(&check_mtime_)) + sizeof(switch_flag_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileDownToCASReq)
}

void FileDownToCASReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileDownToCASReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  archive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&check_mtime_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&switch_flag_) -
      reinterpret_cast<char*>(&check_mtime_)) + sizeof(switch_flag_));
}

FileDownToCASReq::~FileDownToCASReq() {
  // @@protoc_insertion_point(destructor:ClientCos.FileDownToCASReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileDownToCASReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  archive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDownToCASReq::ArenaDtor(void* object) {
  FileDownToCASReq* _this = reinterpret_cast< FileDownToCASReq* >(object);
  (void)_this;
}
void FileDownToCASReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDownToCASReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDownToCASReq& FileDownToCASReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileDownToCASReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileDownToCASReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileDownToCASReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      archive_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      sk_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&check_mtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&switch_flag_) -
        reinterpret_cast<char*>(&check_mtime_)) + sizeof(switch_flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDownToCASReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes archive_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_archive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes sk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 check_mtime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_check_mtime(&has_bits);
          check_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileDownToCASReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileDownToCASReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required bytes archive_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_archive_id(), target);
  }

  // required bytes sk = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sk(), target);
  }

  // required uint32 check_mtime = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_check_mtime(), target);
  }

  // optional bytes version = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_version(), target);
  }

  // optional bool switch_flag = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_switch_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileDownToCASReq)
  return target;
}

size_t FileDownToCASReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.FileDownToCASReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_archive_id()) {
    // required bytes archive_id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_archive_id());
  }

  if (_internal_has_sk()) {
    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());
  }

  if (_internal_has_check_mtime()) {
    // required uint32 check_mtime = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_check_mtime());
  }

  return total_size;
}
size_t FileDownToCASReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileDownToCASReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000017) ^ 0x00000017) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes archive_id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_archive_id());

    // required bytes sk = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sk());

    // required uint32 check_mtime = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_check_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 5;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  // optional bool switch_flag = 6;
  if (cached_has_bits & 0x00000020u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDownToCASReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileDownToCASReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDownToCASReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileDownToCASReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileDownToCASReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileDownToCASReq)
    MergeFrom(*source);
  }
}

void FileDownToCASReq::MergeFrom(const FileDownToCASReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileDownToCASReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_archive_id(from._internal_archive_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000010u) {
      check_mtime_ = from.check_mtime_;
    }
    if (cached_has_bits & 0x00000020u) {
      switch_flag_ = from.switch_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileDownToCASReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileDownToCASReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDownToCASReq::CopyFrom(const FileDownToCASReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileDownToCASReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownToCASReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void FileDownToCASReq::InternalSwap(FileDownToCASReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  archive_id_.Swap(&other->archive_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileDownToCASReq, switch_flag_)
      + sizeof(FileDownToCASReq::switch_flag_)
      - PROTOBUF_FIELD_OFFSET(FileDownToCASReq, check_mtime_)>(
          reinterpret_cast<char*>(&check_mtime_),
          reinterpret_cast<char*>(&other->check_mtime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDownToCASReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FileDownToCASRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<FileDownToCASRsp>()._has_bits_);
  static void set_has_casfilekey(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FileDownToCASRsp::FileDownToCASRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.FileDownToCASRsp)
}
FileDownToCASRsp::FileDownToCASRsp(const FileDownToCASRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  casfilekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_casfilekey()) {
    casfilekey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_casfilekey(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.FileDownToCASRsp)
}

void FileDownToCASRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileDownToCASRsp_cosv4_5fclient_2eproto.base);
  casfilekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FileDownToCASRsp::~FileDownToCASRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.FileDownToCASRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileDownToCASRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  casfilekey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FileDownToCASRsp::ArenaDtor(void* object) {
  FileDownToCASRsp* _this = reinterpret_cast< FileDownToCASRsp* >(object);
  (void)_this;
}
void FileDownToCASRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDownToCASRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDownToCASRsp& FileDownToCASRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileDownToCASRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void FileDownToCASRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.FileDownToCASRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    casfilekey_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDownToCASRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes casfilekey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_casfilekey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileDownToCASRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.FileDownToCASRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes casfilekey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_casfilekey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.FileDownToCASRsp)
  return target;
}

size_t FileDownToCASRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.FileDownToCASRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes casfilekey = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_casfilekey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDownToCASRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.FileDownToCASRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDownToCASRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileDownToCASRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.FileDownToCASRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.FileDownToCASRsp)
    MergeFrom(*source);
  }
}

void FileDownToCASRsp::MergeFrom(const FileDownToCASRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.FileDownToCASRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_casfilekey()) {
    _internal_set_casfilekey(from._internal_casfilekey());
  }
}

void FileDownToCASRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.FileDownToCASRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDownToCASRsp::CopyFrom(const FileDownToCASRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.FileDownToCASRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownToCASRsp::IsInitialized() const {
  return true;
}

void FileDownToCASRsp::InternalSwap(FileDownToCASRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  casfilekey_.Swap(&other->casfilekey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDownToCASRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasObjAttrModifyReq::_Internal {
 public:
  using HasBits = decltype(std::declval<CasObjAttrModifyReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_expired_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_restore_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000005) ^ 0x00000005) != 0;
  }
};

CasObjAttrModifyReq::CasObjAttrModifyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasObjAttrModifyReq)
}
CasObjAttrModifyReq::CasObjAttrModifyReq(const CasObjAttrModifyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  ::memcpy(&expired_time_, &from.expired_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&restore_tier_) -
    reinterpret_cast<char*>(&expired_time_)) + sizeof(restore_tier_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasObjAttrModifyReq)
}

void CasObjAttrModifyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&expired_time_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&restore_tier_) -
      reinterpret_cast<char*>(&expired_time_)) + sizeof(restore_tier_));
}

CasObjAttrModifyReq::~CasObjAttrModifyReq() {
  // @@protoc_insertion_point(destructor:ClientCos.CasObjAttrModifyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasObjAttrModifyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CasObjAttrModifyReq::ArenaDtor(void* object) {
  CasObjAttrModifyReq* _this = reinterpret_cast< CasObjAttrModifyReq* >(object);
  (void)_this;
}
void CasObjAttrModifyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasObjAttrModifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasObjAttrModifyReq& CasObjAttrModifyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasObjAttrModifyReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasObjAttrModifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&expired_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&restore_tier_) -
        reinterpret_cast<char*>(&expired_time_)) + sizeof(restore_tier_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasObjAttrModifyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 expired_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_expired_time(&has_bits);
          expired_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CASRestoreTier restore_tier = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CASRestoreTier_IsValid(val))) {
            _internal_set_restore_tier(static_cast<::ClientCos::CASRestoreTier>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasObjAttrModifyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasObjAttrModifyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // required uint64 expired_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_expired_time(), target);
  }

  // optional .ClientCos.CASRestoreTier restore_tier = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_restore_tier(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasObjAttrModifyReq)
  return target;
}

size_t CasObjAttrModifyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.CasObjAttrModifyReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_expired_time()) {
    // required uint64 expired_time = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expired_time());
  }

  return total_size;
}
size_t CasObjAttrModifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasObjAttrModifyReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required uint64 expired_time = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expired_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  // optional .ClientCos.CASRestoreTier restore_tier = 4;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_restore_tier());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasObjAttrModifyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CasObjAttrModifyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasObjAttrModifyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasObjAttrModifyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasObjAttrModifyReq)
    MergeFrom(*source);
  }
}

void CasObjAttrModifyReq::MergeFrom(const CasObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasObjAttrModifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      expired_time_ = from.expired_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      restore_tier_ = from.restore_tier_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CasObjAttrModifyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasObjAttrModifyReq::CopyFrom(const CasObjAttrModifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasObjAttrModifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasObjAttrModifyReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CasObjAttrModifyReq::InternalSwap(CasObjAttrModifyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CasObjAttrModifyReq, restore_tier_)
      + sizeof(CasObjAttrModifyReq::restore_tier_)
      - PROTOBUF_FIELD_OFFSET(CasObjAttrModifyReq, expired_time_)>(
          reinterpret_cast<char*>(&expired_time_),
          reinterpret_cast<char*>(&other->expired_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CasObjAttrModifyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasObjAttrModifyRsp::_Internal {
 public:
};

CasObjAttrModifyRsp::CasObjAttrModifyRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasObjAttrModifyRsp)
}
CasObjAttrModifyRsp::CasObjAttrModifyRsp(const CasObjAttrModifyRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasObjAttrModifyRsp)
}

void CasObjAttrModifyRsp::SharedCtor() {
}

CasObjAttrModifyRsp::~CasObjAttrModifyRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.CasObjAttrModifyRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasObjAttrModifyRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CasObjAttrModifyRsp::ArenaDtor(void* object) {
  CasObjAttrModifyRsp* _this = reinterpret_cast< CasObjAttrModifyRsp* >(object);
  (void)_this;
}
void CasObjAttrModifyRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasObjAttrModifyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasObjAttrModifyRsp& CasObjAttrModifyRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasObjAttrModifyRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasObjAttrModifyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasObjAttrModifyRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasObjAttrModifyRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasObjAttrModifyRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasObjAttrModifyRsp)
  return target;
}

size_t CasObjAttrModifyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasObjAttrModifyRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasObjAttrModifyRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CasObjAttrModifyRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasObjAttrModifyRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasObjAttrModifyRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasObjAttrModifyRsp)
    MergeFrom(*source);
  }
}

void CasObjAttrModifyRsp::MergeFrom(const CasObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasObjAttrModifyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CasObjAttrModifyRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasObjAttrModifyRsp::CopyFrom(const CasObjAttrModifyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasObjAttrModifyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasObjAttrModifyRsp::IsInitialized() const {
  return true;
}

void CasObjAttrModifyRsp::InternalSwap(CasObjAttrModifyRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CasObjAttrModifyRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasFileRecoverDelReq::_Internal {
 public:
  using HasBits = decltype(std::declval<CasFileRecoverDelReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CasFileRecoverDelReq::CasFileRecoverDelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasFileRecoverDelReq)
}
CasFileRecoverDelReq::CasFileRecoverDelReq(const CasFileRecoverDelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasFileRecoverDelReq)
}

void CasFileRecoverDelReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CasFileRecoverDelReq::~CasFileRecoverDelReq() {
  // @@protoc_insertion_point(destructor:ClientCos.CasFileRecoverDelReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasFileRecoverDelReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CasFileRecoverDelReq::ArenaDtor(void* object) {
  CasFileRecoverDelReq* _this = reinterpret_cast< CasFileRecoverDelReq* >(object);
  (void)_this;
}
void CasFileRecoverDelReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasFileRecoverDelReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasFileRecoverDelReq& CasFileRecoverDelReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasFileRecoverDelReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasFileRecoverDelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasFileRecoverDelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasFileRecoverDelReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasFileRecoverDelReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasFileRecoverDelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasFileRecoverDelReq)
  return target;
}

size_t CasFileRecoverDelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasFileRecoverDelReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasFileRecoverDelReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasFileRecoverDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CasFileRecoverDelReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasFileRecoverDelReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasFileRecoverDelReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasFileRecoverDelReq)
    MergeFrom(*source);
  }
}

void CasFileRecoverDelReq::MergeFrom(const CasFileRecoverDelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasFileRecoverDelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void CasFileRecoverDelReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasFileRecoverDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasFileRecoverDelReq::CopyFrom(const CasFileRecoverDelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasFileRecoverDelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasFileRecoverDelReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CasFileRecoverDelReq::InternalSwap(CasFileRecoverDelReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CasFileRecoverDelReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasFileRecoverDelRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<CasFileRecoverDelRsp>()._has_bits_);
  static void set_has_expired_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CasFileRecoverDelRsp::CasFileRecoverDelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasFileRecoverDelRsp)
}
CasFileRecoverDelRsp::CasFileRecoverDelRsp(const CasFileRecoverDelRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  expired_time_ = from.expired_time_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasFileRecoverDelRsp)
}

void CasFileRecoverDelRsp::SharedCtor() {
  expired_time_ = PROTOBUF_ULONGLONG(0);
}

CasFileRecoverDelRsp::~CasFileRecoverDelRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.CasFileRecoverDelRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasFileRecoverDelRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CasFileRecoverDelRsp::ArenaDtor(void* object) {
  CasFileRecoverDelRsp* _this = reinterpret_cast< CasFileRecoverDelRsp* >(object);
  (void)_this;
}
void CasFileRecoverDelRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasFileRecoverDelRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasFileRecoverDelRsp& CasFileRecoverDelRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasFileRecoverDelRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasFileRecoverDelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasFileRecoverDelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expired_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasFileRecoverDelRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint64 expired_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_expired_time(&has_bits);
          expired_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasFileRecoverDelRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasFileRecoverDelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 expired_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_expired_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasFileRecoverDelRsp)
  return target;
}

size_t CasFileRecoverDelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasFileRecoverDelRsp)
  size_t total_size = 0;

  // required uint64 expired_time = 1;
  if (_internal_has_expired_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_expired_time());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasFileRecoverDelRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasFileRecoverDelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CasFileRecoverDelRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasFileRecoverDelRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasFileRecoverDelRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasFileRecoverDelRsp)
    MergeFrom(*source);
  }
}

void CasFileRecoverDelRsp::MergeFrom(const CasFileRecoverDelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasFileRecoverDelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_expired_time()) {
    _internal_set_expired_time(from._internal_expired_time());
  }
}

void CasFileRecoverDelRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasFileRecoverDelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasFileRecoverDelRsp::CopyFrom(const CasFileRecoverDelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasFileRecoverDelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasFileRecoverDelRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CasFileRecoverDelRsp::InternalSwap(CasFileRecoverDelRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(expired_time_, other->expired_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CasFileRecoverDelRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasObjRestoreErrReq::_Internal {
 public:
  using HasBits = decltype(std::declval<CasObjRestoreErrReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CasObjRestoreErrReq::CasObjRestoreErrReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasObjRestoreErrReq)
}
CasObjRestoreErrReq::CasObjRestoreErrReq(const CasObjRestoreErrReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasObjRestoreErrReq)
}

void CasObjRestoreErrReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CasObjRestoreErrReq::~CasObjRestoreErrReq() {
  // @@protoc_insertion_point(destructor:ClientCos.CasObjRestoreErrReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasObjRestoreErrReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CasObjRestoreErrReq::ArenaDtor(void* object) {
  CasObjRestoreErrReq* _this = reinterpret_cast< CasObjRestoreErrReq* >(object);
  (void)_this;
}
void CasObjRestoreErrReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasObjRestoreErrReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasObjRestoreErrReq& CasObjRestoreErrReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasObjRestoreErrReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasObjRestoreErrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasObjRestoreErrReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasObjRestoreErrReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasObjRestoreErrReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasObjRestoreErrReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasObjRestoreErrReq)
  return target;
}

size_t CasObjRestoreErrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasObjRestoreErrReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasObjRestoreErrReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasObjRestoreErrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CasObjRestoreErrReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasObjRestoreErrReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasObjRestoreErrReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasObjRestoreErrReq)
    MergeFrom(*source);
  }
}

void CasObjRestoreErrReq::MergeFrom(const CasObjRestoreErrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasObjRestoreErrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void CasObjRestoreErrReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasObjRestoreErrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasObjRestoreErrReq::CopyFrom(const CasObjRestoreErrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasObjRestoreErrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasObjRestoreErrReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CasObjRestoreErrReq::InternalSwap(CasObjRestoreErrReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CasObjRestoreErrReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasObjRestoreErrRsp::_Internal {
 public:
};

CasObjRestoreErrRsp::CasObjRestoreErrRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasObjRestoreErrRsp)
}
CasObjRestoreErrRsp::CasObjRestoreErrRsp(const CasObjRestoreErrRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasObjRestoreErrRsp)
}

void CasObjRestoreErrRsp::SharedCtor() {
}

CasObjRestoreErrRsp::~CasObjRestoreErrRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.CasObjRestoreErrRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasObjRestoreErrRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CasObjRestoreErrRsp::ArenaDtor(void* object) {
  CasObjRestoreErrRsp* _this = reinterpret_cast< CasObjRestoreErrRsp* >(object);
  (void)_this;
}
void CasObjRestoreErrRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasObjRestoreErrRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasObjRestoreErrRsp& CasObjRestoreErrRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasObjRestoreErrRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasObjRestoreErrRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasObjRestoreErrRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasObjRestoreErrRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasObjRestoreErrRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasObjRestoreErrRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasObjRestoreErrRsp)
  return target;
}

size_t CasObjRestoreErrRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasObjRestoreErrRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasObjRestoreErrRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasObjRestoreErrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CasObjRestoreErrRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasObjRestoreErrRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasObjRestoreErrRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasObjRestoreErrRsp)
    MergeFrom(*source);
  }
}

void CasObjRestoreErrRsp::MergeFrom(const CasObjRestoreErrRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasObjRestoreErrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CasObjRestoreErrRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasObjRestoreErrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasObjRestoreErrRsp::CopyFrom(const CasObjRestoreErrRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasObjRestoreErrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasObjRestoreErrRsp::IsInitialized() const {
  return true;
}

void CasObjRestoreErrRsp::InternalSwap(CasObjRestoreErrRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CasObjRestoreErrRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasObjRestoreFinReq::_Internal {
 public:
  using HasBits = decltype(std::declval<CasObjRestoreFinReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CasObjRestoreFinReq::CasObjRestoreFinReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasObjRestoreFinReq)
}
CasObjRestoreFinReq::CasObjRestoreFinReq(const CasObjRestoreFinReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasObjRestoreFinReq)
}

void CasObjRestoreFinReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CasObjRestoreFinReq::~CasObjRestoreFinReq() {
  // @@protoc_insertion_point(destructor:ClientCos.CasObjRestoreFinReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasObjRestoreFinReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CasObjRestoreFinReq::ArenaDtor(void* object) {
  CasObjRestoreFinReq* _this = reinterpret_cast< CasObjRestoreFinReq* >(object);
  (void)_this;
}
void CasObjRestoreFinReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasObjRestoreFinReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasObjRestoreFinReq& CasObjRestoreFinReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasObjRestoreFinReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasObjRestoreFinReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasObjRestoreFinReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      sk_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasObjRestoreFinReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasObjRestoreFinReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasObjRestoreFinReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // optional bytes sk = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_sk(), target);
  }

  // optional bytes storage_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_storage_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasObjRestoreFinReq)
  return target;
}

size_t CasObjRestoreFinReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasObjRestoreFinReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000eu) {
    // optional bytes version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes sk = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sk());
    }

    // optional bytes storage_type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasObjRestoreFinReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasObjRestoreFinReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CasObjRestoreFinReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasObjRestoreFinReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasObjRestoreFinReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasObjRestoreFinReq)
    MergeFrom(*source);
  }
}

void CasObjRestoreFinReq::MergeFrom(const CasObjRestoreFinReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasObjRestoreFinReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
  }
}

void CasObjRestoreFinReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasObjRestoreFinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasObjRestoreFinReq::CopyFrom(const CasObjRestoreFinReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasObjRestoreFinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasObjRestoreFinReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CasObjRestoreFinReq::InternalSwap(CasObjRestoreFinReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CasObjRestoreFinReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CasObjRestoreFinRsp::_Internal {
 public:
};

CasObjRestoreFinRsp::CasObjRestoreFinRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CasObjRestoreFinRsp)
}
CasObjRestoreFinRsp::CasObjRestoreFinRsp(const CasObjRestoreFinRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.CasObjRestoreFinRsp)
}

void CasObjRestoreFinRsp::SharedCtor() {
}

CasObjRestoreFinRsp::~CasObjRestoreFinRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.CasObjRestoreFinRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CasObjRestoreFinRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CasObjRestoreFinRsp::ArenaDtor(void* object) {
  CasObjRestoreFinRsp* _this = reinterpret_cast< CasObjRestoreFinRsp* >(object);
  (void)_this;
}
void CasObjRestoreFinRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CasObjRestoreFinRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CasObjRestoreFinRsp& CasObjRestoreFinRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CasObjRestoreFinRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CasObjRestoreFinRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CasObjRestoreFinRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CasObjRestoreFinRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CasObjRestoreFinRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CasObjRestoreFinRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CasObjRestoreFinRsp)
  return target;
}

size_t CasObjRestoreFinRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CasObjRestoreFinRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CasObjRestoreFinRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CasObjRestoreFinRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CasObjRestoreFinRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CasObjRestoreFinRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CasObjRestoreFinRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CasObjRestoreFinRsp)
    MergeFrom(*source);
  }
}

void CasObjRestoreFinRsp::MergeFrom(const CasObjRestoreFinRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CasObjRestoreFinRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CasObjRestoreFinRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CasObjRestoreFinRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CasObjRestoreFinRsp::CopyFrom(const CasObjRestoreFinRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CasObjRestoreFinRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CasObjRestoreFinRsp::IsInitialized() const {
  return true;
}

void CasObjRestoreFinRsp::InternalSwap(CasObjRestoreFinRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CasObjRestoreFinRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpObjAttrQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SpObjAttrQueryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SpObjAttrQueryReq::SpObjAttrQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SpObjAttrQueryReq)
}
SpObjAttrQueryReq::SpObjAttrQueryReq(const SpObjAttrQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.SpObjAttrQueryReq)
}

void SpObjAttrQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SpObjAttrQueryReq::~SpObjAttrQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SpObjAttrQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpObjAttrQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SpObjAttrQueryReq::ArenaDtor(void* object) {
  SpObjAttrQueryReq* _this = reinterpret_cast< SpObjAttrQueryReq* >(object);
  (void)_this;
}
void SpObjAttrQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpObjAttrQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpObjAttrQueryReq& SpObjAttrQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpObjAttrQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SpObjAttrQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SpObjAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpObjAttrQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpObjAttrQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SpObjAttrQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SpObjAttrQueryReq)
  return target;
}

size_t SpObjAttrQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SpObjAttrQueryReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpObjAttrQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SpObjAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SpObjAttrQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpObjAttrQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SpObjAttrQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SpObjAttrQueryReq)
    MergeFrom(*source);
  }
}

void SpObjAttrQueryReq::MergeFrom(const SpObjAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SpObjAttrQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void SpObjAttrQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SpObjAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpObjAttrQueryReq::CopyFrom(const SpObjAttrQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SpObjAttrQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpObjAttrQueryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SpObjAttrQueryReq::InternalSwap(SpObjAttrQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SpObjAttrQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SpObjAttrQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<SpObjAttrQueryRsp>()._has_bits_);
  static void set_has_biz_attr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_file_length(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_real_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_slicesize(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_storage_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_delete_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_islatest(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_upload_source(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ClientCos::CasInfo& casinfo(const SpObjAttrQueryRsp* msg);
  static void set_has_casinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::ClientCos::SseInfo& sseinfo(const SpObjAttrQueryRsp* msg);
  static void set_has_sseinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_tagnum(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::ClientCos::ObjExpireAttr& objexpireattr(const SpObjAttrQueryRsp* msg);
  static void set_has_objexpireattr(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_version_seed(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_is_ugc(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::ClientCos::OwnerInfo& owner(const SpObjAttrQueryRsp* msg);
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_is_cas(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_lock_expired_time(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_is_v4(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000c01) ^ 0x00000c01) != 0;
  }
};

const ::ClientCos::CasInfo&
SpObjAttrQueryRsp::_Internal::casinfo(const SpObjAttrQueryRsp* msg) {
  return *msg->casinfo_;
}
const ::ClientCos::SseInfo&
SpObjAttrQueryRsp::_Internal::sseinfo(const SpObjAttrQueryRsp* msg) {
  return *msg->sseinfo_;
}
const ::ClientCos::ObjExpireAttr&
SpObjAttrQueryRsp::_Internal::objexpireattr(const SpObjAttrQueryRsp* msg) {
  return *msg->objexpireattr_;
}
const ::ClientCos::OwnerInfo&
SpObjAttrQueryRsp::_Internal::owner(const SpObjAttrQueryRsp* msg) {
  return *msg->owner_;
}
SpObjAttrQueryRsp::SpObjAttrQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reservedattr_(arena),
  customheader_(arena),
  taglist_(arena),
  acls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SpObjAttrQueryRsp)
}
SpObjAttrQueryRsp::SpObjAttrQueryRsp(const SpObjAttrQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      reservedattr_(from.reservedattr_),
      customheader_(from.customheader_),
      taglist_(from.taglist_),
      acls_(from.acls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_biz_attr()) {
    biz_attr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biz_attr(), 
      GetArena());
  }
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha()) {
    sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha(), 
      GetArena());
  }
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_real_sha()) {
    real_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_real_sha(), 
      GetArena());
  }
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storage_type()) {
    storage_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storage_type(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  upload_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_upload_source()) {
    upload_source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_upload_source(), 
      GetArena());
  }
  if (from._internal_has_casinfo()) {
    casinfo_ = new ::ClientCos::CasInfo(*from.casinfo_);
  } else {
    casinfo_ = nullptr;
  }
  if (from._internal_has_sseinfo()) {
    sseinfo_ = new ::ClientCos::SseInfo(*from.sseinfo_);
  } else {
    sseinfo_ = nullptr;
  }
  if (from._internal_has_objexpireattr()) {
    objexpireattr_ = new ::ClientCos::ObjExpireAttr(*from.objexpireattr_);
  } else {
    objexpireattr_ = nullptr;
  }
  if (from._internal_has_owner()) {
    owner_ = new ::ClientCos::OwnerInfo(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  ::memcpy(&ctime_, &from.ctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_v4_) -
    reinterpret_cast<char*>(&ctime_)) + sizeof(is_v4_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.SpObjAttrQueryRsp)
}

void SpObjAttrQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto.base);
  biz_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&casinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&is_v4_) -
      reinterpret_cast<char*>(&casinfo_)) + sizeof(is_v4_));
}

SpObjAttrQueryRsp::~SpObjAttrQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SpObjAttrQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpObjAttrQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  biz_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  real_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  upload_source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete casinfo_;
  if (this != internal_default_instance()) delete sseinfo_;
  if (this != internal_default_instance()) delete objexpireattr_;
  if (this != internal_default_instance()) delete owner_;
}

void SpObjAttrQueryRsp::ArenaDtor(void* object) {
  SpObjAttrQueryRsp* _this = reinterpret_cast< SpObjAttrQueryRsp* >(object);
  (void)_this;
}
void SpObjAttrQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpObjAttrQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SpObjAttrQueryRsp& SpObjAttrQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SpObjAttrQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SpObjAttrQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SpObjAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reservedattr_.Clear();
  customheader_.Clear();
  taglist_.Clear();
  acls_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      biz_attr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      real_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      storage_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      upload_source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(casinfo_ != nullptr);
      casinfo_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(sseinfo_ != nullptr);
      sseinfo_->Clear();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(objexpireattr_ != nullptr);
      objexpireattr_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(owner_ != nullptr);
      owner_->Clear();
    }
  }
  if (cached_has_bits & 0x0000fc00u) {
    ::memset(&ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_) -
        reinterpret_cast<char*>(&ctime_)) + sizeof(auth_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&slicesize_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_seed_) -
        reinterpret_cast<char*>(&slicesize_)) + sizeof(version_seed_));
  }
  if (cached_has_bits & 0x03000000u) {
    ::memset(&lock_expired_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_v4_) -
        reinterpret_cast<char*>(&lock_expired_time_)) + sizeof(is_v4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpObjAttrQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes biz_attr = 1 [default = ""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_biz_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 ctime = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctime(&has_bits);
          ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 mtime = 3 [default = 0];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 file_length = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_file_length(&has_bits);
          file_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sha = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CustomHeader customheader = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bytes real_sha = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_real_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 slicesize = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_slicesize(&has_bits);
          slicesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes storage_type = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_storage_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool delete_marker = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_delete_marker(&has_bits);
          delete_marker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool islatest = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_islatest(&has_bits);
          islatest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes upload_source = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_upload_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CasInfo casinfo = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_casinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.SseInfo sseinfo = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_sseinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 tagnum = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_tagnum(&has_bits);
          tagnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ObjExpireAttr objexpireattr = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_objexpireattr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ObjTag taglist = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_taglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint64 version_seed = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_version_seed(&has_bits);
          version_seed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_ugc = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          _Internal::set_has_is_ugc(&has_bits);
          is_ugc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo owner = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_cas = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_is_cas(&has_bits);
          is_cas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.AclInfo acls = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_acls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint64 lock_expired_time = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          _Internal::set_has_lock_expired_time(&has_bits);
          lock_expired_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_v4 = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_is_v4(&has_bits);
          is_v4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpObjAttrQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SpObjAttrQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes biz_attr = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_biz_attr(), target);
  }

  // required uint32 ctime = 2 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ctime(), target);
  }

  // required uint32 mtime = 3 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mtime(), target);
  }

  // optional uint64 file_size = 4;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_file_size(), target);
  }

  // optional uint64 file_length = 5;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_file_length(), target);
  }

  // optional bytes sha = 6;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_sha(), target);
  }

  // optional uint32 forbid = 7;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_reservedattr(i), target, stream);
  }

  // optional .ClientCos.Authority auth = 9;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_auth(), target);
  }

  // repeated .ClientCos.CustomHeader customheader = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_customheader(i), target, stream);
  }

  // optional bytes real_sha = 11;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_real_sha(), target);
  }

  // optional uint32 slicesize = 12;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_slicesize(), target);
  }

  // optional uint32 type = 13;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_type(), target);
  }

  // optional bytes storage_type = 14;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        14, this->_internal_storage_type(), target);
  }

  // optional bytes version = 15;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        15, this->_internal_version(), target);
  }

  // optional bool delete_marker = 16;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_delete_marker(), target);
  }

  // optional bool islatest = 17;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_islatest(), target);
  }

  // optional bytes upload_source = 18;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        18, this->_internal_upload_source(), target);
  }

  // optional .ClientCos.CasInfo casinfo = 19;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::casinfo(this), target, stream);
  }

  // optional .ClientCos.SseInfo sseinfo = 20;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::sseinfo(this), target, stream);
  }

  // optional uint32 tagnum = 21;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_tagnum(), target);
  }

  // optional .ClientCos.ObjExpireAttr objexpireattr = 22;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::objexpireattr(this), target, stream);
  }

  // repeated .ClientCos.ObjTag taglist = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, this->_internal_taglist(i), target, stream);
  }

  // optional uint64 version_seed = 24;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(24, this->_internal_version_seed(), target);
  }

  // optional bool is_ugc = 25;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(25, this->_internal_is_ugc(), target);
  }

  // optional .ClientCos.OwnerInfo owner = 26;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        26, _Internal::owner(this), target, stream);
  }

  // optional bool is_cas = 27;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(27, this->_internal_is_cas(), target);
  }

  // repeated .ClientCos.AclInfo acls = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acls_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(28, this->_internal_acls(i), target, stream);
  }

  // optional uint64 lock_expired_time = 29;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(29, this->_internal_lock_expired_time(), target);
  }

  // optional bool is_v4 = 30;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_is_v4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SpObjAttrQueryRsp)
  return target;
}

size_t SpObjAttrQueryRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.SpObjAttrQueryRsp)
  size_t total_size = 0;

  if (_internal_has_biz_attr()) {
    // required bytes biz_attr = 1 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_biz_attr());
  }

  if (_internal_has_ctime()) {
    // required uint32 ctime = 2 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ctime());
  }

  if (_internal_has_mtime()) {
    // required uint32 mtime = 3 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());
  }

  return total_size;
}
size_t SpObjAttrQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SpObjAttrQueryRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000c01) ^ 0x00000c01) == 0) {  // All required fields are present.
    // required bytes biz_attr = 1 [default = ""];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_biz_attr());

    // required uint32 ctime = 2 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ctime());

    // required uint32 mtime = 3 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ReservedAttr reservedattr = 8;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.CustomHeader customheader = 10;
  total_size += 1UL * this->_internal_customheader_size();
  for (const auto& msg : this->customheader_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ObjTag taglist = 23;
  total_size += 2UL * this->_internal_taglist_size();
  for (const auto& msg : this->taglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.AclInfo acls = 28;
  total_size += 2UL * this->_internal_acls_size();
  for (const auto& msg : this->acls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional bytes sha = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sha());
    }

    // optional bytes real_sha = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_real_sha());
    }

    // optional bytes storage_type = 14;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_storage_type());
    }

    // optional bytes version = 15;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes upload_source = 18;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_upload_source());
    }

    // optional .ClientCos.CasInfo casinfo = 19;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *casinfo_);
    }

    // optional .ClientCos.SseInfo sseinfo = 20;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sseinfo_);
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional .ClientCos.ObjExpireAttr objexpireattr = 22;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *objexpireattr_);
    }

    // optional .ClientCos.OwnerInfo owner = 26;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *owner_);
    }

  }
  if (cached_has_bits & 0x0000f000u) {
    // optional uint64 file_size = 4;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_size());
    }

    // optional uint64 file_length = 5;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_file_length());
    }

    // optional uint32 forbid = 7;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional .ClientCos.Authority auth = 9;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional uint32 slicesize = 12;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_slicesize());
    }

    // optional uint32 type = 13;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

    // optional uint32 tagnum = 21;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_tagnum());
    }

    // optional bool delete_marker = 16;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool islatest = 17;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool is_ugc = 25;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool is_cas = 27;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional uint64 version_seed = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_version_seed());
    }

  }
  if (cached_has_bits & 0x03000000u) {
    // optional uint64 lock_expired_time = 29;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_lock_expired_time());
    }

    // optional bool is_v4 = 30;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpObjAttrQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SpObjAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SpObjAttrQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpObjAttrQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SpObjAttrQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SpObjAttrQueryRsp)
    MergeFrom(*source);
  }
}

void SpObjAttrQueryRsp::MergeFrom(const SpObjAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SpObjAttrQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reservedattr_.MergeFrom(from.reservedattr_);
  customheader_.MergeFrom(from.customheader_);
  taglist_.MergeFrom(from.taglist_);
  acls_.MergeFrom(from.acls_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_biz_attr(from._internal_biz_attr());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sha(from._internal_sha());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_real_sha(from._internal_real_sha());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_storage_type(from._internal_storage_type());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_upload_source(from._internal_upload_source());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_casinfo()->::ClientCos::CasInfo::MergeFrom(from._internal_casinfo());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_sseinfo()->::ClientCos::SseInfo::MergeFrom(from._internal_sseinfo());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_objexpireattr()->::ClientCos::ObjExpireAttr::MergeFrom(from._internal_objexpireattr());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_owner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_owner());
    }
    if (cached_has_bits & 0x00000400u) {
      ctime_ = from.ctime_;
    }
    if (cached_has_bits & 0x00000800u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00001000u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00002000u) {
      file_length_ = from.file_length_;
    }
    if (cached_has_bits & 0x00004000u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00008000u) {
      auth_ = from.auth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      slicesize_ = from.slicesize_;
    }
    if (cached_has_bits & 0x00020000u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00040000u) {
      tagnum_ = from.tagnum_;
    }
    if (cached_has_bits & 0x00080000u) {
      delete_marker_ = from.delete_marker_;
    }
    if (cached_has_bits & 0x00100000u) {
      islatest_ = from.islatest_;
    }
    if (cached_has_bits & 0x00200000u) {
      is_ugc_ = from.is_ugc_;
    }
    if (cached_has_bits & 0x00400000u) {
      is_cas_ = from.is_cas_;
    }
    if (cached_has_bits & 0x00800000u) {
      version_seed_ = from.version_seed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      lock_expired_time_ = from.lock_expired_time_;
    }
    if (cached_has_bits & 0x02000000u) {
      is_v4_ = from.is_v4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpObjAttrQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SpObjAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpObjAttrQueryRsp::CopyFrom(const SpObjAttrQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SpObjAttrQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpObjAttrQueryRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(taglist_)) return false;
  return true;
}

void SpObjAttrQueryRsp::InternalSwap(SpObjAttrQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reservedattr_.InternalSwap(&other->reservedattr_);
  customheader_.InternalSwap(&other->customheader_);
  taglist_.InternalSwap(&other->taglist_);
  acls_.InternalSwap(&other->acls_);
  biz_attr_.Swap(&other->biz_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha_.Swap(&other->sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  real_sha_.Swap(&other->real_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_type_.Swap(&other->storage_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  upload_source_.Swap(&other->upload_source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpObjAttrQueryRsp, is_v4_)
      + sizeof(SpObjAttrQueryRsp::is_v4_)
      - PROTOBUF_FIELD_OFFSET(SpObjAttrQueryRsp, casinfo_)>(
          reinterpret_cast<char*>(&casinfo_),
          reinterpret_cast<char*>(&other->casinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpObjAttrQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjModStorageTypeReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjModStorageTypeReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_storagetype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_check_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ObjModStorageTypeReq::ObjModStorageTypeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjModStorageTypeReq)
}
ObjModStorageTypeReq::ObjModStorageTypeReq(const ObjModStorageTypeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  storagetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_storagetype()) {
    storagetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_storagetype(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  ::memcpy(&switch_flag_, &from.switch_flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&check_mtime_) -
    reinterpret_cast<char*>(&switch_flag_)) + sizeof(check_mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjModStorageTypeReq)
}

void ObjModStorageTypeReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storagetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&switch_flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&check_mtime_) -
      reinterpret_cast<char*>(&switch_flag_)) + sizeof(check_mtime_));
}

ObjModStorageTypeReq::~ObjModStorageTypeReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjModStorageTypeReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjModStorageTypeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storagetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjModStorageTypeReq::ArenaDtor(void* object) {
  ObjModStorageTypeReq* _this = reinterpret_cast< ObjModStorageTypeReq* >(object);
  (void)_this;
}
void ObjModStorageTypeReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjModStorageTypeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjModStorageTypeReq& ObjModStorageTypeReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjModStorageTypeReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjModStorageTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjModStorageTypeReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      storagetype_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      sk_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&switch_flag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&check_mtime_) -
        reinterpret_cast<char*>(&switch_flag_)) + sizeof(check_mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjModStorageTypeReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes storagetype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_storagetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sk = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 check_mtime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_check_mtime(&has_bits);
          check_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjModStorageTypeReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjModStorageTypeReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required bytes storagetype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_storagetype(), target);
  }

  // optional bytes version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_version(), target);
  }

  // optional bool switch_flag = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_switch_flag(), target);
  }

  // optional bytes sk = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_sk(), target);
  }

  // optional uint32 check_mtime = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_check_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjModStorageTypeReq)
  return target;
}

size_t ObjModStorageTypeReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.ObjModStorageTypeReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_storagetype()) {
    // required bytes storagetype = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_storagetype());
  }

  return total_size;
}
size_t ObjModStorageTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjModStorageTypeReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required bytes storagetype = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_storagetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003cu) {
    // optional bytes version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes sk = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sk());
    }

    // optional bool switch_flag = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional uint32 check_mtime = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_check_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjModStorageTypeReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjModStorageTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjModStorageTypeReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjModStorageTypeReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjModStorageTypeReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjModStorageTypeReq)
    MergeFrom(*source);
  }
}

void ObjModStorageTypeReq::MergeFrom(const ObjModStorageTypeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjModStorageTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_storagetype(from._internal_storagetype());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000010u) {
      switch_flag_ = from.switch_flag_;
    }
    if (cached_has_bits & 0x00000020u) {
      check_mtime_ = from.check_mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjModStorageTypeReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjModStorageTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjModStorageTypeReq::CopyFrom(const ObjModStorageTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjModStorageTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjModStorageTypeReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ObjModStorageTypeReq::InternalSwap(ObjModStorageTypeReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storagetype_.Swap(&other->storagetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjModStorageTypeReq, check_mtime_)
      + sizeof(ObjModStorageTypeReq::check_mtime_)
      - PROTOBUF_FIELD_OFFSET(ObjModStorageTypeReq, switch_flag_)>(
          reinterpret_cast<char*>(&switch_flag_),
          reinterpret_cast<char*>(&other->switch_flag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjModStorageTypeReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjModStorageTypeRsp::_Internal {
 public:
};

ObjModStorageTypeRsp::ObjModStorageTypeRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ObjModStorageTypeRsp)
}
ObjModStorageTypeRsp::ObjModStorageTypeRsp(const ObjModStorageTypeRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.ObjModStorageTypeRsp)
}

void ObjModStorageTypeRsp::SharedCtor() {
}

ObjModStorageTypeRsp::~ObjModStorageTypeRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ObjModStorageTypeRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjModStorageTypeRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjModStorageTypeRsp::ArenaDtor(void* object) {
  ObjModStorageTypeRsp* _this = reinterpret_cast< ObjModStorageTypeRsp* >(object);
  (void)_this;
}
void ObjModStorageTypeRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjModStorageTypeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjModStorageTypeRsp& ObjModStorageTypeRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjModStorageTypeRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ObjModStorageTypeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ObjModStorageTypeRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjModStorageTypeRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjModStorageTypeRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ObjModStorageTypeRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ObjModStorageTypeRsp)
  return target;
}

size_t ObjModStorageTypeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ObjModStorageTypeRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjModStorageTypeRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ObjModStorageTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjModStorageTypeRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjModStorageTypeRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ObjModStorageTypeRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ObjModStorageTypeRsp)
    MergeFrom(*source);
  }
}

void ObjModStorageTypeRsp::MergeFrom(const ObjModStorageTypeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ObjModStorageTypeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjModStorageTypeRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ObjModStorageTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjModStorageTypeRsp::CopyFrom(const ObjModStorageTypeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ObjModStorageTypeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjModStorageTypeRsp::IsInitialized() const {
  return true;
}

void ObjModStorageTypeRsp::InternalSwap(ObjModStorageTypeRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjModStorageTypeRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SseInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SseInfo>()._has_bits_);
  static void set_has_ssetype(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_algorithm(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ssec_key(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ssec_key_md5(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_kms_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_kms_context(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_kms_datakey(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_kms_datakey_encryp(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_sse_etag(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

SseInfo::SseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SseInfo)
}
SseInfo::SseInfo(const SseInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_algorithm()) {
    algorithm_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_algorithm(), 
      GetArena());
  }
  ssec_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_ssec_key()) {
    ssec_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ssec_key(), 
      GetArena());
  }
  ssec_key_md5_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_ssec_key_md5()) {
    ssec_key_md5_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ssec_key_md5(), 
      GetArena());
  }
  kms_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_kms_id()) {
    kms_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kms_id(), 
      GetArena());
  }
  kms_context_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_kms_context()) {
    kms_context_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kms_context(), 
      GetArena());
  }
  kms_datakey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_kms_datakey()) {
    kms_datakey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kms_datakey(), 
      GetArena());
  }
  kms_datakey_encryp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_kms_datakey_encryp()) {
    kms_datakey_encryp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kms_datakey_encryp(), 
      GetArena());
  }
  sse_etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sse_etag()) {
    sse_etag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sse_etag(), 
      GetArena());
  }
  ssetype_ = from.ssetype_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.SseInfo)
}

void SseInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SseInfo_cosv4_5fclient_2eproto.base);
  algorithm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssec_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssec_key_md5_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_context_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_datakey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_datakey_encryp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sse_etag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssetype_ = 0;
}

SseInfo::~SseInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.SseInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SseInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  algorithm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssec_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssec_key_md5_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_context_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_datakey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kms_datakey_encryp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sse_etag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SseInfo::ArenaDtor(void* object) {
  SseInfo* _this = reinterpret_cast< SseInfo* >(object);
  (void)_this;
}
void SseInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SseInfo& SseInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SseInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SseInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      algorithm_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ssec_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ssec_key_md5_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      kms_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      kms_context_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      kms_datakey_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      kms_datakey_encryp_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      sse_etag_.ClearNonDefaultToEmpty();
    }
  }
  ssetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SseInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.SseType ssetype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::SseType_IsValid(val))) {
            _internal_set_ssetype(static_cast<::ClientCos::SseType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bytes algorithm = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_algorithm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes ssec_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_ssec_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes ssec_key_md5 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_ssec_key_md5();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes kms_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_kms_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes kms_context = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_kms_context();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes kms_datakey = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_kms_datakey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes kms_datakey_encryp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_kms_datakey_encryp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sse_etag = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_sse_etag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SseInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SseInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.SseType ssetype = 1;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ssetype(), target);
  }

  // optional bytes algorithm = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_algorithm(), target);
  }

  // optional bytes ssec_key = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_ssec_key(), target);
  }

  // optional bytes ssec_key_md5 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_ssec_key_md5(), target);
  }

  // optional bytes kms_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_kms_id(), target);
  }

  // optional bytes kms_context = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_kms_context(), target);
  }

  // optional bytes kms_datakey = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_kms_datakey(), target);
  }

  // optional bytes kms_datakey_encryp = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_kms_datakey_encryp(), target);
  }

  // optional bytes sse_etag = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_sse_etag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SseInfo)
  return target;
}

size_t SseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SseInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes algorithm = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_algorithm());
    }

    // optional bytes ssec_key = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_ssec_key());
    }

    // optional bytes ssec_key_md5 = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_ssec_key_md5());
    }

    // optional bytes kms_id = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_kms_id());
    }

    // optional bytes kms_context = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_kms_context());
    }

    // optional bytes kms_datakey = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_kms_datakey());
    }

    // optional bytes kms_datakey_encryp = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_kms_datakey_encryp());
    }

    // optional bytes sse_etag = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sse_etag());
    }

  }
  // optional .ClientCos.SseType ssetype = 1;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ssetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SseInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SseInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SseInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SseInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SseInfo)
    MergeFrom(*source);
  }
}

void SseInfo::MergeFrom(const SseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_algorithm(from._internal_algorithm());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_ssec_key(from._internal_ssec_key());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_ssec_key_md5(from._internal_ssec_key_md5());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_kms_id(from._internal_kms_id());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_kms_context(from._internal_kms_context());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_kms_datakey(from._internal_kms_datakey());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_kms_datakey_encryp(from._internal_kms_datakey_encryp());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_set_sse_etag(from._internal_sse_etag());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_ssetype(from._internal_ssetype());
  }
}

void SseInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SseInfo::CopyFrom(const SseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SseInfo::IsInitialized() const {
  return true;
}

void SseInfo::InternalSwap(SseInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  algorithm_.Swap(&other->algorithm_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ssec_key_.Swap(&other->ssec_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ssec_key_md5_.Swap(&other->ssec_key_md5_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  kms_id_.Swap(&other->kms_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  kms_context_.Swap(&other->kms_context_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  kms_datakey_.Swap(&other->kms_datakey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  kms_datakey_encryp_.Swap(&other->kms_datakey_encryp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sse_etag_.Swap(&other->sse_etag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ssetype_, other->ssetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SseInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ErrorCodeReturned::_Internal {
 public:
  using HasBits = decltype(std::declval<ErrorCodeReturned>()._has_bits_);
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_protocol(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_replacekeywith(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hostname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000008) ^ 0x00000008) != 0;
  }
};

ErrorCodeReturned::ErrorCodeReturned(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ErrorCodeReturned)
}
ErrorCodeReturned::ErrorCodeReturned(const ErrorCodeReturned& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_protocol()) {
    protocol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol(), 
      GetArena());
  }
  replacekeywith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_replacekeywith()) {
    replacekeywith_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_replacekeywith(), 
      GetArena());
  }
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_hostname()) {
    hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostname(), 
      GetArena());
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.ErrorCodeReturned)
}

void ErrorCodeReturned::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ErrorCodeReturned_cosv4_5fclient_2eproto.base);
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeywith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 0u;
}

ErrorCodeReturned::~ErrorCodeReturned() {
  // @@protoc_insertion_point(destructor:ClientCos.ErrorCodeReturned)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ErrorCodeReturned::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeywith_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ErrorCodeReturned::ArenaDtor(void* object) {
  ErrorCodeReturned* _this = reinterpret_cast< ErrorCodeReturned* >(object);
  (void)_this;
}
void ErrorCodeReturned::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ErrorCodeReturned::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorCodeReturned& ErrorCodeReturned::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorCodeReturned_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ErrorCodeReturned::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ErrorCodeReturned)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      protocol_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      replacekeywith_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      hostname_.ClearNonDefaultToEmpty();
    }
  }
  errorcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorCodeReturned::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 errorcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_errorcode(&has_bits);
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes protocol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes replacekeywith = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_replacekeywith();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes hostname = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_hostname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorCodeReturned::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ErrorCodeReturned)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorcode = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errorcode(), target);
  }

  // optional bytes protocol = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_protocol(), target);
  }

  // optional bytes replacekeywith = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_replacekeywith(), target);
  }

  // optional bytes hostname = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_hostname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ErrorCodeReturned)
  return target;
}

size_t ErrorCodeReturned::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ErrorCodeReturned)
  size_t total_size = 0;

  // required uint32 errorcode = 1;
  if (_internal_has_errorcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_errorcode());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes protocol = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_protocol());
    }

    // optional bytes replacekeywith = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_replacekeywith());
    }

    // optional bytes hostname = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_hostname());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorCodeReturned::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ErrorCodeReturned)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorCodeReturned* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorCodeReturned>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ErrorCodeReturned)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ErrorCodeReturned)
    MergeFrom(*source);
  }
}

void ErrorCodeReturned::MergeFrom(const ErrorCodeReturned& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ErrorCodeReturned)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_protocol(from._internal_protocol());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_replacekeywith(from._internal_replacekeywith());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_hostname(from._internal_hostname());
    }
    if (cached_has_bits & 0x00000008u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorCodeReturned::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ErrorCodeReturned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorCodeReturned::CopyFrom(const ErrorCodeReturned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ErrorCodeReturned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorCodeReturned::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ErrorCodeReturned::InternalSwap(ErrorCodeReturned* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  replacekeywith_.Swap(&other->replacekeywith_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(errorcode_, other->errorcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorCodeReturned::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PrefixReturned::_Internal {
 public:
  using HasBits = decltype(std::declval<PrefixReturned>()._has_bits_);
  static void set_has_keyprefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_protocol(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_replacekeyprefixwith(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_replacekeywith(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_hostname(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_httpredirectcode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PrefixReturned::PrefixReturned(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.PrefixReturned)
}
PrefixReturned::PrefixReturned(const PrefixReturned& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyprefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_keyprefix()) {
    keyprefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyprefix(), 
      GetArena());
  }
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_protocol()) {
    protocol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol(), 
      GetArena());
  }
  replacekeyprefixwith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_replacekeyprefixwith()) {
    replacekeyprefixwith_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_replacekeyprefixwith(), 
      GetArena());
  }
  replacekeywith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_replacekeywith()) {
    replacekeywith_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_replacekeywith(), 
      GetArena());
  }
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_hostname()) {
    hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostname(), 
      GetArena());
  }
  httpredirectcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_httpredirectcode()) {
    httpredirectcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_httpredirectcode(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.PrefixReturned)
}

void PrefixReturned::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrefixReturned_cosv4_5fclient_2eproto.base);
  keyprefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeyprefixwith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeywith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  httpredirectcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PrefixReturned::~PrefixReturned() {
  // @@protoc_insertion_point(destructor:ClientCos.PrefixReturned)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrefixReturned::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyprefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeyprefixwith_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeywith_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  httpredirectcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrefixReturned::ArenaDtor(void* object) {
  PrefixReturned* _this = reinterpret_cast< PrefixReturned* >(object);
  (void)_this;
}
void PrefixReturned::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrefixReturned::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrefixReturned& PrefixReturned::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrefixReturned_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void PrefixReturned::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.PrefixReturned)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      keyprefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      protocol_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      replacekeyprefixwith_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      replacekeywith_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      hostname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      httpredirectcode_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrefixReturned::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes keyprefix = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyprefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes protocol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes replacekeyprefixwith = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_replacekeyprefixwith();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes replacekeywith = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_replacekeywith();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes hostname = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_hostname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes httpredirectcode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_httpredirectcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrefixReturned::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.PrefixReturned)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes keyprefix = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyprefix(), target);
  }

  // optional bytes protocol = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_protocol(), target);
  }

  // optional bytes replacekeyprefixwith = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_replacekeyprefixwith(), target);
  }

  // optional bytes replacekeywith = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_replacekeywith(), target);
  }

  // optional bytes hostname = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_hostname(), target);
  }

  // optional bytes httpredirectcode = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_httpredirectcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.PrefixReturned)
  return target;
}

size_t PrefixReturned::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.PrefixReturned)
  size_t total_size = 0;

  // required bytes keyprefix = 1;
  if (_internal_has_keyprefix()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyprefix());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003eu) {
    // optional bytes protocol = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_protocol());
    }

    // optional bytes replacekeyprefixwith = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_replacekeyprefixwith());
    }

    // optional bytes replacekeywith = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_replacekeywith());
    }

    // optional bytes hostname = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_hostname());
    }

    // optional bytes httpredirectcode = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_httpredirectcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrefixReturned::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.PrefixReturned)
  GOOGLE_DCHECK_NE(&from, this);
  const PrefixReturned* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrefixReturned>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.PrefixReturned)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.PrefixReturned)
    MergeFrom(*source);
  }
}

void PrefixReturned::MergeFrom(const PrefixReturned& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.PrefixReturned)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_keyprefix(from._internal_keyprefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_protocol(from._internal_protocol());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_replacekeyprefixwith(from._internal_replacekeyprefixwith());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_replacekeywith(from._internal_replacekeywith());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_hostname(from._internal_hostname());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_httpredirectcode(from._internal_httpredirectcode());
    }
  }
}

void PrefixReturned::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.PrefixReturned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrefixReturned::CopyFrom(const PrefixReturned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.PrefixReturned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrefixReturned::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void PrefixReturned::InternalSwap(PrefixReturned* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  keyprefix_.Swap(&other->keyprefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  replacekeyprefixwith_.Swap(&other->replacekeyprefixwith_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  replacekeywith_.Swap(&other->replacekeywith_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  httpredirectcode_.Swap(&other->httpredirectcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PrefixReturned::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PrefixAndErrcodeReturned::_Internal {
 public:
  using HasBits = decltype(std::declval<PrefixAndErrcodeReturned>()._has_bits_);
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_keyprefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_protocol(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hostname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_replacekeyprefixwith(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_replacekeywith(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_httpredirectcode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

PrefixAndErrcodeReturned::PrefixAndErrcodeReturned(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.PrefixAndErrcodeReturned)
}
PrefixAndErrcodeReturned::PrefixAndErrcodeReturned(const PrefixAndErrcodeReturned& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyprefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_keyprefix()) {
    keyprefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyprefix(), 
      GetArena());
  }
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_protocol()) {
    protocol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol(), 
      GetArena());
  }
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_hostname()) {
    hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostname(), 
      GetArena());
  }
  replacekeyprefixwith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_replacekeyprefixwith()) {
    replacekeyprefixwith_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_replacekeyprefixwith(), 
      GetArena());
  }
  replacekeywith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_replacekeywith()) {
    replacekeywith_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_replacekeywith(), 
      GetArena());
  }
  httpredirectcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_httpredirectcode()) {
    httpredirectcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_httpredirectcode(), 
      GetArena());
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.PrefixAndErrcodeReturned)
}

void PrefixAndErrcodeReturned::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto.base);
  keyprefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeyprefixwith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeywith_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  httpredirectcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 0u;
}

PrefixAndErrcodeReturned::~PrefixAndErrcodeReturned() {
  // @@protoc_insertion_point(destructor:ClientCos.PrefixAndErrcodeReturned)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrefixAndErrcodeReturned::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyprefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeyprefixwith_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  replacekeywith_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  httpredirectcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrefixAndErrcodeReturned::ArenaDtor(void* object) {
  PrefixAndErrcodeReturned* _this = reinterpret_cast< PrefixAndErrcodeReturned* >(object);
  (void)_this;
}
void PrefixAndErrcodeReturned::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrefixAndErrcodeReturned::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrefixAndErrcodeReturned& PrefixAndErrcodeReturned::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrefixAndErrcodeReturned_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void PrefixAndErrcodeReturned::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.PrefixAndErrcodeReturned)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      keyprefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      protocol_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      hostname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      replacekeyprefixwith_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      replacekeywith_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      httpredirectcode_.ClearNonDefaultToEmpty();
    }
  }
  errorcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrefixAndErrcodeReturned::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 errorcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_errorcode(&has_bits);
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes keyprefix = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyprefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes protocol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes hostname = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_hostname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes replacekeyprefixwith = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_replacekeyprefixwith();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes replacekeywith = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_replacekeywith();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes httpredirectcode = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_httpredirectcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrefixAndErrcodeReturned::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.PrefixAndErrcodeReturned)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 errorcode = 1;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errorcode(), target);
  }

  // optional bytes keyprefix = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyprefix(), target);
  }

  // optional bytes protocol = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_protocol(), target);
  }

  // optional bytes hostname = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_hostname(), target);
  }

  // optional bytes replacekeyprefixwith = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_replacekeyprefixwith(), target);
  }

  // optional bytes replacekeywith = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_replacekeywith(), target);
  }

  // optional bytes httpredirectcode = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_httpredirectcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.PrefixAndErrcodeReturned)
  return target;
}

size_t PrefixAndErrcodeReturned::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.PrefixAndErrcodeReturned)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes keyprefix = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_keyprefix());
    }

    // optional bytes protocol = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_protocol());
    }

    // optional bytes hostname = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_hostname());
    }

    // optional bytes replacekeyprefixwith = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_replacekeyprefixwith());
    }

    // optional bytes replacekeywith = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_replacekeywith());
    }

    // optional bytes httpredirectcode = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_httpredirectcode());
    }

    // optional uint32 errorcode = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_errorcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrefixAndErrcodeReturned::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.PrefixAndErrcodeReturned)
  GOOGLE_DCHECK_NE(&from, this);
  const PrefixAndErrcodeReturned* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrefixAndErrcodeReturned>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.PrefixAndErrcodeReturned)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.PrefixAndErrcodeReturned)
    MergeFrom(*source);
  }
}

void PrefixAndErrcodeReturned::MergeFrom(const PrefixAndErrcodeReturned& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.PrefixAndErrcodeReturned)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_keyprefix(from._internal_keyprefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_protocol(from._internal_protocol());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_hostname(from._internal_hostname());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_replacekeyprefixwith(from._internal_replacekeyprefixwith());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_replacekeywith(from._internal_replacekeywith());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_httpredirectcode(from._internal_httpredirectcode());
    }
    if (cached_has_bits & 0x00000040u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrefixAndErrcodeReturned::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.PrefixAndErrcodeReturned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrefixAndErrcodeReturned::CopyFrom(const PrefixAndErrcodeReturned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.PrefixAndErrcodeReturned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrefixAndErrcodeReturned::IsInitialized() const {
  return true;
}

void PrefixAndErrcodeReturned::InternalSwap(PrefixAndErrcodeReturned* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  keyprefix_.Swap(&other->keyprefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  replacekeyprefixwith_.Swap(&other->replacekeyprefixwith_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  replacekeywith_.Swap(&other->replacekeywith_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  httpredirectcode_.Swap(&other->httpredirectcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(errorcode_, other->errorcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrefixAndErrcodeReturned::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RoutingRule::_Internal {
 public:
};

RoutingRule::RoutingRule(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  errorcodereturned_(arena),
  prefixreturned_(arena),
  prefixanderrcodereturned_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.RoutingRule)
}
RoutingRule::RoutingRule(const RoutingRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      errorcodereturned_(from.errorcodereturned_),
      prefixreturned_(from.prefixreturned_),
      prefixanderrcodereturned_(from.prefixanderrcodereturned_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.RoutingRule)
}

void RoutingRule::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RoutingRule_cosv4_5fclient_2eproto.base);
}

RoutingRule::~RoutingRule() {
  // @@protoc_insertion_point(destructor:ClientCos.RoutingRule)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoutingRule::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RoutingRule::ArenaDtor(void* object) {
  RoutingRule* _this = reinterpret_cast< RoutingRule* >(object);
  (void)_this;
}
void RoutingRule::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoutingRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoutingRule& RoutingRule::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RoutingRule_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void RoutingRule::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.RoutingRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errorcodereturned_.Clear();
  prefixreturned_.Clear();
  prefixanderrcodereturned_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoutingRule::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.ErrorCodeReturned errorcodereturned = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_errorcodereturned(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.PrefixReturned prefixreturned = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_prefixreturned(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.PrefixAndErrcodeReturned prefixanderrcodereturned = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_prefixanderrcodereturned(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoutingRule::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.RoutingRule)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.ErrorCodeReturned errorcodereturned = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_errorcodereturned_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_errorcodereturned(i), target, stream);
  }

  // repeated .ClientCos.PrefixReturned prefixreturned = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_prefixreturned_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_prefixreturned(i), target, stream);
  }

  // repeated .ClientCos.PrefixAndErrcodeReturned prefixanderrcodereturned = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_prefixanderrcodereturned_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_prefixanderrcodereturned(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.RoutingRule)
  return target;
}

size_t RoutingRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.RoutingRule)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.ErrorCodeReturned errorcodereturned = 1;
  total_size += 1UL * this->_internal_errorcodereturned_size();
  for (const auto& msg : this->errorcodereturned_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.PrefixReturned prefixreturned = 2;
  total_size += 1UL * this->_internal_prefixreturned_size();
  for (const auto& msg : this->prefixreturned_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.PrefixAndErrcodeReturned prefixanderrcodereturned = 3;
  total_size += 1UL * this->_internal_prefixanderrcodereturned_size();
  for (const auto& msg : this->prefixanderrcodereturned_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoutingRule::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.RoutingRule)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingRule* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoutingRule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.RoutingRule)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.RoutingRule)
    MergeFrom(*source);
  }
}

void RoutingRule::MergeFrom(const RoutingRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.RoutingRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errorcodereturned_.MergeFrom(from.errorcodereturned_);
  prefixreturned_.MergeFrom(from.prefixreturned_);
  prefixanderrcodereturned_.MergeFrom(from.prefixanderrcodereturned_);
}

void RoutingRule::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.RoutingRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingRule::CopyFrom(const RoutingRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.RoutingRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingRule::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(errorcodereturned_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(prefixreturned_)) return false;
  return true;
}

void RoutingRule::InternalSwap(RoutingRule* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  errorcodereturned_.InternalSwap(&other->errorcodereturned_);
  prefixreturned_.InternalSwap(&other->prefixreturned_);
  prefixanderrcodereturned_.InternalSwap(&other->prefixanderrcodereturned_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoutingRule::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WebsiteInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<WebsiteInfo>()._has_bits_);
  static void set_has_indexdocument(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_protocol(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_errordocument(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ClientCos::RoutingRule& routingrule(const WebsiteInfo* msg);
  static void set_has_routingrule(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_hostname(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::ClientCos::RoutingRule&
WebsiteInfo::_Internal::routingrule(const WebsiteInfo* msg) {
  return *msg->routingrule_;
}
WebsiteInfo::WebsiteInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.WebsiteInfo)
}
WebsiteInfo::WebsiteInfo(const WebsiteInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  indexdocument_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_indexdocument()) {
    indexdocument_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_indexdocument(), 
      GetArena());
  }
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_protocol()) {
    protocol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_protocol(), 
      GetArena());
  }
  errordocument_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_errordocument()) {
    errordocument_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errordocument(), 
      GetArena());
  }
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_hostname()) {
    hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostname(), 
      GetArena());
  }
  if (from._internal_has_routingrule()) {
    routingrule_ = new ::ClientCos::RoutingRule(*from.routingrule_);
  } else {
    routingrule_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.WebsiteInfo)
}

void WebsiteInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WebsiteInfo_cosv4_5fclient_2eproto.base);
  indexdocument_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errordocument_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  routingrule_ = nullptr;
}

WebsiteInfo::~WebsiteInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.WebsiteInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WebsiteInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  indexdocument_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  protocol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  errordocument_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routingrule_;
}

void WebsiteInfo::ArenaDtor(void* object) {
  WebsiteInfo* _this = reinterpret_cast< WebsiteInfo* >(object);
  (void)_this;
}
void WebsiteInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WebsiteInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WebsiteInfo& WebsiteInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WebsiteInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void WebsiteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.WebsiteInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      indexdocument_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      protocol_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      errordocument_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      hostname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(routingrule_ != nullptr);
      routingrule_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WebsiteInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes indexdocument = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_indexdocument();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes protocol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_protocol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes errordocument = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_errordocument();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.RoutingRule routingrule = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_routingrule(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes hostname = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_hostname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WebsiteInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.WebsiteInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes indexdocument = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_indexdocument(), target);
  }

  // optional bytes protocol = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_protocol(), target);
  }

  // optional bytes errordocument = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_errordocument(), target);
  }

  // optional .ClientCos.RoutingRule routingrule = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::routingrule(this), target, stream);
  }

  // optional bytes hostname = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_hostname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.WebsiteInfo)
  return target;
}

size_t WebsiteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.WebsiteInfo)
  size_t total_size = 0;

  // required bytes indexdocument = 1;
  if (_internal_has_indexdocument()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_indexdocument());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional bytes protocol = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_protocol());
    }

    // optional bytes errordocument = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_errordocument());
    }

    // optional bytes hostname = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_hostname());
    }

    // optional .ClientCos.RoutingRule routingrule = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *routingrule_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebsiteInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.WebsiteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WebsiteInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WebsiteInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.WebsiteInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.WebsiteInfo)
    MergeFrom(*source);
  }
}

void WebsiteInfo::MergeFrom(const WebsiteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.WebsiteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_indexdocument(from._internal_indexdocument());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_protocol(from._internal_protocol());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_errordocument(from._internal_errordocument());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_hostname(from._internal_hostname());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_routingrule()->::ClientCos::RoutingRule::MergeFrom(from._internal_routingrule());
    }
  }
}

void WebsiteInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.WebsiteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebsiteInfo::CopyFrom(const WebsiteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.WebsiteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebsiteInfo::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_routingrule()) {
    if (!routingrule_->IsInitialized()) return false;
  }
  return true;
}

void WebsiteInfo::InternalSwap(WebsiteInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  indexdocument_.Swap(&other->indexdocument_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  protocol_.Swap(&other->protocol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  errordocument_.Swap(&other->errordocument_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(routingrule_, other->routingrule_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WebsiteInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketWebsiteInfoReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBucketWebsiteInfoReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_setflag(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ClientCos::WebsiteInfo& websiteinfo(const SetBucketWebsiteInfoReq* msg);
  static void set_has_websiteinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000005) ^ 0x00000005) != 0;
  }
};

const ::ClientCos::WebsiteInfo&
SetBucketWebsiteInfoReq::_Internal::websiteinfo(const SetBucketWebsiteInfoReq* msg) {
  return *msg->websiteinfo_;
}
SetBucketWebsiteInfoReq::SetBucketWebsiteInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketWebsiteInfoReq)
}
SetBucketWebsiteInfoReq::SetBucketWebsiteInfoReq(const SetBucketWebsiteInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  if (from._internal_has_websiteinfo()) {
    websiteinfo_ = new ::ClientCos::WebsiteInfo(*from.websiteinfo_);
  } else {
    websiteinfo_ = nullptr;
  }
  setflag_ = from.setflag_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketWebsiteInfoReq)
}

void SetBucketWebsiteInfoReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&websiteinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&setflag_) -
      reinterpret_cast<char*>(&websiteinfo_)) + sizeof(setflag_));
}

SetBucketWebsiteInfoReq::~SetBucketWebsiteInfoReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketWebsiteInfoReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketWebsiteInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete websiteinfo_;
}

void SetBucketWebsiteInfoReq::ArenaDtor(void* object) {
  SetBucketWebsiteInfoReq* _this = reinterpret_cast< SetBucketWebsiteInfoReq* >(object);
  (void)_this;
}
void SetBucketWebsiteInfoReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketWebsiteInfoReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketWebsiteInfoReq& SetBucketWebsiteInfoReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketWebsiteInfoReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketWebsiteInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketWebsiteInfoReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(websiteinfo_ != nullptr);
      websiteinfo_->Clear();
    }
  }
  setflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketWebsiteInfoReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 setflag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_setflag(&has_bits);
          setflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.WebsiteInfo websiteinfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_websiteinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketWebsiteInfoReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketWebsiteInfoReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required uint32 setflag = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_setflag(), target);
  }

  // optional .ClientCos.WebsiteInfo websiteinfo = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::websiteinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketWebsiteInfoReq)
  return target;
}

size_t SetBucketWebsiteInfoReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.SetBucketWebsiteInfoReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_setflag()) {
    // required uint32 setflag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_setflag());
  }

  return total_size;
}
size_t SetBucketWebsiteInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketWebsiteInfoReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required uint32 setflag = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_setflag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.WebsiteInfo websiteinfo = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *websiteinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketWebsiteInfoReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketWebsiteInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketWebsiteInfoReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketWebsiteInfoReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketWebsiteInfoReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketWebsiteInfoReq)
    MergeFrom(*source);
  }
}

void SetBucketWebsiteInfoReq::MergeFrom(const SetBucketWebsiteInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketWebsiteInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_websiteinfo()->::ClientCos::WebsiteInfo::MergeFrom(from._internal_websiteinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      setflag_ = from.setflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetBucketWebsiteInfoReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketWebsiteInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketWebsiteInfoReq::CopyFrom(const SetBucketWebsiteInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketWebsiteInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketWebsiteInfoReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_websiteinfo()) {
    if (!websiteinfo_->IsInitialized()) return false;
  }
  return true;
}

void SetBucketWebsiteInfoReq::InternalSwap(SetBucketWebsiteInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetBucketWebsiteInfoReq, setflag_)
      + sizeof(SetBucketWebsiteInfoReq::setflag_)
      - PROTOBUF_FIELD_OFFSET(SetBucketWebsiteInfoReq, websiteinfo_)>(
          reinterpret_cast<char*>(&websiteinfo_),
          reinterpret_cast<char*>(&other->websiteinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketWebsiteInfoReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketWebsiteInfoRsp::_Internal {
 public:
};

SetBucketWebsiteInfoRsp::SetBucketWebsiteInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketWebsiteInfoRsp)
}
SetBucketWebsiteInfoRsp::SetBucketWebsiteInfoRsp(const SetBucketWebsiteInfoRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketWebsiteInfoRsp)
}

void SetBucketWebsiteInfoRsp::SharedCtor() {
}

SetBucketWebsiteInfoRsp::~SetBucketWebsiteInfoRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketWebsiteInfoRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketWebsiteInfoRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetBucketWebsiteInfoRsp::ArenaDtor(void* object) {
  SetBucketWebsiteInfoRsp* _this = reinterpret_cast< SetBucketWebsiteInfoRsp* >(object);
  (void)_this;
}
void SetBucketWebsiteInfoRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketWebsiteInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketWebsiteInfoRsp& SetBucketWebsiteInfoRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketWebsiteInfoRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketWebsiteInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketWebsiteInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketWebsiteInfoRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketWebsiteInfoRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketWebsiteInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketWebsiteInfoRsp)
  return target;
}

size_t SetBucketWebsiteInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketWebsiteInfoRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketWebsiteInfoRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketWebsiteInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketWebsiteInfoRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketWebsiteInfoRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketWebsiteInfoRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketWebsiteInfoRsp)
    MergeFrom(*source);
  }
}

void SetBucketWebsiteInfoRsp::MergeFrom(const SetBucketWebsiteInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketWebsiteInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetBucketWebsiteInfoRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketWebsiteInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketWebsiteInfoRsp::CopyFrom(const SetBucketWebsiteInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketWebsiteInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketWebsiteInfoRsp::IsInitialized() const {
  return true;
}

void SetBucketWebsiteInfoRsp::InternalSwap(SetBucketWebsiteInfoRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketWebsiteInfoRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetCamAttrReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetCamAttrReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_camauth(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

SetCamAttrReq::SetCamAttrReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetCamAttrReq)
}
SetCamAttrReq::SetCamAttrReq(const SetCamAttrReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  camauth_ = from.camauth_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetCamAttrReq)
}

void SetCamAttrReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetCamAttrReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  camauth_ = 0;
}

SetCamAttrReq::~SetCamAttrReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetCamAttrReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetCamAttrReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetCamAttrReq::ArenaDtor(void* object) {
  SetCamAttrReq* _this = reinterpret_cast< SetCamAttrReq* >(object);
  (void)_this;
}
void SetCamAttrReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetCamAttrReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCamAttrReq& SetCamAttrReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCamAttrReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetCamAttrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetCamAttrReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  camauth_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCamAttrReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ClientCos.CamAuth camauth = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CamAuth_IsValid(val))) {
            _internal_set_camauth(static_cast<::ClientCos::CamAuth>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCamAttrReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetCamAttrReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // required .ClientCos.CamAuth camauth = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_camauth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetCamAttrReq)
  return target;
}

size_t SetCamAttrReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.SetCamAttrReq)
  size_t total_size = 0;

  if (_internal_has_path()) {
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  if (_internal_has_camauth()) {
    // required .ClientCos.CamAuth camauth = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_camauth());
  }

  return total_size;
}
size_t SetCamAttrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetCamAttrReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes path = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());

    // required .ClientCos.CamAuth camauth = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_camauth());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCamAttrReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetCamAttrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCamAttrReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCamAttrReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetCamAttrReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetCamAttrReq)
    MergeFrom(*source);
  }
}

void SetCamAttrReq::MergeFrom(const SetCamAttrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetCamAttrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      camauth_ = from.camauth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetCamAttrReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetCamAttrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCamAttrReq::CopyFrom(const SetCamAttrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetCamAttrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCamAttrReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SetCamAttrReq::InternalSwap(SetCamAttrReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(camauth_, other->camauth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCamAttrReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetCamAttrRsp::_Internal {
 public:
};

SetCamAttrRsp::SetCamAttrRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetCamAttrRsp)
}
SetCamAttrRsp::SetCamAttrRsp(const SetCamAttrRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetCamAttrRsp)
}

void SetCamAttrRsp::SharedCtor() {
}

SetCamAttrRsp::~SetCamAttrRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetCamAttrRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetCamAttrRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetCamAttrRsp::ArenaDtor(void* object) {
  SetCamAttrRsp* _this = reinterpret_cast< SetCamAttrRsp* >(object);
  (void)_this;
}
void SetCamAttrRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetCamAttrRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCamAttrRsp& SetCamAttrRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCamAttrRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetCamAttrRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetCamAttrRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCamAttrRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCamAttrRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetCamAttrRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetCamAttrRsp)
  return target;
}

size_t SetCamAttrRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetCamAttrRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCamAttrRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetCamAttrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCamAttrRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCamAttrRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetCamAttrRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetCamAttrRsp)
    MergeFrom(*source);
  }
}

void SetCamAttrRsp::MergeFrom(const SetCamAttrRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetCamAttrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetCamAttrRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetCamAttrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCamAttrRsp::CopyFrom(const SetCamAttrRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetCamAttrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCamAttrRsp::IsInitialized() const {
  return true;
}

void SetCamAttrRsp::InternalSwap(SetCamAttrRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCamAttrRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketCamAuthQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketCamAuthQueryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

BucketCamAuthQueryReq::BucketCamAuthQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketCamAuthQueryReq)
}
BucketCamAuthQueryReq::BucketCamAuthQueryReq(const BucketCamAuthQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketCamAuthQueryReq)
}

void BucketCamAuthQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BucketCamAuthQueryReq::~BucketCamAuthQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketCamAuthQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketCamAuthQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BucketCamAuthQueryReq::ArenaDtor(void* object) {
  BucketCamAuthQueryReq* _this = reinterpret_cast< BucketCamAuthQueryReq* >(object);
  (void)_this;
}
void BucketCamAuthQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketCamAuthQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketCamAuthQueryReq& BucketCamAuthQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketCamAuthQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketCamAuthQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketCamAuthQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketCamAuthQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketCamAuthQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketCamAuthQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketCamAuthQueryReq)
  return target;
}

size_t BucketCamAuthQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketCamAuthQueryReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketCamAuthQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketCamAuthQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketCamAuthQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketCamAuthQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketCamAuthQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketCamAuthQueryReq)
    MergeFrom(*source);
  }
}

void BucketCamAuthQueryReq::MergeFrom(const BucketCamAuthQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketCamAuthQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_path()) {
    _internal_set_path(from._internal_path());
  }
}

void BucketCamAuthQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketCamAuthQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketCamAuthQueryReq::CopyFrom(const BucketCamAuthQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketCamAuthQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketCamAuthQueryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void BucketCamAuthQueryReq::InternalSwap(BucketCamAuthQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketCamAuthQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BucketCamAuthQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<BucketCamAuthQueryRsp>()._has_bits_);
  static void set_has_iscamauth(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

BucketCamAuthQueryRsp::BucketCamAuthQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.BucketCamAuthQueryRsp)
}
BucketCamAuthQueryRsp::BucketCamAuthQueryRsp(const BucketCamAuthQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  iscamauth_ = from.iscamauth_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.BucketCamAuthQueryRsp)
}

void BucketCamAuthQueryRsp::SharedCtor() {
  iscamauth_ = false;
}

BucketCamAuthQueryRsp::~BucketCamAuthQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.BucketCamAuthQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BucketCamAuthQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BucketCamAuthQueryRsp::ArenaDtor(void* object) {
  BucketCamAuthQueryRsp* _this = reinterpret_cast< BucketCamAuthQueryRsp* >(object);
  (void)_this;
}
void BucketCamAuthQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BucketCamAuthQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BucketCamAuthQueryRsp& BucketCamAuthQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BucketCamAuthQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void BucketCamAuthQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.BucketCamAuthQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iscamauth_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BucketCamAuthQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bool iscamauth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_iscamauth(&has_bits);
          iscamauth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BucketCamAuthQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.BucketCamAuthQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool iscamauth = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_iscamauth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.BucketCamAuthQueryRsp)
  return target;
}

size_t BucketCamAuthQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.BucketCamAuthQueryRsp)
  size_t total_size = 0;

  // required bool iscamauth = 1;
  if (_internal_has_iscamauth()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BucketCamAuthQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.BucketCamAuthQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BucketCamAuthQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BucketCamAuthQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.BucketCamAuthQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.BucketCamAuthQueryRsp)
    MergeFrom(*source);
  }
}

void BucketCamAuthQueryRsp::MergeFrom(const BucketCamAuthQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.BucketCamAuthQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_iscamauth()) {
    _internal_set_iscamauth(from._internal_iscamauth());
  }
}

void BucketCamAuthQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.BucketCamAuthQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketCamAuthQueryRsp::CopyFrom(const BucketCamAuthQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.BucketCamAuthQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketCamAuthQueryRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void BucketCamAuthQueryRsp::InternalSwap(BucketCamAuthQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(iscamauth_, other->iscamauth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BucketCamAuthQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CamAtuhItem::_Internal {
 public:
  using HasBits = decltype(std::declval<CamAtuhItem>()._has_bits_);
  static void set_has_bucketpath(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_iscamauth(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CamAtuhItem::CamAtuhItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CamAtuhItem)
}
CamAtuhItem::CamAtuhItem(const CamAtuhItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucketpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_bucketpath()) {
    bucketpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bucketpath(), 
      GetArena());
  }
  iscamauth_ = from.iscamauth_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.CamAtuhItem)
}

void CamAtuhItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CamAtuhItem_cosv4_5fclient_2eproto.base);
  bucketpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iscamauth_ = false;
}

CamAtuhItem::~CamAtuhItem() {
  // @@protoc_insertion_point(destructor:ClientCos.CamAtuhItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CamAtuhItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bucketpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CamAtuhItem::ArenaDtor(void* object) {
  CamAtuhItem* _this = reinterpret_cast< CamAtuhItem* >(object);
  (void)_this;
}
void CamAtuhItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CamAtuhItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CamAtuhItem& CamAtuhItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CamAtuhItem_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CamAtuhItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CamAtuhItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    bucketpath_.ClearNonDefaultToEmpty();
  }
  iscamauth_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CamAtuhItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes bucketpath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bucketpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool iscamauth = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_iscamauth(&has_bits);
          iscamauth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CamAtuhItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CamAtuhItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes bucketpath = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_bucketpath(), target);
  }

  // required bool iscamauth = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_iscamauth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CamAtuhItem)
  return target;
}

size_t CamAtuhItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.CamAtuhItem)
  size_t total_size = 0;

  if (_internal_has_bucketpath()) {
    // required bytes bucketpath = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bucketpath());
  }

  if (_internal_has_iscamauth()) {
    // required bool iscamauth = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CamAtuhItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CamAtuhItem)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes bucketpath = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bucketpath());

    // required bool iscamauth = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CamAtuhItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CamAtuhItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CamAtuhItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CamAtuhItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CamAtuhItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CamAtuhItem)
    MergeFrom(*source);
  }
}

void CamAtuhItem::MergeFrom(const CamAtuhItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CamAtuhItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_bucketpath(from._internal_bucketpath());
    }
    if (cached_has_bits & 0x00000002u) {
      iscamauth_ = from.iscamauth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CamAtuhItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CamAtuhItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CamAtuhItem::CopyFrom(const CamAtuhItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CamAtuhItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CamAtuhItem::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CamAtuhItem::InternalSwap(CamAtuhItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  bucketpath_.Swap(&other->bucketpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(iscamauth_, other->iscamauth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CamAtuhItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppCamAuthQueryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<AppCamAuthQueryReq>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_next_bucket(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

AppCamAuthQueryReq::AppCamAuthQueryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppCamAuthQueryReq)
}
AppCamAuthQueryReq::AppCamAuthQueryReq(const AppCamAuthQueryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_appid()) {
    appid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appid(), 
      GetArena());
  }
  next_bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_bucket()) {
    next_bucket_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_bucket(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppCamAuthQueryReq)
}

void AppCamAuthQueryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto.base);
  appid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  next_bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AppCamAuthQueryReq::~AppCamAuthQueryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.AppCamAuthQueryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppCamAuthQueryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  appid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  next_bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppCamAuthQueryReq::ArenaDtor(void* object) {
  AppCamAuthQueryReq* _this = reinterpret_cast< AppCamAuthQueryReq* >(object);
  (void)_this;
}
void AppCamAuthQueryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppCamAuthQueryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppCamAuthQueryReq& AppCamAuthQueryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppCamAuthQueryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppCamAuthQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppCamAuthQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      appid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      next_bucket_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppCamAuthQueryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_appid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes next_bucket = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppCamAuthQueryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppCamAuthQueryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_appid(), target);
  }

  // required bytes next_bucket = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_next_bucket(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppCamAuthQueryReq)
  return target;
}

size_t AppCamAuthQueryReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.AppCamAuthQueryReq)
  size_t total_size = 0;

  if (_internal_has_appid()) {
    // required bytes appid = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_appid());
  }

  if (_internal_has_next_bucket()) {
    // required bytes next_bucket = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_next_bucket());
  }

  return total_size;
}
size_t AppCamAuthQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppCamAuthQueryReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes appid = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_appid());

    // required bytes next_bucket = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_next_bucket());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppCamAuthQueryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppCamAuthQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCamAuthQueryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppCamAuthQueryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppCamAuthQueryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppCamAuthQueryReq)
    MergeFrom(*source);
  }
}

void AppCamAuthQueryReq::MergeFrom(const AppCamAuthQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppCamAuthQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_appid(from._internal_appid());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_next_bucket(from._internal_next_bucket());
    }
  }
}

void AppCamAuthQueryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppCamAuthQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCamAuthQueryReq::CopyFrom(const AppCamAuthQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppCamAuthQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCamAuthQueryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void AppCamAuthQueryReq::InternalSwap(AppCamAuthQueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  appid_.Swap(&other->appid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  next_bucket_.Swap(&other->next_bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AppCamAuthQueryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppCamAuthQueryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<AppCamAuthQueryRsp>()._has_bits_);
  static void set_has_camauth(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_next_bucket(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_isover(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

AppCamAuthQueryRsp::AppCamAuthQueryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AppCamAuthQueryRsp)
}
AppCamAuthQueryRsp::AppCamAuthQueryRsp(const AppCamAuthQueryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_next_bucket()) {
    next_bucket_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_bucket(), 
      GetArena());
  }
  ::memcpy(&camauth_, &from.camauth_,
    static_cast<size_t>(reinterpret_cast<char*>(&isover_) -
    reinterpret_cast<char*>(&camauth_)) + sizeof(isover_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.AppCamAuthQueryRsp)
}

void AppCamAuthQueryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto.base);
  next_bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&camauth_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&isover_) -
      reinterpret_cast<char*>(&camauth_)) + sizeof(isover_));
}

AppCamAuthQueryRsp::~AppCamAuthQueryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.AppCamAuthQueryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppCamAuthQueryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppCamAuthQueryRsp::ArenaDtor(void* object) {
  AppCamAuthQueryRsp* _this = reinterpret_cast< AppCamAuthQueryRsp* >(object);
  (void)_this;
}
void AppCamAuthQueryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppCamAuthQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppCamAuthQueryRsp& AppCamAuthQueryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppCamAuthQueryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AppCamAuthQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AppCamAuthQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    next_bucket_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&camauth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isover_) -
        reinterpret_cast<char*>(&camauth_)) + sizeof(isover_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppCamAuthQueryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .ClientCos.CamAuth camauth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::CamAuth_IsValid(val))) {
            _internal_set_camauth(static_cast<::ClientCos::CamAuth>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required bytes next_bucket = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.CamAtuhItem item = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // required bool isover = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_isover(&has_bits);
          isover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppCamAuthQueryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AppCamAuthQueryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ClientCos.CamAuth camauth = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_camauth(), target);
  }

  // required bytes next_bucket = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_next_bucket(), target);
  }

  // repeated .ClientCos.CamAtuhItem item = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_item(i), target, stream);
  }

  // required bool isover = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_isover(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AppCamAuthQueryRsp)
  return target;
}

size_t AppCamAuthQueryRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientCos.AppCamAuthQueryRsp)
  size_t total_size = 0;

  if (_internal_has_next_bucket()) {
    // required bytes next_bucket = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_next_bucket());
  }

  if (_internal_has_camauth()) {
    // required .ClientCos.CamAuth camauth = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_camauth());
  }

  if (_internal_has_isover()) {
    // required bool isover = 4 [default = false];
    total_size += 1 + 1;
  }

  return total_size;
}
size_t AppCamAuthQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AppCamAuthQueryRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes next_bucket = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_next_bucket());

    // required .ClientCos.CamAuth camauth = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_camauth());

    // required bool isover = 4 [default = false];
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.CamAtuhItem item = 3;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppCamAuthQueryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AppCamAuthQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCamAuthQueryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppCamAuthQueryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AppCamAuthQueryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AppCamAuthQueryRsp)
    MergeFrom(*source);
  }
}

void AppCamAuthQueryRsp::MergeFrom(const AppCamAuthQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AppCamAuthQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_next_bucket(from._internal_next_bucket());
    }
    if (cached_has_bits & 0x00000002u) {
      camauth_ = from.camauth_;
    }
    if (cached_has_bits & 0x00000004u) {
      isover_ = from.isover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppCamAuthQueryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AppCamAuthQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCamAuthQueryRsp::CopyFrom(const AppCamAuthQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AppCamAuthQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCamAuthQueryRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(item_)) return false;
  return true;
}

void AppCamAuthQueryRsp::InternalSwap(AppCamAuthQueryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_.InternalSwap(&other->item_);
  next_bucket_.Swap(&other->next_bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppCamAuthQueryRsp, isover_)
      + sizeof(AppCamAuthQueryRsp::isover_)
      - PROTOBUF_FIELD_OFFSET(AppCamAuthQueryRsp, camauth_)>(
          reinterpret_cast<char*>(&camauth_),
          reinterpret_cast<char*>(&other->camauth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppCamAuthQueryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CgiArgs::_Internal {
 public:
  using HasBits = decltype(std::declval<CgiArgs>()._has_bits_);
  static const ::ClientCos::AuthInfo& auth_info(const CgiArgs* msg);
  static void set_has_auth_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ClientCos::OwnerInfo& owner(const CgiArgs* msg);
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ClientCos::AuthInfo&
CgiArgs::_Internal::auth_info(const CgiArgs* msg) {
  return *msg->auth_info_;
}
const ::ClientCos::OwnerInfo&
CgiArgs::_Internal::owner(const CgiArgs* msg) {
  return *msg->owner_;
}
CgiArgs::CgiArgs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  acls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CgiArgs)
}
CgiArgs::CgiArgs(const CgiArgs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      acls_(from.acls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth_info()) {
    auth_info_ = new ::ClientCos::AuthInfo(*from.auth_info_);
  } else {
    auth_info_ = nullptr;
  }
  if (from._internal_has_owner()) {
    owner_ = new ::ClientCos::OwnerInfo(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.CgiArgs)
}

void CgiArgs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CgiArgs_cosv4_5fclient_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&auth_info_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&owner_) -
      reinterpret_cast<char*>(&auth_info_)) + sizeof(owner_));
}

CgiArgs::~CgiArgs() {
  // @@protoc_insertion_point(destructor:ClientCos.CgiArgs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CgiArgs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete auth_info_;
  if (this != internal_default_instance()) delete owner_;
}

void CgiArgs::ArenaDtor(void* object) {
  CgiArgs* _this = reinterpret_cast< CgiArgs* >(object);
  (void)_this;
}
void CgiArgs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CgiArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CgiArgs& CgiArgs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CgiArgs_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CgiArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CgiArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acls_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(auth_info_ != nullptr);
      auth_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(owner_ != nullptr);
      owner_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CgiArgs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.AuthInfo auth_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.AclInfo acls = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_acls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CgiArgs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CgiArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.AuthInfo auth_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::auth_info(this), target, stream);
  }

  // optional .ClientCos.OwnerInfo owner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::owner(this), target, stream);
  }

  // repeated .ClientCos.AclInfo acls = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acls_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_acls(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CgiArgs)
  return target;
}

size_t CgiArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CgiArgs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.AclInfo acls = 3;
  total_size += 1UL * this->_internal_acls_size();
  for (const auto& msg : this->acls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ClientCos.AuthInfo auth_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *auth_info_);
    }

    // optional .ClientCos.OwnerInfo owner = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *owner_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CgiArgs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CgiArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const CgiArgs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CgiArgs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CgiArgs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CgiArgs)
    MergeFrom(*source);
  }
}

void CgiArgs::MergeFrom(const CgiArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CgiArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acls_.MergeFrom(from.acls_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_auth_info()->::ClientCos::AuthInfo::MergeFrom(from._internal_auth_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_owner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_owner());
    }
  }
}

void CgiArgs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CgiArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CgiArgs::CopyFrom(const CgiArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CgiArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CgiArgs::IsInitialized() const {
  return true;
}

void CgiArgs::InternalSwap(CgiArgs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  acls_.InternalSwap(&other->acls_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CgiArgs, owner_)
      + sizeof(CgiArgs::owner_)
      - PROTOBUF_FIELD_OFFSET(CgiArgs, auth_info_)>(
          reinterpret_cast<char*>(&auth_info_),
          reinterpret_cast<char*>(&other->auth_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CgiArgs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CgiParams::_Internal {
 public:
  using HasBits = decltype(std::declval<CgiParams>()._has_bits_);
  static const ::ClientCos::GetObjectExtend& get_object_extend(const CgiParams* msg);
  static void set_has_get_object_extend(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ClientCos::CompleteMultiUploadExtend& complete_multi_upload_extend(const CgiParams* msg);
  static void set_has_complete_multi_upload_extend(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ClientCos::GetObjectExtend&
CgiParams::_Internal::get_object_extend(const CgiParams* msg) {
  return *msg->get_object_extend_;
}
const ::ClientCos::CompleteMultiUploadExtend&
CgiParams::_Internal::complete_multi_upload_extend(const CgiParams* msg) {
  return *msg->complete_multi_upload_extend_;
}
CgiParams::CgiParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CgiParams)
}
CgiParams::CgiParams(const CgiParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_get_object_extend()) {
    get_object_extend_ = new ::ClientCos::GetObjectExtend(*from.get_object_extend_);
  } else {
    get_object_extend_ = nullptr;
  }
  if (from._internal_has_complete_multi_upload_extend()) {
    complete_multi_upload_extend_ = new ::ClientCos::CompleteMultiUploadExtend(*from.complete_multi_upload_extend_);
  } else {
    complete_multi_upload_extend_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.CgiParams)
}

void CgiParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CgiParams_cosv4_5fclient_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&get_object_extend_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&complete_multi_upload_extend_) -
      reinterpret_cast<char*>(&get_object_extend_)) + sizeof(complete_multi_upload_extend_));
}

CgiParams::~CgiParams() {
  // @@protoc_insertion_point(destructor:ClientCos.CgiParams)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CgiParams::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete get_object_extend_;
  if (this != internal_default_instance()) delete complete_multi_upload_extend_;
}

void CgiParams::ArenaDtor(void* object) {
  CgiParams* _this = reinterpret_cast< CgiParams* >(object);
  (void)_this;
}
void CgiParams::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CgiParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CgiParams& CgiParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CgiParams_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CgiParams::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CgiParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(get_object_extend_ != nullptr);
      get_object_extend_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(complete_multi_upload_extend_ != nullptr);
      complete_multi_upload_extend_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CgiParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.GetObjectExtend get_object_extend = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_object_extend(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.CompleteMultiUploadExtend complete_multi_upload_extend = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_complete_multi_upload_extend(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CgiParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CgiParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.GetObjectExtend get_object_extend = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::get_object_extend(this), target, stream);
  }

  // optional .ClientCos.CompleteMultiUploadExtend complete_multi_upload_extend = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::complete_multi_upload_extend(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CgiParams)
  return target;
}

size_t CgiParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CgiParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ClientCos.GetObjectExtend get_object_extend = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *get_object_extend_);
    }

    // optional .ClientCos.CompleteMultiUploadExtend complete_multi_upload_extend = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *complete_multi_upload_extend_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CgiParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CgiParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CgiParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CgiParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CgiParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CgiParams)
    MergeFrom(*source);
  }
}

void CgiParams::MergeFrom(const CgiParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CgiParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_get_object_extend()->::ClientCos::GetObjectExtend::MergeFrom(from._internal_get_object_extend());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_complete_multi_upload_extend()->::ClientCos::CompleteMultiUploadExtend::MergeFrom(from._internal_complete_multi_upload_extend());
    }
  }
}

void CgiParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CgiParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CgiParams::CopyFrom(const CgiParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CgiParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CgiParams::IsInitialized() const {
  return true;
}

void CgiParams::InternalSwap(CgiParams* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CgiParams, complete_multi_upload_extend_)
      + sizeof(CgiParams::complete_multi_upload_extend_)
      - PROTOBUF_FIELD_OFFSET(CgiParams, get_object_extend_)>(
          reinterpret_cast<char*>(&get_object_extend_),
          reinterpret_cast<char*>(&other->get_object_extend_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CgiParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetObjectExtend::_Internal {
 public:
  using HasBits = decltype(std::declval<GetObjectExtend>()._has_bits_);
  static void set_has_check_refer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetObjectExtend::GetObjectExtend(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetObjectExtend)
}
GetObjectExtend::GetObjectExtend(const GetObjectExtend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  check_refer_ = from.check_refer_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetObjectExtend)
}

void GetObjectExtend::SharedCtor() {
  check_refer_ = true;
}

GetObjectExtend::~GetObjectExtend() {
  // @@protoc_insertion_point(destructor:ClientCos.GetObjectExtend)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetObjectExtend::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetObjectExtend::ArenaDtor(void* object) {
  GetObjectExtend* _this = reinterpret_cast< GetObjectExtend* >(object);
  (void)_this;
}
void GetObjectExtend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetObjectExtend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectExtend& GetObjectExtend::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectExtend_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetObjectExtend::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetObjectExtend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  check_refer_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetObjectExtend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool check_refer = 1 [default = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_check_refer(&has_bits);
          check_refer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectExtend::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetObjectExtend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool check_refer = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_check_refer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetObjectExtend)
  return target;
}

size_t GetObjectExtend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetObjectExtend)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool check_refer = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectExtend::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetObjectExtend)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectExtend* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectExtend>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetObjectExtend)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetObjectExtend)
    MergeFrom(*source);
  }
}

void GetObjectExtend::MergeFrom(const GetObjectExtend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetObjectExtend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_check_refer()) {
    _internal_set_check_refer(from._internal_check_refer());
  }
}

void GetObjectExtend::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetObjectExtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectExtend::CopyFrom(const GetObjectExtend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetObjectExtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectExtend::IsInitialized() const {
  return true;
}

void GetObjectExtend::InternalSwap(GetObjectExtend* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(check_refer_, other->check_refer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectExtend::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CompleteMultiUploadExtend::_Internal {
 public:
  using HasBits = decltype(std::declval<CompleteMultiUploadExtend>()._has_bits_);
  static void set_has_min_part_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CompleteMultiUploadExtend::CompleteMultiUploadExtend(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CompleteMultiUploadExtend)
}
CompleteMultiUploadExtend::CompleteMultiUploadExtend(const CompleteMultiUploadExtend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  min_part_size_ = from.min_part_size_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.CompleteMultiUploadExtend)
}

void CompleteMultiUploadExtend::SharedCtor() {
  min_part_size_ = 0;
}

CompleteMultiUploadExtend::~CompleteMultiUploadExtend() {
  // @@protoc_insertion_point(destructor:ClientCos.CompleteMultiUploadExtend)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompleteMultiUploadExtend::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CompleteMultiUploadExtend::ArenaDtor(void* object) {
  CompleteMultiUploadExtend* _this = reinterpret_cast< CompleteMultiUploadExtend* >(object);
  (void)_this;
}
void CompleteMultiUploadExtend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompleteMultiUploadExtend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompleteMultiUploadExtend& CompleteMultiUploadExtend::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompleteMultiUploadExtend_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CompleteMultiUploadExtend::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CompleteMultiUploadExtend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  min_part_size_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompleteMultiUploadExtend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 min_part_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_min_part_size(&has_bits);
          min_part_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompleteMultiUploadExtend::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CompleteMultiUploadExtend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 min_part_size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_min_part_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CompleteMultiUploadExtend)
  return target;
}

size_t CompleteMultiUploadExtend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CompleteMultiUploadExtend)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 min_part_size = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_min_part_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteMultiUploadExtend::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CompleteMultiUploadExtend)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteMultiUploadExtend* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompleteMultiUploadExtend>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CompleteMultiUploadExtend)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CompleteMultiUploadExtend)
    MergeFrom(*source);
  }
}

void CompleteMultiUploadExtend::MergeFrom(const CompleteMultiUploadExtend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CompleteMultiUploadExtend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_min_part_size()) {
    _internal_set_min_part_size(from._internal_min_part_size());
  }
}

void CompleteMultiUploadExtend::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CompleteMultiUploadExtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteMultiUploadExtend::CopyFrom(const CompleteMultiUploadExtend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CompleteMultiUploadExtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteMultiUploadExtend::IsInitialized() const {
  return true;
}

void CompleteMultiUploadExtend::InternalSwap(CompleteMultiUploadExtend* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(min_part_size_, other->min_part_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompleteMultiUploadExtend::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TrsfArgs::_Internal {
 public:
  using HasBits = decltype(std::declval<TrsfArgs>()._has_bits_);
  static void set_has_src_ctime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_forbid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_auth(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

TrsfArgs::TrsfArgs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  customheader_plat_(arena),
  reservedattr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.TrsfArgs)
}
TrsfArgs::TrsfArgs(const TrsfArgs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      customheader_plat_(from.customheader_plat_),
      reservedattr_(from.reservedattr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&src_ctime_, &from.src_ctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_) -
    reinterpret_cast<char*>(&src_ctime_)) + sizeof(auth_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.TrsfArgs)
}

void TrsfArgs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrsfArgs_cosv4_5fclient_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&src_ctime_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&auth_) -
      reinterpret_cast<char*>(&src_ctime_)) + sizeof(auth_));
}

TrsfArgs::~TrsfArgs() {
  // @@protoc_insertion_point(destructor:ClientCos.TrsfArgs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TrsfArgs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TrsfArgs::ArenaDtor(void* object) {
  TrsfArgs* _this = reinterpret_cast< TrsfArgs* >(object);
  (void)_this;
}
void TrsfArgs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TrsfArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrsfArgs& TrsfArgs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrsfArgs_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void TrsfArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.TrsfArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customheader_plat_.Clear();
  reservedattr_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&src_ctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_) -
        reinterpret_cast<char*>(&src_ctime_)) + sizeof(auth_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrsfArgs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.CustomHeader customheader_plat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customheader_plat(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 src_ctime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_src_ctime(&has_bits);
          src_ctime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mtime = 3 [default = 0];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mtime(&has_bits);
          mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 forbid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_forbid(&has_bits);
          forbid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.ReservedAttr reservedattr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reservedattr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.Authority auth = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::Authority_IsValid(val))) {
            _internal_set_auth(static_cast<::ClientCos::Authority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrsfArgs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.TrsfArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.CustomHeader customheader_plat = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customheader_plat_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_customheader_plat(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 src_ctime = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_src_ctime(), target);
  }

  // optional uint32 mtime = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mtime(), target);
  }

  // optional uint32 forbid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_forbid(), target);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reservedattr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_reservedattr(i), target, stream);
  }

  // optional .ClientCos.Authority auth = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_auth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.TrsfArgs)
  return target;
}

size_t TrsfArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.TrsfArgs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.CustomHeader customheader_plat = 1;
  total_size += 1UL * this->_internal_customheader_plat_size();
  for (const auto& msg : this->customheader_plat_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ClientCos.ReservedAttr reservedattr = 5;
  total_size += 1UL * this->_internal_reservedattr_size();
  for (const auto& msg : this->reservedattr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 src_ctime = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_src_ctime());
    }

    // optional uint32 mtime = 3 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mtime());
    }

    // optional uint32 forbid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_forbid());
    }

    // optional .ClientCos.Authority auth = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_auth());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrsfArgs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.TrsfArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const TrsfArgs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrsfArgs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.TrsfArgs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.TrsfArgs)
    MergeFrom(*source);
  }
}

void TrsfArgs::MergeFrom(const TrsfArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.TrsfArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  customheader_plat_.MergeFrom(from.customheader_plat_);
  reservedattr_.MergeFrom(from.reservedattr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      src_ctime_ = from.src_ctime_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtime_ = from.mtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      forbid_ = from.forbid_;
    }
    if (cached_has_bits & 0x00000008u) {
      auth_ = from.auth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrsfArgs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.TrsfArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrsfArgs::CopyFrom(const TrsfArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.TrsfArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrsfArgs::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(customheader_plat_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(reservedattr_)) return false;
  return true;
}

void TrsfArgs::InternalSwap(TrsfArgs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  customheader_plat_.InternalSwap(&other->customheader_plat_);
  reservedattr_.InternalSwap(&other->reservedattr_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrsfArgs, auth_)
      + sizeof(TrsfArgs::auth_)
      - PROTOBUF_FIELD_OFFSET(TrsfArgs, src_ctime_)>(
          reinterpret_cast<char*>(&src_ctime_),
          reinterpret_cast<char*>(&other->src_ctime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrsfArgs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AclInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<AclInfo>()._has_bits_);
  static void set_has_uin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_perm(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AclInfo::AclInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AclInfo)
}
AclInfo::AclInfo(const AclInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uin()) {
    uin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uin(), 
      GetArena());
  }
  perm_ = from.perm_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.AclInfo)
}

void AclInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AclInfo_cosv4_5fclient_2eproto.base);
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  perm_ = 0;
}

AclInfo::~AclInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.AclInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AclInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AclInfo::ArenaDtor(void* object) {
  AclInfo* _this = reinterpret_cast< AclInfo* >(object);
  (void)_this;
}
void AclInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AclInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AclInfo& AclInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AclInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AclInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AclInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    uin_.ClearNonDefaultToEmpty();
  }
  perm_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AclInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes uin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 perm = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_perm(&has_bits);
          perm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AclInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AclInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes uin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_uin(), target);
  }

  // optional int32 perm = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_perm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AclInfo)
  return target;
}

size_t AclInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AclInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes uin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uin());
    }

    // optional int32 perm = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_perm());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AclInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AclInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AclInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AclInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AclInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AclInfo)
    MergeFrom(*source);
  }
}

void AclInfo::MergeFrom(const AclInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AclInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_uin(from._internal_uin());
    }
    if (cached_has_bits & 0x00000002u) {
      perm_ = from.perm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AclInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AclInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AclInfo::CopyFrom(const AclInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AclInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AclInfo::IsInitialized() const {
  return true;
}

void AclInfo::InternalSwap(AclInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  uin_.Swap(&other->uin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(perm_, other->perm_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AclInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AuthInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthInfo>()._has_bits_);
  static void set_has_requin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_contextpass(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_needacl(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

AuthInfo::AuthInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.AuthInfo)
}
AuthInfo::AuthInfo(const AuthInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_requin()) {
    requin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requin(), 
      GetArena());
  }
  ::memcpy(&contextpass_, &from.contextpass_,
    static_cast<size_t>(reinterpret_cast<char*>(&needacl_) -
    reinterpret_cast<char*>(&contextpass_)) + sizeof(needacl_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.AuthInfo)
}

void AuthInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthInfo_cosv4_5fclient_2eproto.base);
  requin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&contextpass_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&needacl_) -
      reinterpret_cast<char*>(&contextpass_)) + sizeof(needacl_));
}

AuthInfo::~AuthInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.AuthInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthInfo::ArenaDtor(void* object) {
  AuthInfo* _this = reinterpret_cast< AuthInfo* >(object);
  (void)_this;
}
void AuthInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthInfo& AuthInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void AuthInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.AuthInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    requin_.ClearNonDefaultToEmpty();
  }
  ::memset(&contextpass_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&needacl_) -
      reinterpret_cast<char*>(&contextpass_)) + sizeof(needacl_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes reqUin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool contextPass = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_contextpass(&has_bits);
          contextpass_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool needAcl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_needacl(&has_bits);
          needacl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.AuthInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes reqUin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_requin(), target);
  }

  // optional bool contextPass = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_contextpass(), target);
  }

  // optional bool needAcl = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_needacl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.AuthInfo)
  return target;
}

size_t AuthInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.AuthInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes reqUin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_requin());
    }

    // optional bool contextPass = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool needAcl = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.AuthInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.AuthInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.AuthInfo)
    MergeFrom(*source);
  }
}

void AuthInfo::MergeFrom(const AuthInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.AuthInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_requin(from._internal_requin());
    }
    if (cached_has_bits & 0x00000002u) {
      contextpass_ = from.contextpass_;
    }
    if (cached_has_bits & 0x00000004u) {
      needacl_ = from.needacl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.AuthInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthInfo::CopyFrom(const AuthInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.AuthInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthInfo::IsInitialized() const {
  return true;
}

void AuthInfo::InternalSwap(AuthInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  requin_.Swap(&other->requin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthInfo, needacl_)
      + sizeof(AuthInfo::needacl_)
      - PROTOBUF_FIELD_OFFSET(AuthInfo, contextpass_)>(
          reinterpret_cast<char*>(&contextpass_),
          reinterpret_cast<char*>(&other->contextpass_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OwnerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<OwnerInfo>()._has_bits_);
  static void set_has_uin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

OwnerInfo::OwnerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.OwnerInfo)
}
OwnerInfo::OwnerInfo(const OwnerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uin()) {
    uin_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uin(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.OwnerInfo)
}

void OwnerInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OwnerInfo_cosv4_5fclient_2eproto.base);
  uin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OwnerInfo::~OwnerInfo() {
  // @@protoc_insertion_point(destructor:ClientCos.OwnerInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OwnerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OwnerInfo::ArenaDtor(void* object) {
  OwnerInfo* _this = reinterpret_cast< OwnerInfo* >(object);
  (void)_this;
}
void OwnerInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OwnerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OwnerInfo& OwnerInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OwnerInfo_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void OwnerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.OwnerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    uin_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OwnerInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes uin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OwnerInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.OwnerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes uin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_uin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.OwnerInfo)
  return target;
}

size_t OwnerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.OwnerInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes uin = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OwnerInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.OwnerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OwnerInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OwnerInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.OwnerInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.OwnerInfo)
    MergeFrom(*source);
  }
}

void OwnerInfo::MergeFrom(const OwnerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.OwnerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_uin()) {
    _internal_set_uin(from._internal_uin());
  }
}

void OwnerInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.OwnerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OwnerInfo::CopyFrom(const OwnerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.OwnerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OwnerInfo::IsInitialized() const {
  return true;
}

void OwnerInfo::InternalSwap(OwnerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  uin_.Swap(&other->uin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OwnerInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckObjAclReq::_Internal {
 public:
  using HasBits = decltype(std::declval<CheckObjAclReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_perm(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CheckObjAclReq::CheckObjAclReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CheckObjAclReq)
}
CheckObjAclReq::CheckObjAclReq(const CheckObjAclReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  perm_ = from.perm_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.CheckObjAclReq)
}

void CheckObjAclReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckObjAclReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  perm_ = 0;
}

CheckObjAclReq::~CheckObjAclReq() {
  // @@protoc_insertion_point(destructor:ClientCos.CheckObjAclReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckObjAclReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CheckObjAclReq::ArenaDtor(void* object) {
  CheckObjAclReq* _this = reinterpret_cast< CheckObjAclReq* >(object);
  (void)_this;
}
void CheckObjAclReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckObjAclReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckObjAclReq& CheckObjAclReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckObjAclReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CheckObjAclReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CheckObjAclReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  perm_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckObjAclReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 perm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_perm(&has_bits);
          perm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckObjAclReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CheckObjAclReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // optional int32 perm = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_perm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CheckObjAclReq)
  return target;
}

size_t CheckObjAclReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CheckObjAclReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional bytes version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional int32 perm = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_perm());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckObjAclReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CheckObjAclReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckObjAclReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckObjAclReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CheckObjAclReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CheckObjAclReq)
    MergeFrom(*source);
  }
}

void CheckObjAclReq::MergeFrom(const CheckObjAclReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CheckObjAclReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      perm_ = from.perm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CheckObjAclReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CheckObjAclReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckObjAclReq::CopyFrom(const CheckObjAclReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CheckObjAclReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckObjAclReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void CheckObjAclReq::InternalSwap(CheckObjAclReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(perm_, other->perm_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckObjAclReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckObjAclRsp::_Internal {
 public:
};

CheckObjAclRsp::CheckObjAclRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.CheckObjAclRsp)
}
CheckObjAclRsp::CheckObjAclRsp(const CheckObjAclRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.CheckObjAclRsp)
}

void CheckObjAclRsp::SharedCtor() {
}

CheckObjAclRsp::~CheckObjAclRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.CheckObjAclRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckObjAclRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CheckObjAclRsp::ArenaDtor(void* object) {
  CheckObjAclRsp* _this = reinterpret_cast< CheckObjAclRsp* >(object);
  (void)_this;
}
void CheckObjAclRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckObjAclRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckObjAclRsp& CheckObjAclRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckObjAclRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void CheckObjAclRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.CheckObjAclRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckObjAclRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckObjAclRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.CheckObjAclRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.CheckObjAclRsp)
  return target;
}

size_t CheckObjAclRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.CheckObjAclRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckObjAclRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.CheckObjAclRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckObjAclRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckObjAclRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.CheckObjAclRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.CheckObjAclRsp)
    MergeFrom(*source);
  }
}

void CheckObjAclRsp::MergeFrom(const CheckObjAclRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.CheckObjAclRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CheckObjAclRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.CheckObjAclRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckObjAclRsp::CopyFrom(const CheckObjAclRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.CheckObjAclRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckObjAclRsp::IsInitialized() const {
  return true;
}

void CheckObjAclRsp::InternalSwap(CheckObjAclRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckObjAclRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetObjAclReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetObjAclReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SetObjAclReq::SetObjAclReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  acls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetObjAclReq)
}
SetObjAclReq::SetObjAclReq(const SetObjAclReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      acls_(from.acls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetObjAclReq)
}

void SetObjAclReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetObjAclReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetObjAclReq::~SetObjAclReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetObjAclReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetObjAclReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetObjAclReq::ArenaDtor(void* object) {
  SetObjAclReq* _this = reinterpret_cast< SetObjAclReq* >(object);
  (void)_this;
}
void SetObjAclReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetObjAclReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetObjAclReq& SetObjAclReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetObjAclReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetObjAclReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetObjAclReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acls_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetObjAclReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ClientCos.AclInfo acls = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_acls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetObjAclReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetObjAclReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // repeated .ClientCos.AclInfo acls = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acls_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_acls(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetObjAclReq)
  return target;
}

size_t SetObjAclReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetObjAclReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.AclInfo acls = 3;
  total_size += 1UL * this->_internal_acls_size();
  for (const auto& msg : this->acls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetObjAclReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetObjAclReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetObjAclReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetObjAclReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetObjAclReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetObjAclReq)
    MergeFrom(*source);
  }
}

void SetObjAclReq::MergeFrom(const SetObjAclReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetObjAclReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acls_.MergeFrom(from.acls_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void SetObjAclReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetObjAclReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetObjAclReq::CopyFrom(const SetObjAclReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetObjAclReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetObjAclReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SetObjAclReq::InternalSwap(SetObjAclReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  acls_.InternalSwap(&other->acls_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetObjAclReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetObjAclRsp::_Internal {
 public:
};

SetObjAclRsp::SetObjAclRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetObjAclRsp)
}
SetObjAclRsp::SetObjAclRsp(const SetObjAclRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetObjAclRsp)
}

void SetObjAclRsp::SharedCtor() {
}

SetObjAclRsp::~SetObjAclRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetObjAclRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetObjAclRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetObjAclRsp::ArenaDtor(void* object) {
  SetObjAclRsp* _this = reinterpret_cast< SetObjAclRsp* >(object);
  (void)_this;
}
void SetObjAclRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetObjAclRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetObjAclRsp& SetObjAclRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetObjAclRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetObjAclRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetObjAclRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetObjAclRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetObjAclRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetObjAclRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetObjAclRsp)
  return target;
}

size_t SetObjAclRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetObjAclRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetObjAclRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetObjAclRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetObjAclRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetObjAclRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetObjAclRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetObjAclRsp)
    MergeFrom(*source);
  }
}

void SetObjAclRsp::MergeFrom(const SetObjAclRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetObjAclRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetObjAclRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetObjAclRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetObjAclRsp::CopyFrom(const SetObjAclRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetObjAclRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetObjAclRsp::IsInitialized() const {
  return true;
}

void SetObjAclRsp::InternalSwap(SetObjAclRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetObjAclRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetObjAclReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetObjAclReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GetObjAclReq::GetObjAclReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetObjAclReq)
}
GetObjAclReq::GetObjAclReq(const GetObjAclReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetObjAclReq)
}

void GetObjAclReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjAclReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetObjAclReq::~GetObjAclReq() {
  // @@protoc_insertion_point(destructor:ClientCos.GetObjAclReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetObjAclReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetObjAclReq::ArenaDtor(void* object) {
  GetObjAclReq* _this = reinterpret_cast< GetObjAclReq* >(object);
  (void)_this;
}
void GetObjAclReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetObjAclReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjAclReq& GetObjAclReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjAclReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetObjAclReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetObjAclReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetObjAclReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjAclReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetObjAclReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetObjAclReq)
  return target;
}

size_t GetObjAclReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetObjAclReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjAclReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetObjAclReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjAclReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjAclReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetObjAclReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetObjAclReq)
    MergeFrom(*source);
  }
}

void GetObjAclReq::MergeFrom(const GetObjAclReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetObjAclReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void GetObjAclReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetObjAclReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjAclReq::CopyFrom(const GetObjAclReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetObjAclReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjAclReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void GetObjAclReq::InternalSwap(GetObjAclReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjAclReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetObjAclRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetObjAclRsp>()._has_bits_);
  static const ::ClientCos::OwnerInfo& owner(const GetObjAclRsp* msg);
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ClientCos::OwnerInfo&
GetObjAclRsp::_Internal::owner(const GetObjAclRsp* msg) {
  return *msg->owner_;
}
GetObjAclRsp::GetObjAclRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  acls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetObjAclRsp)
}
GetObjAclRsp::GetObjAclRsp(const GetObjAclRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      acls_(from.acls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_owner()) {
    owner_ = new ::ClientCos::OwnerInfo(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetObjAclRsp)
}

void GetObjAclRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjAclRsp_cosv4_5fclient_2eproto.base);
  owner_ = nullptr;
}

GetObjAclRsp::~GetObjAclRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.GetObjAclRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetObjAclRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete owner_;
}

void GetObjAclRsp::ArenaDtor(void* object) {
  GetObjAclRsp* _this = reinterpret_cast< GetObjAclRsp* >(object);
  (void)_this;
}
void GetObjAclRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetObjAclRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjAclRsp& GetObjAclRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjAclRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetObjAclRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetObjAclRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acls_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_ != nullptr);
    owner_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetObjAclRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ClientCos.AclInfo acls = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_acls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo owner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjAclRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetObjAclRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ClientCos.AclInfo acls = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acls_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_acls(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.OwnerInfo owner = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::owner(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetObjAclRsp)
  return target;
}

size_t GetObjAclRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetObjAclRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientCos.AclInfo acls = 1;
  total_size += 1UL * this->_internal_acls_size();
  for (const auto& msg : this->acls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ClientCos.OwnerInfo owner = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *owner_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjAclRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetObjAclRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjAclRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjAclRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetObjAclRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetObjAclRsp)
    MergeFrom(*source);
  }
}

void GetObjAclRsp::MergeFrom(const GetObjAclRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetObjAclRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acls_.MergeFrom(from.acls_);
  if (from._internal_has_owner()) {
    _internal_mutable_owner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_owner());
  }
}

void GetObjAclRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetObjAclRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjAclRsp::CopyFrom(const GetObjAclRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetObjAclRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjAclRsp::IsInitialized() const {
  return true;
}

void GetObjAclRsp::InternalSwap(GetObjAclRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  acls_.InternalSwap(&other->acls_);
  swap(owner_, other->owner_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjAclRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketUinReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBucketUinReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ClientCos::OwnerInfo& bucketowner(const SetBucketUinReq* msg);
  static void set_has_bucketowner(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::ClientCos::OwnerInfo&
SetBucketUinReq::_Internal::bucketowner(const SetBucketUinReq* msg) {
  return *msg->bucketowner_;
}
SetBucketUinReq::SetBucketUinReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketUinReq)
}
SetBucketUinReq::SetBucketUinReq(const SetBucketUinReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  if (from._internal_has_bucketowner()) {
    bucketowner_ = new ::ClientCos::OwnerInfo(*from.bucketowner_);
  } else {
    bucketowner_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketUinReq)
}

void SetBucketUinReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetBucketUinReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bucketowner_ = nullptr;
}

SetBucketUinReq::~SetBucketUinReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketUinReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketUinReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bucketowner_;
}

void SetBucketUinReq::ArenaDtor(void* object) {
  SetBucketUinReq* _this = reinterpret_cast< SetBucketUinReq* >(object);
  (void)_this;
}
void SetBucketUinReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketUinReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketUinReq& SetBucketUinReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketUinReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketUinReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketUinReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(bucketowner_ != nullptr);
      bucketowner_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketUinReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.OwnerInfo bucketOwner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketowner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketUinReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketUinReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional .ClientCos.OwnerInfo bucketOwner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::bucketowner(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketUinReq)
  return target;
}

size_t SetBucketUinReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketUinReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.OwnerInfo bucketOwner = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bucketowner_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketUinReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketUinReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketUinReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketUinReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketUinReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketUinReq)
    MergeFrom(*source);
  }
}

void SetBucketUinReq::MergeFrom(const SetBucketUinReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketUinReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_bucketowner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_bucketowner());
    }
  }
}

void SetBucketUinReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketUinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketUinReq::CopyFrom(const SetBucketUinReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketUinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketUinReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SetBucketUinReq::InternalSwap(SetBucketUinReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(bucketowner_, other->bucketowner_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketUinReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketUinRsp::_Internal {
 public:
};

SetBucketUinRsp::SetBucketUinRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketUinRsp)
}
SetBucketUinRsp::SetBucketUinRsp(const SetBucketUinRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketUinRsp)
}

void SetBucketUinRsp::SharedCtor() {
}

SetBucketUinRsp::~SetBucketUinRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketUinRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketUinRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetBucketUinRsp::ArenaDtor(void* object) {
  SetBucketUinRsp* _this = reinterpret_cast< SetBucketUinRsp* >(object);
  (void)_this;
}
void SetBucketUinRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketUinRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketUinRsp& SetBucketUinRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketUinRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketUinRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketUinRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketUinRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketUinRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketUinRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketUinRsp)
  return target;
}

size_t SetBucketUinRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketUinRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketUinRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketUinRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketUinRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketUinRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketUinRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketUinRsp)
    MergeFrom(*source);
  }
}

void SetBucketUinRsp::MergeFrom(const SetBucketUinRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketUinRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetBucketUinRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketUinRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketUinRsp::CopyFrom(const SetBucketUinRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketUinRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketUinRsp::IsInitialized() const {
  return true;
}

void SetBucketUinRsp::InternalSwap(SetBucketUinRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketUinRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBucketUinReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBucketUinReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GetBucketUinReq::GetBucketUinReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetBucketUinReq)
}
GetBucketUinReq::GetBucketUinReq(const GetBucketUinReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetBucketUinReq)
}

void GetBucketUinReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBucketUinReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBucketUinReq::~GetBucketUinReq() {
  // @@protoc_insertion_point(destructor:ClientCos.GetBucketUinReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBucketUinReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBucketUinReq::ArenaDtor(void* object) {
  GetBucketUinReq* _this = reinterpret_cast< GetBucketUinReq* >(object);
  (void)_this;
}
void GetBucketUinReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBucketUinReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketUinReq& GetBucketUinReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBucketUinReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetBucketUinReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetBucketUinReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBucketUinReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBucketUinReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetBucketUinReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetBucketUinReq)
  return target;
}

size_t GetBucketUinReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetBucketUinReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketUinReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetBucketUinReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketUinReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBucketUinReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetBucketUinReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetBucketUinReq)
    MergeFrom(*source);
  }
}

void GetBucketUinReq::MergeFrom(const GetBucketUinReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetBucketUinReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_path()) {
    _internal_set_path(from._internal_path());
  }
}

void GetBucketUinReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetBucketUinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketUinReq::CopyFrom(const GetBucketUinReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetBucketUinReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketUinReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void GetBucketUinReq::InternalSwap(GetBucketUinReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBucketUinReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBucketUinRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBucketUinRsp>()._has_bits_);
  static const ::ClientCos::OwnerInfo& bucketowner(const GetBucketUinRsp* msg);
  static void set_has_bucketowner(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ClientCos::OwnerInfo&
GetBucketUinRsp::_Internal::bucketowner(const GetBucketUinRsp* msg) {
  return *msg->bucketowner_;
}
GetBucketUinRsp::GetBucketUinRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetBucketUinRsp)
}
GetBucketUinRsp::GetBucketUinRsp(const GetBucketUinRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bucketowner()) {
    bucketowner_ = new ::ClientCos::OwnerInfo(*from.bucketowner_);
  } else {
    bucketowner_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetBucketUinRsp)
}

void GetBucketUinRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBucketUinRsp_cosv4_5fclient_2eproto.base);
  bucketowner_ = nullptr;
}

GetBucketUinRsp::~GetBucketUinRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.GetBucketUinRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBucketUinRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete bucketowner_;
}

void GetBucketUinRsp::ArenaDtor(void* object) {
  GetBucketUinRsp* _this = reinterpret_cast< GetBucketUinRsp* >(object);
  (void)_this;
}
void GetBucketUinRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBucketUinRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketUinRsp& GetBucketUinRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBucketUinRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetBucketUinRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetBucketUinRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(bucketowner_ != nullptr);
    bucketowner_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBucketUinRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.OwnerInfo bucketOwner = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucketowner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBucketUinRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetBucketUinRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.OwnerInfo bucketOwner = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::bucketowner(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetBucketUinRsp)
  return target;
}

size_t GetBucketUinRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetBucketUinRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.OwnerInfo bucketOwner = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bucketowner_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketUinRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetBucketUinRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketUinRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBucketUinRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetBucketUinRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetBucketUinRsp)
    MergeFrom(*source);
  }
}

void GetBucketUinRsp::MergeFrom(const GetBucketUinRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetBucketUinRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bucketowner()) {
    _internal_mutable_bucketowner()->::ClientCos::OwnerInfo::MergeFrom(from._internal_bucketowner());
  }
}

void GetBucketUinRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetBucketUinRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketUinRsp::CopyFrom(const GetBucketUinRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetBucketUinRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketUinRsp::IsInitialized() const {
  return true;
}

void GetBucketUinRsp::InternalSwap(GetBucketUinRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(bucketowner_, other->bucketowner_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBucketUinRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketLockReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBucketLockReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ClientCos::LockInfo& lockinfo(const SetBucketLockReq* msg);
  static void set_has_lockinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::ClientCos::LockInfo&
SetBucketLockReq::_Internal::lockinfo(const SetBucketLockReq* msg) {
  return *msg->lockinfo_;
}
SetBucketLockReq::SetBucketLockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketLockReq)
}
SetBucketLockReq::SetBucketLockReq(const SetBucketLockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  if (from._internal_has_lockinfo()) {
    lockinfo_ = new ::ClientCos::LockInfo(*from.lockinfo_);
  } else {
    lockinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketLockReq)
}

void SetBucketLockReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetBucketLockReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lockinfo_ = nullptr;
}

SetBucketLockReq::~SetBucketLockReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketLockReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketLockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete lockinfo_;
}

void SetBucketLockReq::ArenaDtor(void* object) {
  SetBucketLockReq* _this = reinterpret_cast< SetBucketLockReq* >(object);
  (void)_this;
}
void SetBucketLockReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketLockReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketLockReq& SetBucketLockReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketLockReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketLockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketLockReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(lockinfo_ != nullptr);
      lockinfo_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketLockReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.LockInfo lockinfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lockinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketLockReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketLockReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional .ClientCos.LockInfo lockinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::lockinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketLockReq)
  return target;
}

size_t SetBucketLockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketLockReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.LockInfo lockinfo = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lockinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketLockReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketLockReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketLockReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketLockReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketLockReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketLockReq)
    MergeFrom(*source);
  }
}

void SetBucketLockReq::MergeFrom(const SetBucketLockReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketLockReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_lockinfo()->::ClientCos::LockInfo::MergeFrom(from._internal_lockinfo());
    }
  }
}

void SetBucketLockReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketLockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketLockReq::CopyFrom(const SetBucketLockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketLockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketLockReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SetBucketLockReq::InternalSwap(SetBucketLockReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(lockinfo_, other->lockinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketLockReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketLockRsp::_Internal {
 public:
};

SetBucketLockRsp::SetBucketLockRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketLockRsp)
}
SetBucketLockRsp::SetBucketLockRsp(const SetBucketLockRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketLockRsp)
}

void SetBucketLockRsp::SharedCtor() {
}

SetBucketLockRsp::~SetBucketLockRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketLockRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketLockRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetBucketLockRsp::ArenaDtor(void* object) {
  SetBucketLockRsp* _this = reinterpret_cast< SetBucketLockRsp* >(object);
  (void)_this;
}
void SetBucketLockRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketLockRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketLockRsp& SetBucketLockRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketLockRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketLockRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketLockRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketLockRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketLockRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketLockRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketLockRsp)
  return target;
}

size_t SetBucketLockRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketLockRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketLockRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketLockRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketLockRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketLockRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketLockRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketLockRsp)
    MergeFrom(*source);
  }
}

void SetBucketLockRsp::MergeFrom(const SetBucketLockRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketLockRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetBucketLockRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketLockRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketLockRsp::CopyFrom(const SetBucketLockRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketLockRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketLockRsp::IsInitialized() const {
  return true;
}

void SetBucketLockRsp::InternalSwap(SetBucketLockRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketLockRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBucketLockReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBucketLockReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GetBucketLockReq::GetBucketLockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetBucketLockReq)
}
GetBucketLockReq::GetBucketLockReq(const GetBucketLockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetBucketLockReq)
}

void GetBucketLockReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBucketLockReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBucketLockReq::~GetBucketLockReq() {
  // @@protoc_insertion_point(destructor:ClientCos.GetBucketLockReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBucketLockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBucketLockReq::ArenaDtor(void* object) {
  GetBucketLockReq* _this = reinterpret_cast< GetBucketLockReq* >(object);
  (void)_this;
}
void GetBucketLockReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBucketLockReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketLockReq& GetBucketLockReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBucketLockReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetBucketLockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetBucketLockReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBucketLockReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBucketLockReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetBucketLockReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetBucketLockReq)
  return target;
}

size_t GetBucketLockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetBucketLockReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketLockReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetBucketLockReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketLockReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBucketLockReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetBucketLockReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetBucketLockReq)
    MergeFrom(*source);
  }
}

void GetBucketLockReq::MergeFrom(const GetBucketLockReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetBucketLockReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_path()) {
    _internal_set_path(from._internal_path());
  }
}

void GetBucketLockReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetBucketLockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketLockReq::CopyFrom(const GetBucketLockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetBucketLockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketLockReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void GetBucketLockReq::InternalSwap(GetBucketLockReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBucketLockReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBucketLockRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBucketLockRsp>()._has_bits_);
  static const ::ClientCos::LockInfo& lockinfo(const GetBucketLockRsp* msg);
  static void set_has_lockinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ClientCos::LockInfo&
GetBucketLockRsp::_Internal::lockinfo(const GetBucketLockRsp* msg) {
  return *msg->lockinfo_;
}
GetBucketLockRsp::GetBucketLockRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetBucketLockRsp)
}
GetBucketLockRsp::GetBucketLockRsp(const GetBucketLockRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_lockinfo()) {
    lockinfo_ = new ::ClientCos::LockInfo(*from.lockinfo_);
  } else {
    lockinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetBucketLockRsp)
}

void GetBucketLockRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBucketLockRsp_cosv4_5fclient_2eproto.base);
  lockinfo_ = nullptr;
}

GetBucketLockRsp::~GetBucketLockRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.GetBucketLockRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBucketLockRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete lockinfo_;
}

void GetBucketLockRsp::ArenaDtor(void* object) {
  GetBucketLockRsp* _this = reinterpret_cast< GetBucketLockRsp* >(object);
  (void)_this;
}
void GetBucketLockRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBucketLockRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketLockRsp& GetBucketLockRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBucketLockRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetBucketLockRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetBucketLockRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(lockinfo_ != nullptr);
    lockinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBucketLockRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ClientCos.LockInfo lockinfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_lockinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBucketLockRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetBucketLockRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ClientCos.LockInfo lockinfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::lockinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetBucketLockRsp)
  return target;
}

size_t GetBucketLockRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetBucketLockRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ClientCos.LockInfo lockinfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lockinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketLockRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetBucketLockRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketLockRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBucketLockRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetBucketLockRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetBucketLockRsp)
    MergeFrom(*source);
  }
}

void GetBucketLockRsp::MergeFrom(const GetBucketLockRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetBucketLockRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_lockinfo()) {
    _internal_mutable_lockinfo()->::ClientCos::LockInfo::MergeFrom(from._internal_lockinfo());
  }
}

void GetBucketLockRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetBucketLockRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketLockRsp::CopyFrom(const GetBucketLockRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetBucketLockRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketLockRsp::IsInitialized() const {
  return true;
}

void GetBucketLockRsp::InternalSwap(GetBucketLockRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(lockinfo_, other->lockinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBucketLockRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketInventoryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBucketInventoryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_inventory(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SetBucketInventoryReq::SetBucketInventoryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketInventoryReq)
}
SetBucketInventoryReq::SetBucketInventoryReq(const SetBucketInventoryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_inventory()) {
    inventory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inventory(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketInventoryReq)
}

void SetBucketInventoryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetBucketInventoryReq::~SetBucketInventoryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketInventoryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketInventoryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inventory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetBucketInventoryReq::ArenaDtor(void* object) {
  SetBucketInventoryReq* _this = reinterpret_cast< SetBucketInventoryReq* >(object);
  (void)_this;
}
void SetBucketInventoryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketInventoryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketInventoryReq& SetBucketInventoryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketInventoryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketInventoryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketInventoryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      inventory_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketInventoryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes inventory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_inventory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketInventoryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketInventoryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes inventory = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_inventory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketInventoryReq)
  return target;
}

size_t SetBucketInventoryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketInventoryReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes inventory = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_inventory());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketInventoryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketInventoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketInventoryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketInventoryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketInventoryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketInventoryReq)
    MergeFrom(*source);
  }
}

void SetBucketInventoryReq::MergeFrom(const SetBucketInventoryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketInventoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_inventory(from._internal_inventory());
    }
  }
}

void SetBucketInventoryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketInventoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketInventoryReq::CopyFrom(const SetBucketInventoryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketInventoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketInventoryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SetBucketInventoryReq::InternalSwap(SetBucketInventoryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  inventory_.Swap(&other->inventory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketInventoryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetBucketInventoryRsp::_Internal {
 public:
};

SetBucketInventoryRsp::SetBucketInventoryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetBucketInventoryRsp)
}
SetBucketInventoryRsp::SetBucketInventoryRsp(const SetBucketInventoryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetBucketInventoryRsp)
}

void SetBucketInventoryRsp::SharedCtor() {
}

SetBucketInventoryRsp::~SetBucketInventoryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetBucketInventoryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetBucketInventoryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetBucketInventoryRsp::ArenaDtor(void* object) {
  SetBucketInventoryRsp* _this = reinterpret_cast< SetBucketInventoryRsp* >(object);
  (void)_this;
}
void SetBucketInventoryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetBucketInventoryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetBucketInventoryRsp& SetBucketInventoryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetBucketInventoryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetBucketInventoryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetBucketInventoryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBucketInventoryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetBucketInventoryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetBucketInventoryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetBucketInventoryRsp)
  return target;
}

size_t SetBucketInventoryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetBucketInventoryRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBucketInventoryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetBucketInventoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBucketInventoryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetBucketInventoryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetBucketInventoryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetBucketInventoryRsp)
    MergeFrom(*source);
  }
}

void SetBucketInventoryRsp::MergeFrom(const SetBucketInventoryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetBucketInventoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetBucketInventoryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetBucketInventoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBucketInventoryRsp::CopyFrom(const SetBucketInventoryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetBucketInventoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBucketInventoryRsp::IsInitialized() const {
  return true;
}

void SetBucketInventoryRsp::InternalSwap(SetBucketInventoryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBucketInventoryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBucketInventoryReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBucketInventoryReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GetBucketInventoryReq::GetBucketInventoryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetBucketInventoryReq)
}
GetBucketInventoryReq::GetBucketInventoryReq(const GetBucketInventoryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetBucketInventoryReq)
}

void GetBucketInventoryReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBucketInventoryReq::~GetBucketInventoryReq() {
  // @@protoc_insertion_point(destructor:ClientCos.GetBucketInventoryReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBucketInventoryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBucketInventoryReq::ArenaDtor(void* object) {
  GetBucketInventoryReq* _this = reinterpret_cast< GetBucketInventoryReq* >(object);
  (void)_this;
}
void GetBucketInventoryReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBucketInventoryReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketInventoryReq& GetBucketInventoryReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBucketInventoryReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetBucketInventoryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetBucketInventoryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBucketInventoryReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBucketInventoryReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetBucketInventoryReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetBucketInventoryReq)
  return target;
}

size_t GetBucketInventoryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetBucketInventoryReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketInventoryReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetBucketInventoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketInventoryReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBucketInventoryReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetBucketInventoryReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetBucketInventoryReq)
    MergeFrom(*source);
  }
}

void GetBucketInventoryReq::MergeFrom(const GetBucketInventoryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetBucketInventoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_path()) {
    _internal_set_path(from._internal_path());
  }
}

void GetBucketInventoryReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetBucketInventoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketInventoryReq::CopyFrom(const GetBucketInventoryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetBucketInventoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketInventoryReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void GetBucketInventoryReq::InternalSwap(GetBucketInventoryReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBucketInventoryReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetBucketInventoryRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetBucketInventoryRsp>()._has_bits_);
  static void set_has_inventory(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetBucketInventoryRsp::GetBucketInventoryRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.GetBucketInventoryRsp)
}
GetBucketInventoryRsp::GetBucketInventoryRsp(const GetBucketInventoryRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_inventory()) {
    inventory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inventory(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.GetBucketInventoryRsp)
}

void GetBucketInventoryRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto.base);
  inventory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBucketInventoryRsp::~GetBucketInventoryRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.GetBucketInventoryRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBucketInventoryRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  inventory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBucketInventoryRsp::ArenaDtor(void* object) {
  GetBucketInventoryRsp* _this = reinterpret_cast< GetBucketInventoryRsp* >(object);
  (void)_this;
}
void GetBucketInventoryRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBucketInventoryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBucketInventoryRsp& GetBucketInventoryRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBucketInventoryRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void GetBucketInventoryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.GetBucketInventoryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    inventory_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBucketInventoryRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes inventory = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_inventory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBucketInventoryRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.GetBucketInventoryRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes inventory = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_inventory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.GetBucketInventoryRsp)
  return target;
}

size_t GetBucketInventoryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.GetBucketInventoryRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes inventory = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_inventory());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBucketInventoryRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.GetBucketInventoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBucketInventoryRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBucketInventoryRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.GetBucketInventoryRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.GetBucketInventoryRsp)
    MergeFrom(*source);
  }
}

void GetBucketInventoryRsp::MergeFrom(const GetBucketInventoryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.GetBucketInventoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_inventory()) {
    _internal_set_inventory(from._internal_inventory());
  }
}

void GetBucketInventoryRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.GetBucketInventoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBucketInventoryRsp::CopyFrom(const GetBucketInventoryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.GetBucketInventoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBucketInventoryRsp::IsInitialized() const {
  return true;
}

void GetBucketInventoryRsp::InternalSwap(GetBucketInventoryRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  inventory_.Swap(&other->inventory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBucketInventoryRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class COSTransToCASReq::_Internal {
 public:
  using HasBits = decltype(std::declval<COSTransToCASReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_switch_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sk(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_check_mtime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

COSTransToCASReq::COSTransToCASReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.COSTransToCASReq)
}
COSTransToCASReq::COSTransToCASReq(const COSTransToCASReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sk()) {
    sk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sk(), 
      GetArena());
  }
  ::memcpy(&switch_flag_, &from.switch_flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&check_mtime_) -
    reinterpret_cast<char*>(&switch_flag_)) + sizeof(check_mtime_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.COSTransToCASReq)
}

void COSTransToCASReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_COSTransToCASReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&switch_flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&check_mtime_) -
      reinterpret_cast<char*>(&switch_flag_)) + sizeof(check_mtime_));
}

COSTransToCASReq::~COSTransToCASReq() {
  // @@protoc_insertion_point(destructor:ClientCos.COSTransToCASReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void COSTransToCASReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void COSTransToCASReq::ArenaDtor(void* object) {
  COSTransToCASReq* _this = reinterpret_cast< COSTransToCASReq* >(object);
  (void)_this;
}
void COSTransToCASReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void COSTransToCASReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const COSTransToCASReq& COSTransToCASReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_COSTransToCASReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void COSTransToCASReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.COSTransToCASReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      sk_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&switch_flag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&check_mtime_) -
        reinterpret_cast<char*>(&switch_flag_)) + sizeof(check_mtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* COSTransToCASReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool switch_flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_switch_flag(&has_bits);
          switch_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sk = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 check_mtime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_check_mtime(&has_bits);
          check_mtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* COSTransToCASReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.COSTransToCASReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  // optional bool switch_flag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_switch_flag(), target);
  }

  // optional bytes sk = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_sk(), target);
  }

  // optional uint32 check_mtime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_check_mtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.COSTransToCASReq)
  return target;
}

size_t COSTransToCASReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.COSTransToCASReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional bytes version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_version());
    }

    // optional bytes sk = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sk());
    }

    // optional bool switch_flag = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint32 check_mtime = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_check_mtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COSTransToCASReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.COSTransToCASReq)
  GOOGLE_DCHECK_NE(&from, this);
  const COSTransToCASReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<COSTransToCASReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.COSTransToCASReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.COSTransToCASReq)
    MergeFrom(*source);
  }
}

void COSTransToCASReq::MergeFrom(const COSTransToCASReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.COSTransToCASReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_sk(from._internal_sk());
    }
    if (cached_has_bits & 0x00000008u) {
      switch_flag_ = from.switch_flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      check_mtime_ = from.check_mtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void COSTransToCASReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.COSTransToCASReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COSTransToCASReq::CopyFrom(const COSTransToCASReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.COSTransToCASReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COSTransToCASReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void COSTransToCASReq::InternalSwap(COSTransToCASReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sk_.Swap(&other->sk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(COSTransToCASReq, check_mtime_)
      + sizeof(COSTransToCASReq::check_mtime_)
      - PROTOBUF_FIELD_OFFSET(COSTransToCASReq, switch_flag_)>(
          reinterpret_cast<char*>(&switch_flag_),
          reinterpret_cast<char*>(&other->switch_flag_));
}

::PROTOBUF_NAMESPACE_ID::Metadata COSTransToCASReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class COSTransToCASRsp::_Internal {
 public:
};

COSTransToCASRsp::COSTransToCASRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.COSTransToCASRsp)
}
COSTransToCASRsp::COSTransToCASRsp(const COSTransToCASRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.COSTransToCASRsp)
}

void COSTransToCASRsp::SharedCtor() {
}

COSTransToCASRsp::~COSTransToCASRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.COSTransToCASRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void COSTransToCASRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void COSTransToCASRsp::ArenaDtor(void* object) {
  COSTransToCASRsp* _this = reinterpret_cast< COSTransToCASRsp* >(object);
  (void)_this;
}
void COSTransToCASRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void COSTransToCASRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const COSTransToCASRsp& COSTransToCASRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_COSTransToCASRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void COSTransToCASRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.COSTransToCASRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* COSTransToCASRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* COSTransToCASRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.COSTransToCASRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.COSTransToCASRsp)
  return target;
}

size_t COSTransToCASRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.COSTransToCASRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COSTransToCASRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.COSTransToCASRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const COSTransToCASRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<COSTransToCASRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.COSTransToCASRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.COSTransToCASRsp)
    MergeFrom(*source);
  }
}

void COSTransToCASRsp::MergeFrom(const COSTransToCASRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.COSTransToCASRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void COSTransToCASRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.COSTransToCASRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COSTransToCASRsp::CopyFrom(const COSTransToCASRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.COSTransToCASRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COSTransToCASRsp::IsInitialized() const {
  return true;
}

void COSTransToCASRsp::InternalSwap(COSTransToCASRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata COSTransToCASRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListDirectReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ListDirectReq>()._has_bits_);
  static void set_has_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_marker(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_submarker(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delimiter(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_bad_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bad_port(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

ListDirectReq::ListDirectReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListDirectReq)
}
ListDirectReq::ListDirectReq(const ListDirectReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_prefix()) {
    prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prefix(), 
      GetArena());
  }
  marker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_marker()) {
    marker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_marker(), 
      GetArena());
  }
  submarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_submarker()) {
    submarker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_submarker(), 
      GetArena());
  }
  delimiter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_delimiter()) {
    delimiter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delimiter(), 
      GetArena());
  }
  bad_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_bad_ip()) {
    bad_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bad_ip(), 
      GetArena());
  }
  ::memcpy(&flag_, &from.flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&flag_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListDirectReq)
}

void ListDirectReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListDirectReq_cosv4_5fclient_2eproto.base);
  prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  marker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  submarker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bad_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&bad_port_) -
      reinterpret_cast<char*>(&flag_)) + sizeof(bad_port_));
  count_ = 200u;
}

ListDirectReq::~ListDirectReq() {
  // @@protoc_insertion_point(destructor:ClientCos.ListDirectReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListDirectReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  marker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  submarker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delimiter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bad_ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListDirectReq::ArenaDtor(void* object) {
  ListDirectReq* _this = reinterpret_cast< ListDirectReq* >(object);
  (void)_this;
}
void ListDirectReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDirectReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListDirectReq& ListDirectReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListDirectReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListDirectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListDirectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      prefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      marker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      submarker_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      delimiter_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      bad_ip_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&flag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bad_port_) -
        reinterpret_cast<char*>(&flag_)) + sizeof(bad_port_));
  }
  count_ = 200u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDirectReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string prefix = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ListDirectReq.prefix");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string marker = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_marker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ListDirectReq.marker");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string submarker = 3 [default = ""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_submarker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ListDirectReq.submarker");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string delimiter = 4 [default = ""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_delimiter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ListDirectReq.delimiter");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 count = 5 [default = 200];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool flag = 6 [default = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_flag(&has_bits);
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.ListDirectReq.ListType type = 7 [default = LIST];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::ListDirectReq_ListType_IsValid(val))) {
            _internal_set_type(static_cast<::ClientCos::ListDirectReq_ListType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string bad_ip = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_bad_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ListDirectReq.bad_ip");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bad_port = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_bad_port(&has_bits);
          bad_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListDirectReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListDirectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string prefix = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_prefix().data(), static_cast<int>(this->_internal_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ListDirectReq.prefix");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_prefix(), target);
  }

  // optional string marker = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_marker().data(), static_cast<int>(this->_internal_marker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ListDirectReq.marker");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_marker(), target);
  }

  // optional string submarker = 3 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_submarker().data(), static_cast<int>(this->_internal_submarker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ListDirectReq.submarker");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_submarker(), target);
  }

  // optional string delimiter = 4 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_delimiter().data(), static_cast<int>(this->_internal_delimiter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ListDirectReq.delimiter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_delimiter(), target);
  }

  // optional uint32 count = 5 [default = 200];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_count(), target);
  }

  // optional bool flag = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_flag(), target);
  }

  // optional .ClientCos.ListDirectReq.ListType type = 7 [default = LIST];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_type(), target);
  }

  // optional string bad_ip = 10;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_bad_ip().data(), static_cast<int>(this->_internal_bad_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ListDirectReq.bad_ip");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_bad_ip(), target);
  }

  // optional uint32 bad_port = 11;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_bad_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListDirectReq)
  return target;
}

size_t ListDirectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListDirectReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string prefix = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_prefix());
    }

    // optional string marker = 2 [default = ""];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_marker());
    }

    // optional string submarker = 3 [default = ""];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_submarker());
    }

    // optional string delimiter = 4 [default = ""];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_delimiter());
    }

    // optional string bad_ip = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_bad_ip());
    }

    // optional bool flag = 6 [default = false];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional .ClientCos.ListDirectReq.ListType type = 7 [default = LIST];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional uint32 bad_port = 11;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bad_port());
    }

  }
  // optional uint32 count = 5 [default = 200];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDirectReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListDirectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDirectReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListDirectReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListDirectReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListDirectReq)
    MergeFrom(*source);
  }
}

void ListDirectReq::MergeFrom(const ListDirectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListDirectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_prefix(from._internal_prefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_marker(from._internal_marker());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_submarker(from._internal_submarker());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_delimiter(from._internal_delimiter());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_bad_ip(from._internal_bad_ip());
    }
    if (cached_has_bits & 0x00000020u) {
      flag_ = from.flag_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      bad_port_ = from.bad_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_count(from._internal_count());
  }
}

void ListDirectReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListDirectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDirectReq::CopyFrom(const ListDirectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListDirectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDirectReq::IsInitialized() const {
  return true;
}

void ListDirectReq::InternalSwap(ListDirectReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prefix_.Swap(&other->prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  marker_.Swap(&other->marker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  submarker_.Swap(&other->submarker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  delimiter_.Swap(&other->delimiter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bad_ip_.Swap(&other->bad_ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListDirectReq, bad_port_)
      + sizeof(ListDirectReq::bad_port_)
      - PROTOBUF_FIELD_OFFSET(ListDirectReq, flag_)>(
          reinterpret_cast<char*>(&flag_),
          reinterpret_cast<char*>(&other->flag_));
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDirectReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListDirectRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<ListDirectRsp>()._has_bits_);
  static void set_has_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_port(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_term(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ListDirectRsp::ListDirectRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.ListDirectRsp)
}
ListDirectRsp::ListDirectRsp(const ListDirectRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_ip()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_) -
    reinterpret_cast<char*>(&port_)) + sizeof(term_));
  // @@protoc_insertion_point(copy_constructor:ClientCos.ListDirectRsp)
}

void ListDirectRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListDirectRsp_cosv4_5fclient_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&port_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&port_)) + sizeof(term_));
}

ListDirectRsp::~ListDirectRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.ListDirectRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListDirectRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListDirectRsp::ArenaDtor(void* object) {
  ListDirectRsp* _this = reinterpret_cast< ListDirectRsp* >(object);
  (void)_this;
}
void ListDirectRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDirectRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListDirectRsp& ListDirectRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListDirectRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void ListDirectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.ListDirectRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ip_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&port_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&term_) -
        reinterpret_cast<char*>(&port_)) + sizeof(term_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDirectRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClientCos.ListDirectRsp.ip");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_port(&has_bits);
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_term(&has_bits);
          term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListDirectRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.ListDirectRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ClientCos.ListDirectRsp.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  // optional int32 term = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_term(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.ListDirectRsp)
  return target;
}

size_t ListDirectRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.ListDirectRsp)
  size_t total_size = 0;

  // required string ip = 1;
  if (_internal_has_ip()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional uint32 port = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_port());
    }

    // optional int32 term = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_term());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDirectRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.ListDirectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDirectRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListDirectRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.ListDirectRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.ListDirectRsp)
    MergeFrom(*source);
  }
}

void ListDirectRsp::MergeFrom(const ListDirectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.ListDirectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_ip(from._internal_ip());
    }
    if (cached_has_bits & 0x00000002u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000004u) {
      term_ = from.term_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListDirectRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.ListDirectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDirectRsp::CopyFrom(const ListDirectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.ListDirectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDirectRsp::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ListDirectRsp::InternalSwap(ListDirectRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListDirectRsp, term_)
      + sizeof(ListDirectRsp::term_)
      - PROTOBUF_FIELD_OFFSET(ListDirectRsp, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDirectRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MigrateFinFileReq::_Internal {
 public:
  using HasBits = decltype(std::declval<MigrateFinFileReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

MigrateFinFileReq::MigrateFinFileReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.MigrateFinFileReq)
}
MigrateFinFileReq::MigrateFinFileReq(const MigrateFinFileReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.MigrateFinFileReq)
}

void MigrateFinFileReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MigrateFinFileReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MigrateFinFileReq::~MigrateFinFileReq() {
  // @@protoc_insertion_point(destructor:ClientCos.MigrateFinFileReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MigrateFinFileReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MigrateFinFileReq::ArenaDtor(void* object) {
  MigrateFinFileReq* _this = reinterpret_cast< MigrateFinFileReq* >(object);
  (void)_this;
}
void MigrateFinFileReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MigrateFinFileReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MigrateFinFileReq& MigrateFinFileReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MigrateFinFileReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void MigrateFinFileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.MigrateFinFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrateFinFileReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MigrateFinFileReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.MigrateFinFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.MigrateFinFileReq)
  return target;
}

size_t MigrateFinFileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.MigrateFinFileReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes version = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrateFinFileReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.MigrateFinFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrateFinFileReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MigrateFinFileReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.MigrateFinFileReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.MigrateFinFileReq)
    MergeFrom(*source);
  }
}

void MigrateFinFileReq::MergeFrom(const MigrateFinFileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.MigrateFinFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void MigrateFinFileReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.MigrateFinFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateFinFileReq::CopyFrom(const MigrateFinFileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.MigrateFinFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateFinFileReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void MigrateFinFileReq::InternalSwap(MigrateFinFileReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrateFinFileReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MigrateFinFileRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<MigrateFinFileRsp>()._has_bits_);
  static void set_has_filekey(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uuid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_filetype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

MigrateFinFileRsp::MigrateFinFileRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.MigrateFinFileRsp)
}
MigrateFinFileRsp::MigrateFinFileRsp(const MigrateFinFileRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_filekey()) {
    filekey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filekey(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uuid()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  filetype_ = from.filetype_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.MigrateFinFileRsp)
}

void MigrateFinFileRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto.base);
  filekey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_ = 0u;
}

MigrateFinFileRsp::~MigrateFinFileRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.MigrateFinFileRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MigrateFinFileRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  filekey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MigrateFinFileRsp::ArenaDtor(void* object) {
  MigrateFinFileRsp* _this = reinterpret_cast< MigrateFinFileRsp* >(object);
  (void)_this;
}
void MigrateFinFileRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MigrateFinFileRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MigrateFinFileRsp& MigrateFinFileRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MigrateFinFileRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void MigrateFinFileRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.MigrateFinFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      filekey_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uuid_.ClearNonDefaultToEmpty();
    }
  }
  filetype_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrateFinFileRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes filekey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_filekey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 filetype = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_filetype(&has_bits);
          filetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MigrateFinFileRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.MigrateFinFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes filekey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_filekey(), target);
  }

  // optional bytes uuid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uuid(), target);
  }

  // optional uint32 filetype = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_filetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.MigrateFinFileRsp)
  return target;
}

size_t MigrateFinFileRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.MigrateFinFileRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes filekey = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_filekey());
    }

    // optional bytes uuid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_uuid());
    }

    // optional uint32 filetype = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_filetype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrateFinFileRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.MigrateFinFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrateFinFileRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MigrateFinFileRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.MigrateFinFileRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.MigrateFinFileRsp)
    MergeFrom(*source);
  }
}

void MigrateFinFileRsp::MergeFrom(const MigrateFinFileRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.MigrateFinFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_filekey(from._internal_filekey());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uuid(from._internal_uuid());
    }
    if (cached_has_bits & 0x00000004u) {
      filetype_ = from.filetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MigrateFinFileRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.MigrateFinFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateFinFileRsp::CopyFrom(const MigrateFinFileRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.MigrateFinFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateFinFileRsp::IsInitialized() const {
  return true;
}

void MigrateFinFileRsp::InternalSwap(MigrateFinFileRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filekey_.Swap(&other->filekey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(filetype_, other->filetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrateFinFileRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MigrateUnFinFileReq::_Internal {
 public:
  using HasBits = decltype(std::declval<MigrateUnFinFileReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uploadid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

MigrateUnFinFileReq::MigrateUnFinFileReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.MigrateUnFinFileReq)
}
MigrateUnFinFileReq::MigrateUnFinFileReq(const MigrateUnFinFileReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uploadid()) {
    uploadid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uploadid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.MigrateUnFinFileReq)
}

void MigrateUnFinFileReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MigrateUnFinFileReq::~MigrateUnFinFileReq() {
  // @@protoc_insertion_point(destructor:ClientCos.MigrateUnFinFileReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MigrateUnFinFileReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uploadid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MigrateUnFinFileReq::ArenaDtor(void* object) {
  MigrateUnFinFileReq* _this = reinterpret_cast< MigrateUnFinFileReq* >(object);
  (void)_this;
}
void MigrateUnFinFileReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MigrateUnFinFileReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MigrateUnFinFileReq& MigrateUnFinFileReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MigrateUnFinFileReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void MigrateUnFinFileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.MigrateUnFinFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uploadid_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrateUnFinFileReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uploadid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uploadid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MigrateUnFinFileReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.MigrateUnFinFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes uploadid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uploadid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.MigrateUnFinFileReq)
  return target;
}

size_t MigrateUnFinFileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.MigrateUnFinFileReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes uploadid = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uploadid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrateUnFinFileReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.MigrateUnFinFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrateUnFinFileReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MigrateUnFinFileReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.MigrateUnFinFileReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.MigrateUnFinFileReq)
    MergeFrom(*source);
  }
}

void MigrateUnFinFileReq::MergeFrom(const MigrateUnFinFileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.MigrateUnFinFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uploadid(from._internal_uploadid());
    }
  }
}

void MigrateUnFinFileReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.MigrateUnFinFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateUnFinFileReq::CopyFrom(const MigrateUnFinFileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.MigrateUnFinFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateUnFinFileReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void MigrateUnFinFileReq::InternalSwap(MigrateUnFinFileReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uploadid_.Swap(&other->uploadid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrateUnFinFileReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MigrateUnFinFileRsp::_Internal {
 public:
};

MigrateUnFinFileRsp::MigrateUnFinFileRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.MigrateUnFinFileRsp)
}
MigrateUnFinFileRsp::MigrateUnFinFileRsp(const MigrateUnFinFileRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.MigrateUnFinFileRsp)
}

void MigrateUnFinFileRsp::SharedCtor() {
}

MigrateUnFinFileRsp::~MigrateUnFinFileRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.MigrateUnFinFileRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MigrateUnFinFileRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MigrateUnFinFileRsp::ArenaDtor(void* object) {
  MigrateUnFinFileRsp* _this = reinterpret_cast< MigrateUnFinFileRsp* >(object);
  (void)_this;
}
void MigrateUnFinFileRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MigrateUnFinFileRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MigrateUnFinFileRsp& MigrateUnFinFileRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MigrateUnFinFileRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void MigrateUnFinFileRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.MigrateUnFinFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrateUnFinFileRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MigrateUnFinFileRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.MigrateUnFinFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.MigrateUnFinFileRsp)
  return target;
}

size_t MigrateUnFinFileRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.MigrateUnFinFileRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrateUnFinFileRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.MigrateUnFinFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrateUnFinFileRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MigrateUnFinFileRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.MigrateUnFinFileRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.MigrateUnFinFileRsp)
    MergeFrom(*source);
  }
}

void MigrateUnFinFileRsp::MergeFrom(const MigrateUnFinFileRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.MigrateUnFinFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MigrateUnFinFileRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.MigrateUnFinFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateUnFinFileRsp::CopyFrom(const MigrateUnFinFileRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.MigrateUnFinFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateUnFinFileRsp::IsInitialized() const {
  return true;
}

void MigrateUnFinFileRsp::InternalSwap(MigrateUnFinFileRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrateUnFinFileRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetMigrateReq::_Internal {
 public:
  using HasBits = decltype(std::declval<SetMigrateReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SetMigrateReq::SetMigrateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetMigrateReq)
}
SetMigrateReq::SetMigrateReq(const SetMigrateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetMigrateReq)
}

void SetMigrateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetMigrateReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

SetMigrateReq::~SetMigrateReq() {
  // @@protoc_insertion_point(destructor:ClientCos.SetMigrateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetMigrateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetMigrateReq::ArenaDtor(void* object) {
  SetMigrateReq* _this = reinterpret_cast< SetMigrateReq* >(object);
  (void)_this;
}
void SetMigrateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMigrateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMigrateReq& SetMigrateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetMigrateReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetMigrateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetMigrateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmpty();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMigrateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ClientCos.MigrateStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ClientCos::MigrateStatus_IsValid(val))) {
            _internal_set_status(static_cast<::ClientCos::MigrateStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetMigrateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetMigrateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional .ClientCos.MigrateStatus status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetMigrateReq)
  return target;
}

size_t SetMigrateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetMigrateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes path = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_path());
    }

    // optional .ClientCos.MigrateStatus status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMigrateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetMigrateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMigrateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetMigrateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetMigrateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetMigrateReq)
    MergeFrom(*source);
  }
}

void SetMigrateReq::MergeFrom(const SetMigrateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetMigrateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetMigrateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetMigrateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMigrateReq::CopyFrom(const SetMigrateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetMigrateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMigrateReq::IsInitialized() const {
  return true;
}

void SetMigrateReq::InternalSwap(SetMigrateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMigrateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetMigrateRsp::_Internal {
 public:
};

SetMigrateRsp::SetMigrateRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.SetMigrateRsp)
}
SetMigrateRsp::SetMigrateRsp(const SetMigrateRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.SetMigrateRsp)
}

void SetMigrateRsp::SharedCtor() {
}

SetMigrateRsp::~SetMigrateRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.SetMigrateRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetMigrateRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetMigrateRsp::ArenaDtor(void* object) {
  SetMigrateRsp* _this = reinterpret_cast< SetMigrateRsp* >(object);
  (void)_this;
}
void SetMigrateRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMigrateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMigrateRsp& SetMigrateRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetMigrateRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void SetMigrateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.SetMigrateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMigrateRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetMigrateRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.SetMigrateRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.SetMigrateRsp)
  return target;
}

size_t SetMigrateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.SetMigrateRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMigrateRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.SetMigrateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMigrateRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetMigrateRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.SetMigrateRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.SetMigrateRsp)
    MergeFrom(*source);
  }
}

void SetMigrateRsp::MergeFrom(const SetMigrateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.SetMigrateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetMigrateRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.SetMigrateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMigrateRsp::CopyFrom(const SetMigrateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.SetMigrateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMigrateRsp::IsInitialized() const {
  return true;
}

void SetMigrateRsp::InternalSwap(SetMigrateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMigrateRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DelNoHashFileReq::_Internal {
 public:
  using HasBits = decltype(std::declval<DelNoHashFileReq>()._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uuid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

DelNoHashFileReq::DelNoHashFileReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DelNoHashFileReq)
}
DelNoHashFileReq::DelNoHashFileReq(const DelNoHashFileReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_path()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uuid()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ClientCos.DelNoHashFileReq)
}

void DelNoHashFileReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DelNoHashFileReq_cosv4_5fclient_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DelNoHashFileReq::~DelNoHashFileReq() {
  // @@protoc_insertion_point(destructor:ClientCos.DelNoHashFileReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DelNoHashFileReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DelNoHashFileReq::ArenaDtor(void* object) {
  DelNoHashFileReq* _this = reinterpret_cast< DelNoHashFileReq* >(object);
  (void)_this;
}
void DelNoHashFileReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DelNoHashFileReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelNoHashFileReq& DelNoHashFileReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelNoHashFileReq_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DelNoHashFileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DelNoHashFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      uuid_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelNoHashFileReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DelNoHashFileReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DelNoHashFileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes path = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // optional bytes uuid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DelNoHashFileReq)
  return target;
}

size_t DelNoHashFileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DelNoHashFileReq)
  size_t total_size = 0;

  // required bytes path = 1;
  if (_internal_has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes uuid = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uuid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelNoHashFileReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DelNoHashFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelNoHashFileReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelNoHashFileReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DelNoHashFileReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DelNoHashFileReq)
    MergeFrom(*source);
  }
}

void DelNoHashFileReq::MergeFrom(const DelNoHashFileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DelNoHashFileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_uuid(from._internal_uuid());
    }
  }
}

void DelNoHashFileReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DelNoHashFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelNoHashFileReq::CopyFrom(const DelNoHashFileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DelNoHashFileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelNoHashFileReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void DelNoHashFileReq::InternalSwap(DelNoHashFileReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DelNoHashFileReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DelNoHashFileRsp::_Internal {
 public:
};

DelNoHashFileRsp::DelNoHashFileRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientCos.DelNoHashFileRsp)
}
DelNoHashFileRsp::DelNoHashFileRsp(const DelNoHashFileRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientCos.DelNoHashFileRsp)
}

void DelNoHashFileRsp::SharedCtor() {
}

DelNoHashFileRsp::~DelNoHashFileRsp() {
  // @@protoc_insertion_point(destructor:ClientCos.DelNoHashFileRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DelNoHashFileRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DelNoHashFileRsp::ArenaDtor(void* object) {
  DelNoHashFileRsp* _this = reinterpret_cast< DelNoHashFileRsp* >(object);
  (void)_this;
}
void DelNoHashFileRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DelNoHashFileRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DelNoHashFileRsp& DelNoHashFileRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DelNoHashFileRsp_cosv4_5fclient_2eproto.base);
  return *internal_default_instance();
}


void DelNoHashFileRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientCos.DelNoHashFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelNoHashFileRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DelNoHashFileRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientCos.DelNoHashFileRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientCos.DelNoHashFileRsp)
  return target;
}

size_t DelNoHashFileRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientCos.DelNoHashFileRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelNoHashFileRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientCos.DelNoHashFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelNoHashFileRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DelNoHashFileRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientCos.DelNoHashFileRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientCos.DelNoHashFileRsp)
    MergeFrom(*source);
  }
}

void DelNoHashFileRsp::MergeFrom(const DelNoHashFileRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientCos.DelNoHashFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DelNoHashFileRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientCos.DelNoHashFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelNoHashFileRsp::CopyFrom(const DelNoHashFileRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientCos.DelNoHashFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelNoHashFileRsp::IsInitialized() const {
  return true;
}

void DelNoHashFileRsp::InternalSwap(DelNoHashFileRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DelNoHashFileRsp::GetMetadata() const {
  return GetMetadataStatic();
}

PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::ClientCos::AppMsg,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::ClientCos::CosReqMsg >, 11, false >
  CosReqMsg_body(kCosReqMsgBodyFieldNumber, ::ClientCos::CosReqMsg::default_instance());
PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::ClientCos::AppMsg,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::ClientCos::CosRspMsg >, 11, false >
  CosRspMsg_body(kCosRspMsgBodyFieldNumber, ::ClientCos::CosRspMsg::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace ClientCos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ClientCos::CosAppMsg* Arena::CreateMaybeMessage< ::ClientCos::CosAppMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CosAppMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppMsg* Arena::CreateMaybeMessage< ::ClientCos::AppMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CosReqMsg* Arena::CreateMaybeMessage< ::ClientCos::CosReqMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CosReqMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CosRspMsg* Arena::CreateMaybeMessage< ::ClientCos::CosRspMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CosRspMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::Migrateinfo* Arena::CreateMaybeMessage< ::ClientCos::Migrateinfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::Migrateinfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ExtraAttr* Arena::CreateMaybeMessage< ::ClientCos::ExtraAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ExtraAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjExpireAttr* Arena::CreateMaybeMessage< ::ClientCos::ObjExpireAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjExpireAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::UploadAttr* Arena::CreateMaybeMessage< ::ClientCos::UploadAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::UploadAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasInfo* Arena::CreateMaybeMessage< ::ClientCos::CasInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketCreateReq* Arena::CreateMaybeMessage< ::ClientCos::BucketCreateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketCreateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketCreateRsp* Arena::CreateMaybeMessage< ::ClientCos::BucketCreateRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketCreateRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketAttrModifyReq* Arena::CreateMaybeMessage< ::ClientCos::BucketAttrModifyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketAttrModifyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketAttrModifyRsp* Arena::CreateMaybeMessage< ::ClientCos::BucketAttrModifyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketAttrModifyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketAttrQueryReq* Arena::CreateMaybeMessage< ::ClientCos::BucketAttrQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketAttrQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketAttrQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::BucketAttrQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketAttrQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DirCreateReq* Arena::CreateMaybeMessage< ::ClientCos::DirCreateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DirCreateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DirCreateRsp* Arena::CreateMaybeMessage< ::ClientCos::DirCreateRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DirCreateRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjAttrModifyReq* Arena::CreateMaybeMessage< ::ClientCos::ObjAttrModifyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjAttrModifyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjAttrModifyRsp* Arena::CreateMaybeMessage< ::ClientCos::ObjAttrModifyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjAttrModifyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SpObjAttrModifyReq* Arena::CreateMaybeMessage< ::ClientCos::SpObjAttrModifyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SpObjAttrModifyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SpObjAttrModifyRsp* Arena::CreateMaybeMessage< ::ClientCos::SpObjAttrModifyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SpObjAttrModifyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjAttrQueryReq* Arena::CreateMaybeMessage< ::ClientCos::ObjAttrQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjAttrQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjAttrQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::ObjAttrQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjAttrQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DeleteReq* Arena::CreateMaybeMessage< ::ClientCos::DeleteReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DeleteReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DeleteRsp* Arena::CreateMaybeMessage< ::ClientCos::DeleteRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DeleteRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListReq* Arena::CreateMaybeMessage< ::ClientCos::ListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListRsp* Arena::CreateMaybeMessage< ::ClientCos::ListRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListMutiobjReq* Arena::CreateMaybeMessage< ::ClientCos::ListMutiobjReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListMutiobjReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListMutiobjRsp* Arena::CreateMaybeMessage< ::ClientCos::ListMutiobjRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListMutiobjRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListObjVerReq* Arena::CreateMaybeMessage< ::ClientCos::ListObjVerReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListObjVerReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListObjVerRsp* Arena::CreateMaybeMessage< ::ClientCos::ListObjVerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListObjVerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::UnfinObjAttrModifyReq* Arena::CreateMaybeMessage< ::ClientCos::UnfinObjAttrModifyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::UnfinObjAttrModifyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::UnfinObjAttrModifyRsp* Arena::CreateMaybeMessage< ::ClientCos::UnfinObjAttrModifyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::UnfinObjAttrModifyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppAttrQueryReq* Arena::CreateMaybeMessage< ::ClientCos::AppAttrQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppAttrQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppAttrQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::AppAttrQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppAttrQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppAttrModifyReq* Arena::CreateMaybeMessage< ::ClientCos::AppAttrModifyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppAttrModifyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppAttrModifyRsp* Arena::CreateMaybeMessage< ::ClientCos::AppAttrModifyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppAttrModifyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::PreviewFileAttrQueryReq* Arena::CreateMaybeMessage< ::ClientCos::PreviewFileAttrQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::PreviewFileAttrQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::PreviewFileAttrQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::PreviewFileAttrQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::PreviewFileAttrQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjModTimeStampReq* Arena::CreateMaybeMessage< ::ClientCos::ObjModTimeStampReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjModTimeStampReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjModTimeStampRsp* Arena::CreateMaybeMessage< ::ClientCos::ObjModTimeStampRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjModTimeStampRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::delObj* Arena::CreateMaybeMessage< ::ClientCos::delObj >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::delObj >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileBatchDelReq* Arena::CreateMaybeMessage< ::ClientCos::FileBatchDelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileBatchDelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileDelState* Arena::CreateMaybeMessage< ::ClientCos::FileDelState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileDelState >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileBatchDelRsp* Arena::CreateMaybeMessage< ::ClientCos::FileBatchDelRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileBatchDelRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::UploadDelmarkerReq* Arena::CreateMaybeMessage< ::ClientCos::UploadDelmarkerReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::UploadDelmarkerReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::UploadDelmarkerRsp* Arena::CreateMaybeMessage< ::ClientCos::UploadDelmarkerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::UploadDelmarkerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileUnfinishAttrQueryReq* Arena::CreateMaybeMessage< ::ClientCos::FileUnfinishAttrQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileUnfinishAttrQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileUnfinishAttrQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::FileUnfinishAttrQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileUnfinishAttrQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ReduceLifecycleReq* Arena::CreateMaybeMessage< ::ClientCos::ReduceLifecycleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ReduceLifecycleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ReduceLifecycleRsp* Arena::CreateMaybeMessage< ::ClientCos::ReduceLifecycleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ReduceLifecycleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::RetrieveLifecycleReq* Arena::CreateMaybeMessage< ::ClientCos::RetrieveLifecycleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::RetrieveLifecycleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::RetrieveLifecycleRsp* Arena::CreateMaybeMessage< ::ClientCos::RetrieveLifecycleRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::RetrieveLifecycleRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::Opinfo* Arena::CreateMaybeMessage< ::ClientCos::Opinfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::Opinfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ReservedAttr* Arena::CreateMaybeMessage< ::ClientCos::ReservedAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ReservedAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CustomHeader* Arena::CreateMaybeMessage< ::ClientCos::CustomHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CustomHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CorsRule* Arena::CreateMaybeMessage< ::ClientCos::CorsRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CorsRule >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::Tag* Arena::CreateMaybeMessage< ::ClientCos::Tag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::Tag >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjTag* Arena::CreateMaybeMessage< ::ClientCos::ObjTag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::LockInfo* Arena::CreateMaybeMessage< ::ClientCos::LockInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::LockInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppAttr* Arena::CreateMaybeMessage< ::ClientCos::AppAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::KeyPair* Arena::CreateMaybeMessage< ::ClientCos::KeyPair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::KeyPair >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjItem* Arena::CreateMaybeMessage< ::ClientCos::ObjItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::MutiObjItem* Arena::CreateMaybeMessage< ::ClientCos::MutiObjItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::MutiObjItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DelObjExpireAttr* Arena::CreateMaybeMessage< ::ClientCos::DelObjExpireAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DelObjExpireAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DelExpireFileReq* Arena::CreateMaybeMessage< ::ClientCos::DelExpireFileReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DelExpireFileReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DelExpireFileRsp* Arena::CreateMaybeMessage< ::ClientCos::DelExpireFileRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DelExpireFileRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::StorageTypeAttr* Arena::CreateMaybeMessage< ::ClientCos::StorageTypeAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::StorageTypeAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::LFAttr* Arena::CreateMaybeMessage< ::ClientCos::LFAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::LFAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileDelReq* Arena::CreateMaybeMessage< ::ClientCos::FileDelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileDelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileDelRsp* Arena::CreateMaybeMessage< ::ClientCos::FileDelRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileDelRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ExpireFileDelNoVerReq* Arena::CreateMaybeMessage< ::ClientCos::ExpireFileDelNoVerReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ExpireFileDelNoVerReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ExpireFileDelNoverRsp* Arena::CreateMaybeMessage< ::ClientCos::ExpireFileDelNoverRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ExpireFileDelNoverRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ExpireFileDelVerReq* Arena::CreateMaybeMessage< ::ClientCos::ExpireFileDelVerReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ExpireFileDelVerReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ExpireFileDelVerRsp* Arena::CreateMaybeMessage< ::ClientCos::ExpireFileDelVerRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ExpireFileDelVerRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketPriAttrReq* Arena::CreateMaybeMessage< ::ClientCos::SetBucketPriAttrReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketPriAttrReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketPriAttrRsp* Arena::CreateMaybeMessage< ::ClientCos::SetBucketPriAttrRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketPriAttrRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileDownToCASReq* Arena::CreateMaybeMessage< ::ClientCos::FileDownToCASReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileDownToCASReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::FileDownToCASRsp* Arena::CreateMaybeMessage< ::ClientCos::FileDownToCASRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::FileDownToCASRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasObjAttrModifyReq* Arena::CreateMaybeMessage< ::ClientCos::CasObjAttrModifyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasObjAttrModifyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasObjAttrModifyRsp* Arena::CreateMaybeMessage< ::ClientCos::CasObjAttrModifyRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasObjAttrModifyRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasFileRecoverDelReq* Arena::CreateMaybeMessage< ::ClientCos::CasFileRecoverDelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasFileRecoverDelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasFileRecoverDelRsp* Arena::CreateMaybeMessage< ::ClientCos::CasFileRecoverDelRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasFileRecoverDelRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasObjRestoreErrReq* Arena::CreateMaybeMessage< ::ClientCos::CasObjRestoreErrReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasObjRestoreErrReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasObjRestoreErrRsp* Arena::CreateMaybeMessage< ::ClientCos::CasObjRestoreErrRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasObjRestoreErrRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasObjRestoreFinReq* Arena::CreateMaybeMessage< ::ClientCos::CasObjRestoreFinReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasObjRestoreFinReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CasObjRestoreFinRsp* Arena::CreateMaybeMessage< ::ClientCos::CasObjRestoreFinRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CasObjRestoreFinRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SpObjAttrQueryReq* Arena::CreateMaybeMessage< ::ClientCos::SpObjAttrQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SpObjAttrQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SpObjAttrQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::SpObjAttrQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SpObjAttrQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjModStorageTypeReq* Arena::CreateMaybeMessage< ::ClientCos::ObjModStorageTypeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjModStorageTypeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ObjModStorageTypeRsp* Arena::CreateMaybeMessage< ::ClientCos::ObjModStorageTypeRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ObjModStorageTypeRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SseInfo* Arena::CreateMaybeMessage< ::ClientCos::SseInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ErrorCodeReturned* Arena::CreateMaybeMessage< ::ClientCos::ErrorCodeReturned >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ErrorCodeReturned >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::PrefixReturned* Arena::CreateMaybeMessage< ::ClientCos::PrefixReturned >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::PrefixReturned >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::PrefixAndErrcodeReturned* Arena::CreateMaybeMessage< ::ClientCos::PrefixAndErrcodeReturned >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::PrefixAndErrcodeReturned >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::RoutingRule* Arena::CreateMaybeMessage< ::ClientCos::RoutingRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::RoutingRule >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::WebsiteInfo* Arena::CreateMaybeMessage< ::ClientCos::WebsiteInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::WebsiteInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketWebsiteInfoReq* Arena::CreateMaybeMessage< ::ClientCos::SetBucketWebsiteInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketWebsiteInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketWebsiteInfoRsp* Arena::CreateMaybeMessage< ::ClientCos::SetBucketWebsiteInfoRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketWebsiteInfoRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetCamAttrReq* Arena::CreateMaybeMessage< ::ClientCos::SetCamAttrReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetCamAttrReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetCamAttrRsp* Arena::CreateMaybeMessage< ::ClientCos::SetCamAttrRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetCamAttrRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketCamAuthQueryReq* Arena::CreateMaybeMessage< ::ClientCos::BucketCamAuthQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketCamAuthQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::BucketCamAuthQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::BucketCamAuthQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::BucketCamAuthQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CamAtuhItem* Arena::CreateMaybeMessage< ::ClientCos::CamAtuhItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CamAtuhItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppCamAuthQueryReq* Arena::CreateMaybeMessage< ::ClientCos::AppCamAuthQueryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppCamAuthQueryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AppCamAuthQueryRsp* Arena::CreateMaybeMessage< ::ClientCos::AppCamAuthQueryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AppCamAuthQueryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CgiArgs* Arena::CreateMaybeMessage< ::ClientCos::CgiArgs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CgiArgs >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CgiParams* Arena::CreateMaybeMessage< ::ClientCos::CgiParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CgiParams >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetObjectExtend* Arena::CreateMaybeMessage< ::ClientCos::GetObjectExtend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetObjectExtend >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CompleteMultiUploadExtend* Arena::CreateMaybeMessage< ::ClientCos::CompleteMultiUploadExtend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CompleteMultiUploadExtend >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::TrsfArgs* Arena::CreateMaybeMessage< ::ClientCos::TrsfArgs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::TrsfArgs >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AclInfo* Arena::CreateMaybeMessage< ::ClientCos::AclInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AclInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::AuthInfo* Arena::CreateMaybeMessage< ::ClientCos::AuthInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::AuthInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::OwnerInfo* Arena::CreateMaybeMessage< ::ClientCos::OwnerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::OwnerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CheckObjAclReq* Arena::CreateMaybeMessage< ::ClientCos::CheckObjAclReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CheckObjAclReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::CheckObjAclRsp* Arena::CreateMaybeMessage< ::ClientCos::CheckObjAclRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::CheckObjAclRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetObjAclReq* Arena::CreateMaybeMessage< ::ClientCos::SetObjAclReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetObjAclReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetObjAclRsp* Arena::CreateMaybeMessage< ::ClientCos::SetObjAclRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetObjAclRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetObjAclReq* Arena::CreateMaybeMessage< ::ClientCos::GetObjAclReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetObjAclReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetObjAclRsp* Arena::CreateMaybeMessage< ::ClientCos::GetObjAclRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetObjAclRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketUinReq* Arena::CreateMaybeMessage< ::ClientCos::SetBucketUinReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketUinReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketUinRsp* Arena::CreateMaybeMessage< ::ClientCos::SetBucketUinRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketUinRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetBucketUinReq* Arena::CreateMaybeMessage< ::ClientCos::GetBucketUinReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetBucketUinReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetBucketUinRsp* Arena::CreateMaybeMessage< ::ClientCos::GetBucketUinRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetBucketUinRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketLockReq* Arena::CreateMaybeMessage< ::ClientCos::SetBucketLockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketLockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketLockRsp* Arena::CreateMaybeMessage< ::ClientCos::SetBucketLockRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketLockRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetBucketLockReq* Arena::CreateMaybeMessage< ::ClientCos::GetBucketLockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetBucketLockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetBucketLockRsp* Arena::CreateMaybeMessage< ::ClientCos::GetBucketLockRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetBucketLockRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketInventoryReq* Arena::CreateMaybeMessage< ::ClientCos::SetBucketInventoryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketInventoryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetBucketInventoryRsp* Arena::CreateMaybeMessage< ::ClientCos::SetBucketInventoryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetBucketInventoryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetBucketInventoryReq* Arena::CreateMaybeMessage< ::ClientCos::GetBucketInventoryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetBucketInventoryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::GetBucketInventoryRsp* Arena::CreateMaybeMessage< ::ClientCos::GetBucketInventoryRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::GetBucketInventoryRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::COSTransToCASReq* Arena::CreateMaybeMessage< ::ClientCos::COSTransToCASReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::COSTransToCASReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::COSTransToCASRsp* Arena::CreateMaybeMessage< ::ClientCos::COSTransToCASRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::COSTransToCASRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListDirectReq* Arena::CreateMaybeMessage< ::ClientCos::ListDirectReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListDirectReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::ListDirectRsp* Arena::CreateMaybeMessage< ::ClientCos::ListDirectRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::ListDirectRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::MigrateFinFileReq* Arena::CreateMaybeMessage< ::ClientCos::MigrateFinFileReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::MigrateFinFileReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::MigrateFinFileRsp* Arena::CreateMaybeMessage< ::ClientCos::MigrateFinFileRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::MigrateFinFileRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::MigrateUnFinFileReq* Arena::CreateMaybeMessage< ::ClientCos::MigrateUnFinFileReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::MigrateUnFinFileReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::MigrateUnFinFileRsp* Arena::CreateMaybeMessage< ::ClientCos::MigrateUnFinFileRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::MigrateUnFinFileRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetMigrateReq* Arena::CreateMaybeMessage< ::ClientCos::SetMigrateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetMigrateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::SetMigrateRsp* Arena::CreateMaybeMessage< ::ClientCos::SetMigrateRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::SetMigrateRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DelNoHashFileReq* Arena::CreateMaybeMessage< ::ClientCos::DelNoHashFileReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DelNoHashFileReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientCos::DelNoHashFileRsp* Arena::CreateMaybeMessage< ::ClientCos::DelNoHashFileRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientCos::DelNoHashFileRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
